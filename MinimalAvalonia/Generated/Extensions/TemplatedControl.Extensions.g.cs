// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TemplatedControlExtensions
{
    // TemplateProperty

    public static T Template<T>(this T obj, Avalonia.Controls.Templates.IControlTemplate value) where T : Avalonia.Controls.Primitives.TemplatedControl
    {
        obj[Avalonia.Controls.Primitives.TemplatedControl.TemplateProperty] = value;
        return obj;
    }

    public static T Template<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Primitives.TemplatedControl
    {
        obj[Avalonia.Controls.Primitives.TemplatedControl.TemplateProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Template(this Avalonia.Controls.Primitives.TemplatedControl obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Primitives.TemplatedControl.TemplateProperty.Bind().WithMode(mode)];
    }

    // IsTemplateFocusTargetProperty

    public static T IsTemplateFocusTarget<T>(this T obj, System.Boolean value) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.Primitives.TemplatedControl.IsTemplateFocusTargetProperty] = value;
        return obj;
    }

    public static T IsTemplateFocusTarget<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.Primitives.TemplatedControl.IsTemplateFocusTargetProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding IsTemplateFocusTarget(this Avalonia.Controls.Control obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Primitives.TemplatedControl.IsTemplateFocusTargetProperty.Bind().WithMode(mode)];
    }
}
