// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TextDecorationExtensions
{
    // LocationProperty

    public static T Location<T>(this T obj, Avalonia.Media.TextDecorationLocation value) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.LocationProperty] = value;
        return obj;
    }

    public static T Location<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.LocationProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Location(this Avalonia.Media.TextDecoration obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.TextDecoration.LocationProperty.Bind().WithMode(mode)];
    }

    public static T LocationUnderline<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.LocationProperty] = Avalonia.Media.TextDecorationLocation.Underline;
        return obj;
    }

    public static T LocationOverline<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.LocationProperty] = Avalonia.Media.TextDecorationLocation.Overline;
        return obj;
    }

    public static T LocationStrikethrough<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.LocationProperty] = Avalonia.Media.TextDecorationLocation.Strikethrough;
        return obj;
    }

    public static T LocationBaseline<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.LocationProperty] = Avalonia.Media.TextDecorationLocation.Baseline;
        return obj;
    }

    // StrokeProperty

    public static T Stroke<T>(this T obj, Avalonia.Media.IBrush value) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeProperty] = value;
        return obj;
    }

    public static T Stroke<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Stroke(this Avalonia.Media.TextDecoration obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.TextDecoration.StrokeProperty.Bind().WithMode(mode)];
    }

    // StrokeThicknessUnitProperty

    public static T StrokeThicknessUnit<T>(this T obj, Avalonia.Media.TextDecorationUnit value) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeThicknessUnitProperty] = value;
        return obj;
    }

    public static T StrokeThicknessUnit<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeThicknessUnitProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding StrokeThicknessUnit(this Avalonia.Media.TextDecoration obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.TextDecoration.StrokeThicknessUnitProperty.Bind().WithMode(mode)];
    }

    public static T StrokeThicknessUnitFontRecommended<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeThicknessUnitProperty] = Avalonia.Media.TextDecorationUnit.FontRecommended;
        return obj;
    }

    public static T StrokeThicknessUnitFontRenderingEmSize<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeThicknessUnitProperty] = Avalonia.Media.TextDecorationUnit.FontRenderingEmSize;
        return obj;
    }

    public static T StrokeThicknessUnitPixel<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeThicknessUnitProperty] = Avalonia.Media.TextDecorationUnit.Pixel;
        return obj;
    }

    // StrokeDashArrayProperty

    public static T StrokeDashArray<T>(this T obj, Avalonia.Collections.AvaloniaList<System.Double> value) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeDashArrayProperty] = value;
        return obj;
    }

    public static T StrokeDashArray<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeDashArrayProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding StrokeDashArray(this Avalonia.Media.TextDecoration obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.TextDecoration.StrokeDashArrayProperty.Bind().WithMode(mode)];
    }

    // StrokeDashOffsetProperty

    public static T StrokeDashOffset<T>(this T obj, System.Double value) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeDashOffsetProperty] = value;
        return obj;
    }

    public static T StrokeDashOffset<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeDashOffsetProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding StrokeDashOffset(this Avalonia.Media.TextDecoration obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.TextDecoration.StrokeDashOffsetProperty.Bind().WithMode(mode)];
    }

    // StrokeThicknessProperty

    public static T StrokeThickness<T>(this T obj, System.Double value) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeThicknessProperty] = value;
        return obj;
    }

    public static T StrokeThickness<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeThicknessProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding StrokeThickness(this Avalonia.Media.TextDecoration obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.TextDecoration.StrokeThicknessProperty.Bind().WithMode(mode)];
    }

    // StrokeLineCapProperty

    public static T StrokeLineCap<T>(this T obj, Avalonia.Media.PenLineCap value) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeLineCapProperty] = value;
        return obj;
    }

    public static T StrokeLineCap<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeLineCapProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding StrokeLineCap(this Avalonia.Media.TextDecoration obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.TextDecoration.StrokeLineCapProperty.Bind().WithMode(mode)];
    }

    public static T StrokeLineCapFlat<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeLineCapProperty] = Avalonia.Media.PenLineCap.Flat;
        return obj;
    }

    public static T StrokeLineCapRound<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeLineCapProperty] = Avalonia.Media.PenLineCap.Round;
        return obj;
    }

    public static T StrokeLineCapSquare<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeLineCapProperty] = Avalonia.Media.PenLineCap.Square;
        return obj;
    }

    // StrokeOffsetProperty

    public static T StrokeOffset<T>(this T obj, System.Double value) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeOffsetProperty] = value;
        return obj;
    }

    public static T StrokeOffset<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeOffsetProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding StrokeOffset(this Avalonia.Media.TextDecoration obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.TextDecoration.StrokeOffsetProperty.Bind().WithMode(mode)];
    }

    // StrokeOffsetUnitProperty

    public static T StrokeOffsetUnit<T>(this T obj, Avalonia.Media.TextDecorationUnit value) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeOffsetUnitProperty] = value;
        return obj;
    }

    public static T StrokeOffsetUnit<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeOffsetUnitProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding StrokeOffsetUnit(this Avalonia.Media.TextDecoration obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.TextDecoration.StrokeOffsetUnitProperty.Bind().WithMode(mode)];
    }

    public static T StrokeOffsetUnitFontRecommended<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeOffsetUnitProperty] = Avalonia.Media.TextDecorationUnit.FontRecommended;
        return obj;
    }

    public static T StrokeOffsetUnitFontRenderingEmSize<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeOffsetUnitProperty] = Avalonia.Media.TextDecorationUnit.FontRenderingEmSize;
        return obj;
    }

    public static T StrokeOffsetUnitPixel<T>(this T obj) where T : Avalonia.Media.TextDecoration
    {
        obj[Avalonia.Media.TextDecoration.StrokeOffsetUnitProperty] = Avalonia.Media.TextDecorationUnit.Pixel;
        return obj;
    }
}
