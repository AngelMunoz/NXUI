// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class LabelExtensions
{
    // TargetProperty

    public static T Target<T>(this T obj, Avalonia.Input.IInputElement value) where T : Avalonia.Controls.Label
    {
        obj[Avalonia.Controls.Label.TargetProperty] = value;
        return obj;
    }

    public static T Target<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Label
    {
        obj[Avalonia.Controls.Label.TargetProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Target(this Avalonia.Controls.Label obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Label.TargetProperty.Bind().WithMode(mode)];
    }
}
