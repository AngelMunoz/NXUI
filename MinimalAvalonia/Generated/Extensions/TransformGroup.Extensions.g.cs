// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TransformGroupExtensions
{
    // ChildrenProperty

    public static T Children<T>(this T obj, Avalonia.Media.Transforms value) where T : Avalonia.Media.TransformGroup
    {
        obj[Avalonia.Media.TransformGroup.ChildrenProperty] = value;
        return obj;
    }

    public static T Children<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TransformGroup
    {
        obj[Avalonia.Media.TransformGroup.ChildrenProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T Children<T>(this T obj, IObservable<Avalonia.Media.Transforms> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.TransformGroup
    {
        obj[Avalonia.Media.TransformGroup.ChildrenProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindChildren(this Avalonia.Media.TransformGroup obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.TransformGroup.ChildrenProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Media.Transforms> ObserveChildren(this Avalonia.Media.TransformGroup obj)
    {
        return obj.GetObservable(Avalonia.Media.TransformGroup.ChildrenProperty);
    }
}
