// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class LayoutTransformControlExtensions
{
    // LayoutTransformProperty

    public static T LayoutTransform<T>(this T obj, Avalonia.Media.ITransform value) where T : Avalonia.Controls.LayoutTransformControl
    {
        obj[Avalonia.Controls.LayoutTransformControl.LayoutTransformProperty] = value;
        return obj;
    }

    public static T LayoutTransform<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.LayoutTransformControl
    {
        obj[Avalonia.Controls.LayoutTransformControl.LayoutTransformProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding LayoutTransform(this Avalonia.Controls.LayoutTransformControl obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.LayoutTransformControl.LayoutTransformProperty.Bind().WithMode(mode)];
    }

    // UseRenderTransformProperty

    public static T UseRenderTransform<T>(this T obj, System.Boolean value) where T : Avalonia.Controls.LayoutTransformControl
    {
        obj[Avalonia.Controls.LayoutTransformControl.UseRenderTransformProperty] = value;
        return obj;
    }

    public static T UseRenderTransform<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.LayoutTransformControl
    {
        obj[Avalonia.Controls.LayoutTransformControl.UseRenderTransformProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding UseRenderTransform(this Avalonia.Controls.LayoutTransformControl obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.LayoutTransformControl.UseRenderTransformProperty.Bind().WithMode(mode)];
    }
}
