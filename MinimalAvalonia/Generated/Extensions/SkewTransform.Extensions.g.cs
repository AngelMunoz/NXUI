// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class SkewTransformExtensions
{
    // AngleXProperty

    public static T AngleX<T>(this T obj, System.Double value) where T : Avalonia.Media.SkewTransform
    {
        obj[Avalonia.Media.SkewTransform.AngleXProperty] = value;
        return obj;
    }

    public static T AngleX<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.SkewTransform
    {
        obj[Avalonia.Media.SkewTransform.AngleXProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding AngleX(this Avalonia.Media.SkewTransform obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.SkewTransform.AngleXProperty.Bind().WithMode(mode)];
    }

    // AngleYProperty

    public static T AngleY<T>(this T obj, System.Double value) where T : Avalonia.Media.SkewTransform
    {
        obj[Avalonia.Media.SkewTransform.AngleYProperty] = value;
        return obj;
    }

    public static T AngleY<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.SkewTransform
    {
        obj[Avalonia.Media.SkewTransform.AngleYProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding AngleY(this Avalonia.Media.SkewTransform obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.SkewTransform.AngleYProperty.Bind().WithMode(mode)];
    }
}
