// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ViewboxExtensions
{
    // StretchProperty

    public static T Stretch<T>(this T obj, Avalonia.Media.Stretch value) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchProperty] = value;
        return obj;
    }

    public static T Stretch<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Stretch(this Avalonia.Controls.Viewbox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Viewbox.StretchProperty.Bind().WithMode(mode)];
    }

    public static T StretchNone<T>(this T obj) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchProperty] = Avalonia.Media.Stretch.None;
        return obj;
    }

    public static T StretchFill<T>(this T obj) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchProperty] = Avalonia.Media.Stretch.Fill;
        return obj;
    }

    public static T StretchUniform<T>(this T obj) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchProperty] = Avalonia.Media.Stretch.Uniform;
        return obj;
    }

    public static T StretchUniformToFill<T>(this T obj) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchProperty] = Avalonia.Media.Stretch.UniformToFill;
        return obj;
    }

    // StretchDirectionProperty

    public static T StretchDirection<T>(this T obj, Avalonia.Media.StretchDirection value) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchDirectionProperty] = value;
        return obj;
    }

    public static T StretchDirection<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchDirectionProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding StretchDirection(this Avalonia.Controls.Viewbox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Viewbox.StretchDirectionProperty.Bind().WithMode(mode)];
    }

    public static T StretchDirectionUpOnly<T>(this T obj) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchDirectionProperty] = Avalonia.Media.StretchDirection.UpOnly;
        return obj;
    }

    public static T StretchDirectionDownOnly<T>(this T obj) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchDirectionProperty] = Avalonia.Media.StretchDirection.DownOnly;
        return obj;
    }

    public static T StretchDirectionBoth<T>(this T obj) where T : Avalonia.Controls.Viewbox
    {
        obj[Avalonia.Controls.Viewbox.StretchDirectionProperty] = Avalonia.Media.StretchDirection.Both;
        return obj;
    }
}
