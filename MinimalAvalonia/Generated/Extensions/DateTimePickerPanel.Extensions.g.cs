// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class DateTimePickerPanelExtensions
{
    // ItemHeightProperty

    public static T ItemHeight<T>(this T obj, System.Double value) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.ItemHeightProperty] = value;
        return obj;
    }

    public static T ItemHeight<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.ItemHeightProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding ItemHeight(this Avalonia.Controls.Primitives.DateTimePickerPanel obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Primitives.DateTimePickerPanel.ItemHeightProperty.Bind().WithMode(mode)];
    }

    // PanelTypeProperty

    public static T PanelType<T>(this T obj, Avalonia.Controls.Primitives.DateTimePickerPanelType value) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.PanelTypeProperty] = value;
        return obj;
    }

    public static T PanelType<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.PanelTypeProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding PanelType(this Avalonia.Controls.Primitives.DateTimePickerPanel obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Primitives.DateTimePickerPanel.PanelTypeProperty.Bind().WithMode(mode)];
    }

    public static T PanelTypeYear<T>(this T obj) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.PanelTypeProperty] = Avalonia.Controls.Primitives.DateTimePickerPanelType.Year;
        return obj;
    }

    public static T PanelTypeMonth<T>(this T obj) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.PanelTypeProperty] = Avalonia.Controls.Primitives.DateTimePickerPanelType.Month;
        return obj;
    }

    public static T PanelTypeDay<T>(this T obj) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.PanelTypeProperty] = Avalonia.Controls.Primitives.DateTimePickerPanelType.Day;
        return obj;
    }

    public static T PanelTypeHour<T>(this T obj) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.PanelTypeProperty] = Avalonia.Controls.Primitives.DateTimePickerPanelType.Hour;
        return obj;
    }

    public static T PanelTypeMinute<T>(this T obj) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.PanelTypeProperty] = Avalonia.Controls.Primitives.DateTimePickerPanelType.Minute;
        return obj;
    }

    public static T PanelTypeTimePeriod<T>(this T obj) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.PanelTypeProperty] = Avalonia.Controls.Primitives.DateTimePickerPanelType.TimePeriod;
        return obj;
    }

    // ItemFormatProperty

    public static T ItemFormat<T>(this T obj, System.String value) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.ItemFormatProperty] = value;
        return obj;
    }

    public static T ItemFormat<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.ItemFormatProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding ItemFormat(this Avalonia.Controls.Primitives.DateTimePickerPanel obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Primitives.DateTimePickerPanel.ItemFormatProperty.Bind().WithMode(mode)];
    }

    // ShouldLoopProperty

    public static T ShouldLoop<T>(this T obj, System.Boolean value) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.ShouldLoopProperty] = value;
        return obj;
    }

    public static T ShouldLoop<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Primitives.DateTimePickerPanel
    {
        obj[Avalonia.Controls.Primitives.DateTimePickerPanel.ShouldLoopProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding ShouldLoop(this Avalonia.Controls.Primitives.DateTimePickerPanel obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Primitives.DateTimePickerPanel.ShouldLoopProperty.Bind().WithMode(mode)];
    }
}
