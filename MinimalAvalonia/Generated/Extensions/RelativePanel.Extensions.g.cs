// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class RelativePanelExtensions
{
    // AboveProperty

    public static T Above<T>(this T obj, System.Object value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AboveProperty] = value;
        return obj;
    }

    public static T Above<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AboveProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T Above<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AboveProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAbove(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AboveProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveAbove(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AboveProperty);
    }

    // AlignBottomWithPanelProperty

    public static T AlignBottomWithPanel<T>(this T obj, System.Boolean value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignBottomWithPanelProperty] = value;
        return obj;
    }

    public static T AlignBottomWithPanel<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignBottomWithPanelProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignBottomWithPanel<T>(this T obj, IObservable<System.Boolean> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignBottomWithPanelProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignBottomWithPanel(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignBottomWithPanelProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Boolean> ObserveAlignBottomWithPanel(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignBottomWithPanelProperty);
    }

    // AlignBottomWithProperty

    public static T AlignBottomWith<T>(this T obj, System.Object value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignBottomWithProperty] = value;
        return obj;
    }

    public static T AlignBottomWith<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignBottomWithProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignBottomWith<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignBottomWithProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignBottomWith(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignBottomWithProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveAlignBottomWith(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignBottomWithProperty);
    }

    // AlignHorizontalCenterWithPanelProperty

    public static T AlignHorizontalCenterWithPanel<T>(this T obj, System.Boolean value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignHorizontalCenterWithPanelProperty] = value;
        return obj;
    }

    public static T AlignHorizontalCenterWithPanel<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignHorizontalCenterWithPanelProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignHorizontalCenterWithPanel<T>(this T obj, IObservable<System.Boolean> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignHorizontalCenterWithPanelProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignHorizontalCenterWithPanel(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignHorizontalCenterWithPanelProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Boolean> ObserveAlignHorizontalCenterWithPanel(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignHorizontalCenterWithPanelProperty);
    }

    // AlignLeftWithPanelProperty

    public static T AlignLeftWithPanel<T>(this T obj, System.Boolean value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignLeftWithPanelProperty] = value;
        return obj;
    }

    public static T AlignLeftWithPanel<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignLeftWithPanelProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignLeftWithPanel<T>(this T obj, IObservable<System.Boolean> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignLeftWithPanelProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignLeftWithPanel(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignLeftWithPanelProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Boolean> ObserveAlignLeftWithPanel(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignLeftWithPanelProperty);
    }

    // AlignLeftWithProperty

    public static T AlignLeftWith<T>(this T obj, System.Object value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignLeftWithProperty] = value;
        return obj;
    }

    public static T AlignLeftWith<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignLeftWithProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignLeftWith<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignLeftWithProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignLeftWith(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignLeftWithProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveAlignLeftWith(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignLeftWithProperty);
    }

    // AlignRightWithPanelProperty

    public static T AlignRightWithPanel<T>(this T obj, System.Boolean value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignRightWithPanelProperty] = value;
        return obj;
    }

    public static T AlignRightWithPanel<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignRightWithPanelProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignRightWithPanel<T>(this T obj, IObservable<System.Boolean> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignRightWithPanelProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignRightWithPanel(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignRightWithPanelProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Boolean> ObserveAlignRightWithPanel(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignRightWithPanelProperty);
    }

    // AlignRightWithProperty

    public static T AlignRightWith<T>(this T obj, System.Object value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignRightWithProperty] = value;
        return obj;
    }

    public static T AlignRightWith<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignRightWithProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignRightWith<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignRightWithProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignRightWith(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignRightWithProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveAlignRightWith(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignRightWithProperty);
    }

    // AlignTopWithPanelProperty

    public static T AlignTopWithPanel<T>(this T obj, System.Boolean value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignTopWithPanelProperty] = value;
        return obj;
    }

    public static T AlignTopWithPanel<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignTopWithPanelProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignTopWithPanel<T>(this T obj, IObservable<System.Boolean> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignTopWithPanelProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignTopWithPanel(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignTopWithPanelProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Boolean> ObserveAlignTopWithPanel(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignTopWithPanelProperty);
    }

    // AlignTopWithProperty

    public static T AlignTopWith<T>(this T obj, System.Object value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignTopWithProperty] = value;
        return obj;
    }

    public static T AlignTopWith<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignTopWithProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignTopWith<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignTopWithProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignTopWith(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignTopWithProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveAlignTopWith(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignTopWithProperty);
    }

    // AlignVerticalCenterWithPanelProperty

    public static T AlignVerticalCenterWithPanel<T>(this T obj, System.Boolean value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignVerticalCenterWithPanelProperty] = value;
        return obj;
    }

    public static T AlignVerticalCenterWithPanel<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignVerticalCenterWithPanelProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignVerticalCenterWithPanel<T>(this T obj, IObservable<System.Boolean> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignVerticalCenterWithPanelProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignVerticalCenterWithPanel(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignVerticalCenterWithPanelProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Boolean> ObserveAlignVerticalCenterWithPanel(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignVerticalCenterWithPanelProperty);
    }

    // AlignVerticalCenterWithProperty

    public static T AlignVerticalCenterWith<T>(this T obj, System.Object value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignVerticalCenterWithProperty] = value;
        return obj;
    }

    public static T AlignVerticalCenterWith<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignVerticalCenterWithProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T AlignVerticalCenterWith<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.AlignVerticalCenterWithProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindAlignVerticalCenterWith(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.AlignVerticalCenterWithProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveAlignVerticalCenterWith(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.AlignVerticalCenterWithProperty);
    }

    // BelowProperty

    public static T Below<T>(this T obj, System.Object value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.BelowProperty] = value;
        return obj;
    }

    public static T Below<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.BelowProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T Below<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.BelowProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindBelow(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.BelowProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveBelow(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.BelowProperty);
    }

    // LeftOfProperty

    public static T LeftOf<T>(this T obj, System.Object value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.LeftOfProperty] = value;
        return obj;
    }

    public static T LeftOf<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.LeftOfProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T LeftOf<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.LeftOfProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindLeftOf(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.LeftOfProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveLeftOf(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.LeftOfProperty);
    }

    // RightOfProperty

    public static T RightOf<T>(this T obj, System.Object value) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.RightOfProperty] = value;
        return obj;
    }

    public static T RightOf<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.RightOfProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T RightOf<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Layout.Layoutable
    {
        obj[Avalonia.Controls.RelativePanel.RightOfProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindRightOf(this Avalonia.Layout.Layoutable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RelativePanel.RightOfProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveRightOf(this Avalonia.Layout.Layoutable obj)
    {
        return obj.GetObservable(Avalonia.Controls.RelativePanel.RightOfProperty);
    }
}
