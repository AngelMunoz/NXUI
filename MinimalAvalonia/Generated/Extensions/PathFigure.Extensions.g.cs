// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class PathFigureExtensions
{
    // IsClosedProperty

    public static Avalonia.Media.PathFigure IsClosed(this Avalonia.Media.PathFigure obj, System.Boolean value)
    {
        obj[Avalonia.Media.PathFigure.IsClosedProperty] = value;
        return obj;
    }

    public static Avalonia.Media.PathFigure IsClosed(this Avalonia.Media.PathFigure obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        obj[Avalonia.Media.PathFigure.IsClosedProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Media.PathFigure IsClosed(this Avalonia.Media.PathFigure obj, IObservable<System.Boolean> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        obj[Avalonia.Media.PathFigure.IsClosedProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindIsClosed(this Avalonia.Media.PathFigure obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.PathFigure.IsClosedProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Boolean> ObserveIsClosed(this Avalonia.Media.PathFigure obj)
    {
        return obj.GetObservable(Avalonia.Media.PathFigure.IsClosedProperty);
    }

    public static Avalonia.Media.PathFigure OnIsClosed(this Avalonia.Media.PathFigure obj, Action<IObservable<System.Boolean>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Media.PathFigure.IsClosedProperty);
        handler(observable);
        return obj;
    }

    // IsFilledProperty

    public static Avalonia.Media.PathFigure IsFilled(this Avalonia.Media.PathFigure obj, System.Boolean value)
    {
        obj[Avalonia.Media.PathFigure.IsFilledProperty] = value;
        return obj;
    }

    public static Avalonia.Media.PathFigure IsFilled(this Avalonia.Media.PathFigure obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        obj[Avalonia.Media.PathFigure.IsFilledProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Media.PathFigure IsFilled(this Avalonia.Media.PathFigure obj, IObservable<System.Boolean> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        obj[Avalonia.Media.PathFigure.IsFilledProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindIsFilled(this Avalonia.Media.PathFigure obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.PathFigure.IsFilledProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Boolean> ObserveIsFilled(this Avalonia.Media.PathFigure obj)
    {
        return obj.GetObservable(Avalonia.Media.PathFigure.IsFilledProperty);
    }

    public static Avalonia.Media.PathFigure OnIsFilled(this Avalonia.Media.PathFigure obj, Action<IObservable<System.Boolean>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Media.PathFigure.IsFilledProperty);
        handler(observable);
        return obj;
    }

    // SegmentsProperty

    public static Avalonia.Media.PathFigure Segments(this Avalonia.Media.PathFigure obj, Avalonia.Media.PathSegments value)
    {
        obj[Avalonia.Media.PathFigure.SegmentsProperty] = value;
        return obj;
    }

    public static Avalonia.Media.PathFigure Segments(this Avalonia.Media.PathFigure obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        obj[Avalonia.Media.PathFigure.SegmentsProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Media.PathFigure Segments(this Avalonia.Media.PathFigure obj, IObservable<Avalonia.Media.PathSegments> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        obj[Avalonia.Media.PathFigure.SegmentsProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindSegments(this Avalonia.Media.PathFigure obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.PathFigure.SegmentsProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Media.PathSegments> ObserveSegments(this Avalonia.Media.PathFigure obj)
    {
        return obj.GetObservable(Avalonia.Media.PathFigure.SegmentsProperty);
    }

    public static Avalonia.Media.PathFigure OnSegments(this Avalonia.Media.PathFigure obj, Action<IObservable<Avalonia.Media.PathSegments>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Media.PathFigure.SegmentsProperty);
        handler(observable);
        return obj;
    }

    // StartPointProperty

    public static Avalonia.Media.PathFigure StartPoint(this Avalonia.Media.PathFigure obj, Avalonia.Point value)
    {
        obj[Avalonia.Media.PathFigure.StartPointProperty] = value;
        return obj;
    }

    public static Avalonia.Media.PathFigure StartPoint(this Avalonia.Media.PathFigure obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        obj[Avalonia.Media.PathFigure.StartPointProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Media.PathFigure StartPoint(this Avalonia.Media.PathFigure obj, IObservable<Avalonia.Point> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        obj[Avalonia.Media.PathFigure.StartPointProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindStartPoint(this Avalonia.Media.PathFigure obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.PathFigure.StartPointProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Point> ObserveStartPoint(this Avalonia.Media.PathFigure obj)
    {
        return obj.GetObservable(Avalonia.Media.PathFigure.StartPointProperty);
    }

    public static Avalonia.Media.PathFigure OnStartPoint(this Avalonia.Media.PathFigure obj, Action<IObservable<Avalonia.Point>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Media.PathFigure.StartPointProperty);
        handler(observable);
        return obj;
    }
}
