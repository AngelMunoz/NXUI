// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class LineExtensions
{
    // StartPointProperty

    public static T StartPoint<T>(this T obj, Avalonia.Point value) where T : Avalonia.Controls.Shapes.Line
    {
        obj[Avalonia.Controls.Shapes.Line.StartPointProperty] = value;
        return obj;
    }

    public static T StartPoint<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Shapes.Line
    {
        obj[Avalonia.Controls.Shapes.Line.StartPointProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding StartPoint(this Avalonia.Controls.Shapes.Line obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Shapes.Line.StartPointProperty.Bind().WithMode(mode)];
    }

    // EndPointProperty

    public static T EndPoint<T>(this T obj, Avalonia.Point value) where T : Avalonia.Controls.Shapes.Line
    {
        obj[Avalonia.Controls.Shapes.Line.EndPointProperty] = value;
        return obj;
    }

    public static T EndPoint<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Shapes.Line
    {
        obj[Avalonia.Controls.Shapes.Line.EndPointProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding EndPoint(this Avalonia.Controls.Shapes.Line obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Shapes.Line.EndPointProperty.Bind().WithMode(mode)];
    }
}
