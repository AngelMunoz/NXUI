// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TreeViewExtensions
{
    // SelectedItemProperty

    public static T SelectedItem<T>(this T obj, System.Object value) where T : Avalonia.Controls.TreeView
    {
        obj[Avalonia.Controls.TreeView.SelectedItemProperty] = value;
        return obj;
    }

    public static T SelectedItem<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.TreeView
    {
        obj[Avalonia.Controls.TreeView.SelectedItemProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T SelectedItem<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.TreeView
    {
        obj[Avalonia.Controls.TreeView.SelectedItemProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindSelectedItem(this Avalonia.Controls.TreeView obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.TreeView.SelectedItemProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveSelectedItem(this Avalonia.Controls.TreeView obj)
    {
        return obj.GetObservable(Avalonia.Controls.TreeView.SelectedItemProperty);
    }

    public static T OnSelectedItem<T>(this T obj, Action<IObservable<System.Object>> handler) where T : Avalonia.Controls.TreeView
    {
        var observable = obj.GetObservable(Avalonia.Controls.TreeView.SelectedItemProperty);
        handler(observable);
        return obj;
    }

    // SelectedItemsProperty

    public static T SelectedItems<T>(this T obj, System.Collections.IList value) where T : Avalonia.Controls.TreeView
    {
        obj[Avalonia.Controls.TreeView.SelectedItemsProperty] = value;
        return obj;
    }

    public static T SelectedItems<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.TreeView
    {
        obj[Avalonia.Controls.TreeView.SelectedItemsProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T SelectedItems<T>(this T obj, IObservable<System.Collections.IList> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.TreeView
    {
        obj[Avalonia.Controls.TreeView.SelectedItemsProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindSelectedItems(this Avalonia.Controls.TreeView obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.TreeView.SelectedItemsProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Collections.IList> ObserveSelectedItems(this Avalonia.Controls.TreeView obj)
    {
        return obj.GetObservable(Avalonia.Controls.TreeView.SelectedItemsProperty);
    }

    public static T OnSelectedItems<T>(this T obj, Action<IObservable<System.Collections.IList>> handler) where T : Avalonia.Controls.TreeView
    {
        var observable = obj.GetObservable(Avalonia.Controls.TreeView.SelectedItemsProperty);
        handler(observable);
        return obj;
    }
}
