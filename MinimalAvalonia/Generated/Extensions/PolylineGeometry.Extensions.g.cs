// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class PolylineGeometryExtensions
{
    // PointsProperty

    public static T Points<T>(this T obj, Avalonia.Points value) where T : Avalonia.Media.PolylineGeometry
    {
        obj[Avalonia.Media.PolylineGeometry.PointsProperty] = value;
        return obj;
    }

    public static T Points<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.PolylineGeometry
    {
        obj[Avalonia.Media.PolylineGeometry.PointsProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Points(this Avalonia.Media.PolylineGeometry obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.PolylineGeometry.PointsProperty.Bind().WithMode(mode)];
    }

    // IsFilledProperty

    public static T IsFilled<T>(this T obj, System.Boolean value) where T : Avalonia.Media.PolylineGeometry
    {
        obj[Avalonia.Media.PolylineGeometry.IsFilledProperty] = value;
        return obj;
    }

    public static T IsFilled<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.PolylineGeometry
    {
        obj[Avalonia.Media.PolylineGeometry.IsFilledProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding IsFilled(this Avalonia.Media.PolylineGeometry obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.PolylineGeometry.IsFilledProperty.Bind().WithMode(mode)];
    }
}
