// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class FluentThemeExtensions
{
    // ModeProperty

    public static T Mode<T>(this T obj, Avalonia.Themes.Fluent.FluentThemeMode value) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty] = value;
        return obj;
    }

    public static T Mode<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Mode(this Avalonia.Themes.Fluent.FluentTheme obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty.Bind().WithMode(mode)];
    }

    public static T ModeLight<T>(this T obj) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty] = Avalonia.Themes.Fluent.FluentThemeMode.Light;
        return obj;
    }

    public static T ModeDark<T>(this T obj) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty] = Avalonia.Themes.Fluent.FluentThemeMode.Dark;
        return obj;
    }

    // DensityStyleProperty

    public static T DensityStyle<T>(this T obj, Avalonia.Themes.Fluent.DensityStyle value) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty] = value;
        return obj;
    }

    public static T DensityStyle<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding DensityStyle(this Avalonia.Themes.Fluent.FluentTheme obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty.Bind().WithMode(mode)];
    }

    public static T DensityStyleNormal<T>(this T obj) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty] = Avalonia.Themes.Fluent.DensityStyle.Normal;
        return obj;
    }

    public static T DensityStyleCompact<T>(this T obj) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty] = Avalonia.Themes.Fluent.DensityStyle.Compact;
        return obj;
    }
}
