// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ToggleSwitchExtensions
{
    // OffContentProperty

    public static T OffContent<T>(this T obj, System.Object value) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OffContentProperty] = value;
        return obj;
    }

    public static T OffContent<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OffContentProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T OffContent<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OffContentProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindOffContent(this Avalonia.Controls.ToggleSwitch obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ToggleSwitch.OffContentProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveOffContent(this Avalonia.Controls.ToggleSwitch obj)
    {
        return obj.GetObservable(Avalonia.Controls.ToggleSwitch.OffContentProperty);
    }

    // OffContentTemplateProperty

    public static T OffContentTemplate<T>(this T obj, Avalonia.Controls.Templates.IDataTemplate value) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OffContentTemplateProperty] = value;
        return obj;
    }

    public static T OffContentTemplate<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OffContentTemplateProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T OffContentTemplate<T>(this T obj, IObservable<Avalonia.Controls.Templates.IDataTemplate> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OffContentTemplateProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindOffContentTemplate(this Avalonia.Controls.ToggleSwitch obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ToggleSwitch.OffContentTemplateProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Controls.Templates.IDataTemplate> ObserveOffContentTemplate(this Avalonia.Controls.ToggleSwitch obj)
    {
        return obj.GetObservable(Avalonia.Controls.ToggleSwitch.OffContentTemplateProperty);
    }

    // OnContentProperty

    public static T OnContent<T>(this T obj, System.Object value) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OnContentProperty] = value;
        return obj;
    }

    public static T OnContent<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OnContentProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T OnContent<T>(this T obj, IObservable<System.Object> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OnContentProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindOnContent(this Avalonia.Controls.ToggleSwitch obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ToggleSwitch.OnContentProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveOnContent(this Avalonia.Controls.ToggleSwitch obj)
    {
        return obj.GetObservable(Avalonia.Controls.ToggleSwitch.OnContentProperty);
    }

    // OnContentTemplateProperty

    public static T OnContentTemplate<T>(this T obj, Avalonia.Controls.Templates.IDataTemplate value) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OnContentTemplateProperty] = value;
        return obj;
    }

    public static T OnContentTemplate<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OnContentTemplateProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T OnContentTemplate<T>(this T obj, IObservable<Avalonia.Controls.Templates.IDataTemplate> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ToggleSwitch
    {
        obj[Avalonia.Controls.ToggleSwitch.OnContentTemplateProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindOnContentTemplate(this Avalonia.Controls.ToggleSwitch obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ToggleSwitch.OnContentTemplateProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Controls.Templates.IDataTemplate> ObserveOnContentTemplate(this Avalonia.Controls.ToggleSwitch obj)
    {
        return obj.GetObservable(Avalonia.Controls.ToggleSwitch.OnContentTemplateProperty);
    }
}
