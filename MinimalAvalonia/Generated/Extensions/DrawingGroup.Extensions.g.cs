// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class DrawingGroupExtensions
{
    // OpacityProperty

    public static T Opacity<T>(this T obj, System.Double value) where T : Avalonia.Media.DrawingGroup
    {
        obj[Avalonia.Media.DrawingGroup.OpacityProperty] = value;
        return obj;
    }

    public static T Opacity<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.DrawingGroup
    {
        obj[Avalonia.Media.DrawingGroup.OpacityProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Opacity(this Avalonia.Media.DrawingGroup obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.DrawingGroup.OpacityProperty.Bind().WithMode(mode)];
    }

    // TransformProperty

    public static T Transform<T>(this T obj, Avalonia.Media.Transform value) where T : Avalonia.Media.DrawingGroup
    {
        obj[Avalonia.Media.DrawingGroup.TransformProperty] = value;
        return obj;
    }

    public static T Transform<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.DrawingGroup
    {
        obj[Avalonia.Media.DrawingGroup.TransformProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Transform(this Avalonia.Media.DrawingGroup obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.DrawingGroup.TransformProperty.Bind().WithMode(mode)];
    }

    // ClipGeometryProperty

    public static T ClipGeometry<T>(this T obj, Avalonia.Media.Geometry value) where T : Avalonia.Media.DrawingGroup
    {
        obj[Avalonia.Media.DrawingGroup.ClipGeometryProperty] = value;
        return obj;
    }

    public static T ClipGeometry<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.DrawingGroup
    {
        obj[Avalonia.Media.DrawingGroup.ClipGeometryProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding ClipGeometry(this Avalonia.Media.DrawingGroup obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.DrawingGroup.ClipGeometryProperty.Bind().WithMode(mode)];
    }

    // OpacityMaskProperty

    public static T OpacityMask<T>(this T obj, Avalonia.Media.IBrush value) where T : Avalonia.Media.DrawingGroup
    {
        obj[Avalonia.Media.DrawingGroup.OpacityMaskProperty] = value;
        return obj;
    }

    public static T OpacityMask<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.DrawingGroup
    {
        obj[Avalonia.Media.DrawingGroup.OpacityMaskProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding OpacityMask(this Avalonia.Media.DrawingGroup obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.DrawingGroup.OpacityMaskProperty.Bind().WithMode(mode)];
    }
}
