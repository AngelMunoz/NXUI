// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class AutoCompleteBoxExtensions
{
    // MinimumPrefixLengthProperty

    public static T MinimumPrefixLength<T>(this T obj, System.Int32 value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.MinimumPrefixLengthProperty] = value;
        return obj;
    }

    public static T MinimumPrefixLength<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.MinimumPrefixLengthProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding MinimumPrefixLength(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.MinimumPrefixLengthProperty.Bind().WithMode(mode)];
    }

    // MinimumPopulateDelayProperty

    public static T MinimumPopulateDelay<T>(this T obj, System.TimeSpan value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.MinimumPopulateDelayProperty] = value;
        return obj;
    }

    public static T MinimumPopulateDelay<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.MinimumPopulateDelayProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding MinimumPopulateDelay(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.MinimumPopulateDelayProperty.Bind().WithMode(mode)];
    }

    // MaxDropDownHeightProperty

    public static T MaxDropDownHeight<T>(this T obj, System.Double value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.MaxDropDownHeightProperty] = value;
        return obj;
    }

    public static T MaxDropDownHeight<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.MaxDropDownHeightProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding MaxDropDownHeight(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.MaxDropDownHeightProperty.Bind().WithMode(mode)];
    }

    // IsTextCompletionEnabledProperty

    public static T IsTextCompletionEnabled<T>(this T obj, System.Boolean value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.IsTextCompletionEnabledProperty] = value;
        return obj;
    }

    public static T IsTextCompletionEnabled<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.IsTextCompletionEnabledProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding IsTextCompletionEnabled(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.IsTextCompletionEnabledProperty.Bind().WithMode(mode)];
    }

    // ItemTemplateProperty

    public static T ItemTemplate<T>(this T obj, Avalonia.Controls.Templates.IDataTemplate value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.ItemTemplateProperty] = value;
        return obj;
    }

    public static T ItemTemplate<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.ItemTemplateProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding ItemTemplate(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.ItemTemplateProperty.Bind().WithMode(mode)];
    }

    // IsDropDownOpenProperty

    public static T IsDropDownOpen<T>(this T obj, System.Boolean value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.IsDropDownOpenProperty] = value;
        return obj;
    }

    public static T IsDropDownOpen<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.IsDropDownOpenProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding IsDropDownOpen(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.IsDropDownOpenProperty.Bind().WithMode(mode)];
    }

    // SelectedItemProperty

    public static T SelectedItem<T>(this T obj, System.Object value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.SelectedItemProperty] = value;
        return obj;
    }

    public static T SelectedItem<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.SelectedItemProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding SelectedItem(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.SelectedItemProperty.Bind().WithMode(mode)];
    }

    // TextProperty

    public static T Text<T>(this T obj, System.String value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.TextProperty] = value;
        return obj;
    }

    public static T Text<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.TextProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Text(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.TextProperty.Bind().WithMode(mode)];
    }

    // SearchTextProperty

    public static Avalonia.Data.IBinding SearchText(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.SearchTextProperty.Bind().WithMode(mode)];
    }

    // FilterModeProperty

    public static T FilterMode<T>(this T obj, Avalonia.Controls.AutoCompleteFilterMode value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = value;
        return obj;
    }

    public static T FilterMode<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding FilterMode(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty.Bind().WithMode(mode)];
    }

    public static T FilterModeNone<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.None;
        return obj;
    }

    public static T FilterModeStartsWith<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.StartsWith;
        return obj;
    }

    public static T FilterModeStartsWithCaseSensitive<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.StartsWithCaseSensitive;
        return obj;
    }

    public static T FilterModeStartsWithOrdinal<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.StartsWithOrdinal;
        return obj;
    }

    public static T FilterModeStartsWithOrdinalCaseSensitive<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive;
        return obj;
    }

    public static T FilterModeContains<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.Contains;
        return obj;
    }

    public static T FilterModeContainsCaseSensitive<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.ContainsCaseSensitive;
        return obj;
    }

    public static T FilterModeContainsOrdinal<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.ContainsOrdinal;
        return obj;
    }

    public static T FilterModeContainsOrdinalCaseSensitive<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.ContainsOrdinalCaseSensitive;
        return obj;
    }

    public static T FilterModeEquals<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.Equals;
        return obj;
    }

    public static T FilterModeEqualsCaseSensitive<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.EqualsCaseSensitive;
        return obj;
    }

    public static T FilterModeEqualsOrdinal<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.EqualsOrdinal;
        return obj;
    }

    public static T FilterModeEqualsOrdinalCaseSensitive<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.EqualsOrdinalCaseSensitive;
        return obj;
    }

    public static T FilterModeCustom<T>(this T obj) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.FilterModeProperty] = Avalonia.Controls.AutoCompleteFilterMode.Custom;
        return obj;
    }

    // ItemFilterProperty

    public static T ItemFilter<T>(this T obj, Avalonia.Controls.AutoCompleteFilterPredicate<System.Object> value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.ItemFilterProperty] = value;
        return obj;
    }

    public static T ItemFilter<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.ItemFilterProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding ItemFilter(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.ItemFilterProperty.Bind().WithMode(mode)];
    }

    // TextFilterProperty

    public static T TextFilter<T>(this T obj, Avalonia.Controls.AutoCompleteFilterPredicate<System.String> value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.TextFilterProperty] = value;
        return obj;
    }

    public static T TextFilter<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.TextFilterProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding TextFilter(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.TextFilterProperty.Bind().WithMode(mode)];
    }

    // ItemSelectorProperty

    public static T ItemSelector<T>(this T obj, Avalonia.Controls.AutoCompleteSelector<System.Object> value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.ItemSelectorProperty] = value;
        return obj;
    }

    public static T ItemSelector<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.ItemSelectorProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding ItemSelector(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.ItemSelectorProperty.Bind().WithMode(mode)];
    }

    // TextSelectorProperty

    public static T TextSelector<T>(this T obj, Avalonia.Controls.AutoCompleteSelector<System.String> value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.TextSelectorProperty] = value;
        return obj;
    }

    public static T TextSelector<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.TextSelectorProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding TextSelector(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.TextSelectorProperty.Bind().WithMode(mode)];
    }

    // ItemsProperty

    public static T Items<T>(this T obj, System.Collections.IEnumerable value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.ItemsProperty] = value;
        return obj;
    }

    public static T Items<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.ItemsProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Items(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.ItemsProperty.Bind().WithMode(mode)];
    }

    // AsyncPopulatorProperty

    public static T AsyncPopulator<T>(this T obj, System.Func<System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<System.Object>>> value) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.AsyncPopulatorProperty] = value;
        return obj;
    }

    public static T AsyncPopulator<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.AutoCompleteBox
    {
        obj[Avalonia.Controls.AutoCompleteBox.AsyncPopulatorProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding AsyncPopulator(this Avalonia.Controls.AutoCompleteBox obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.AutoCompleteBox.AsyncPopulatorProperty.Bind().WithMode(mode)];
    }
}
