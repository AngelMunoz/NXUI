// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class CarouselExtensions
{
    // IsVirtualizedProperty

    public static T IsVirtualized<T>(this T obj, System.Boolean value) where T : Avalonia.Controls.Carousel
    {
        obj[Avalonia.Controls.Carousel.IsVirtualizedProperty] = value;
        return obj;
    }

    public static T IsVirtualized<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Carousel
    {
        obj[Avalonia.Controls.Carousel.IsVirtualizedProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T IsVirtualized<T>(this T obj, IObservable<System.Boolean> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Carousel
    {
        obj[Avalonia.Controls.Carousel.IsVirtualizedProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindIsVirtualized(this Avalonia.Controls.Carousel obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Carousel.IsVirtualizedProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Boolean> ObserveIsVirtualized(this Avalonia.Controls.Carousel obj)
    {
        return obj.GetObservable(Avalonia.Controls.Carousel.IsVirtualizedProperty);
    }

    // PageTransitionProperty

    public static T PageTransition<T>(this T obj, Avalonia.Animation.IPageTransition value) where T : Avalonia.Controls.Carousel
    {
        obj[Avalonia.Controls.Carousel.PageTransitionProperty] = value;
        return obj;
    }

    public static T PageTransition<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Carousel
    {
        obj[Avalonia.Controls.Carousel.PageTransitionProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T PageTransition<T>(this T obj, IObservable<Avalonia.Animation.IPageTransition> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Carousel
    {
        obj[Avalonia.Controls.Carousel.PageTransitionProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindPageTransition(this Avalonia.Controls.Carousel obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Carousel.PageTransitionProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Animation.IPageTransition> ObservePageTransition(this Avalonia.Controls.Carousel obj)
    {
        return obj.GetObservable(Avalonia.Controls.Carousel.PageTransitionProperty);
    }
}
