// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class AnimatableExtensions
{
    // ClockProperty

    public static T Clock<T>(this T obj, Avalonia.Animation.IClock value) where T : Avalonia.Animation.Animatable
    {
        obj[Avalonia.Animation.Animatable.ClockProperty] = value;
        return obj;
    }

    public static T Clock<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Animation.Animatable
    {
        obj[Avalonia.Animation.Animatable.ClockProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Clock(this Avalonia.Animation.Animatable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Animation.Animatable.ClockProperty.Bind().WithMode(mode)];
    }

    // TransitionsProperty

    public static T Transitions<T>(this T obj, Avalonia.Animation.Transitions value) where T : Avalonia.Animation.Animatable
    {
        obj[Avalonia.Animation.Animatable.TransitionsProperty] = value;
        return obj;
    }

    public static T Transitions<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Animation.Animatable
    {
        obj[Avalonia.Animation.Animatable.TransitionsProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Transitions(this Avalonia.Animation.Animatable obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Animation.Animatable.TransitionsProperty.Bind().WithMode(mode)];
    }
}
