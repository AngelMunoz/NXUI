// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class AdornerLayerExtensions
{
    // AdornedElementProperty

    public static T AdornedElement<T>(this T obj, Avalonia.Visual value) where T : Avalonia.Visual
    {
        obj[Avalonia.Controls.Primitives.AdornerLayer.AdornedElementProperty] = value;
        return obj;
    }

    public static T AdornedElement<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Visual
    {
        obj[Avalonia.Controls.Primitives.AdornerLayer.AdornedElementProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding AdornedElement(this Avalonia.Visual obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Primitives.AdornerLayer.AdornedElementProperty.Bind().WithMode(mode)];
    }

    // IsClipEnabledProperty

    public static T IsClipEnabled<T>(this T obj, System.Boolean value) where T : Avalonia.Visual
    {
        obj[Avalonia.Controls.Primitives.AdornerLayer.IsClipEnabledProperty] = value;
        return obj;
    }

    public static T IsClipEnabled<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Visual
    {
        obj[Avalonia.Controls.Primitives.AdornerLayer.IsClipEnabledProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding IsClipEnabled(this Avalonia.Visual obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Primitives.AdornerLayer.IsClipEnabledProperty.Bind().WithMode(mode)];
    }
}
