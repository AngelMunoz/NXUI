// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TextPresenterExtensions
{
    // CaretIndexProperty

    public static T CaretIndex<T>(this T obj, System.Int32 value) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.CaretIndexProperty] = value;
        return obj;
    }

    public static T CaretIndex<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.CaretIndexProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding CaretIndex(this Avalonia.Controls.Presenters.TextPresenter obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Presenters.TextPresenter.CaretIndexProperty.Bind().WithMode(mode)];
    }

    // RevealPasswordProperty

    public static T RevealPassword<T>(this T obj, System.Boolean value) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.RevealPasswordProperty] = value;
        return obj;
    }

    public static T RevealPassword<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.RevealPasswordProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding RevealPassword(this Avalonia.Controls.Presenters.TextPresenter obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Presenters.TextPresenter.RevealPasswordProperty.Bind().WithMode(mode)];
    }

    // PasswordCharProperty

    public static T PasswordChar<T>(this T obj, System.Char value) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.PasswordCharProperty] = value;
        return obj;
    }

    public static T PasswordChar<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.PasswordCharProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding PasswordChar(this Avalonia.Controls.Presenters.TextPresenter obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Presenters.TextPresenter.PasswordCharProperty.Bind().WithMode(mode)];
    }

    // SelectionBrushProperty

    public static T SelectionBrush<T>(this T obj, Avalonia.Media.IBrush value) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.SelectionBrushProperty] = value;
        return obj;
    }

    public static T SelectionBrush<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.SelectionBrushProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding SelectionBrush(this Avalonia.Controls.Presenters.TextPresenter obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Presenters.TextPresenter.SelectionBrushProperty.Bind().WithMode(mode)];
    }

    // SelectionForegroundBrushProperty

    public static T SelectionForegroundBrush<T>(this T obj, Avalonia.Media.IBrush value) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.SelectionForegroundBrushProperty] = value;
        return obj;
    }

    public static T SelectionForegroundBrush<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.SelectionForegroundBrushProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding SelectionForegroundBrush(this Avalonia.Controls.Presenters.TextPresenter obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Presenters.TextPresenter.SelectionForegroundBrushProperty.Bind().WithMode(mode)];
    }

    // CaretBrushProperty

    public static T CaretBrush<T>(this T obj, Avalonia.Media.IBrush value) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.CaretBrushProperty] = value;
        return obj;
    }

    public static T CaretBrush<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.CaretBrushProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding CaretBrush(this Avalonia.Controls.Presenters.TextPresenter obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Presenters.TextPresenter.CaretBrushProperty.Bind().WithMode(mode)];
    }

    // SelectionStartProperty

    public static T SelectionStart<T>(this T obj, System.Int32 value) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.SelectionStartProperty] = value;
        return obj;
    }

    public static T SelectionStart<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.SelectionStartProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding SelectionStart(this Avalonia.Controls.Presenters.TextPresenter obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Presenters.TextPresenter.SelectionStartProperty.Bind().WithMode(mode)];
    }

    // SelectionEndProperty

    public static T SelectionEnd<T>(this T obj, System.Int32 value) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.SelectionEndProperty] = value;
        return obj;
    }

    public static T SelectionEnd<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.SelectionEndProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding SelectionEnd(this Avalonia.Controls.Presenters.TextPresenter obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Presenters.TextPresenter.SelectionEndProperty.Bind().WithMode(mode)];
    }

    // TextProperty

    public static T Text<T>(this T obj, System.String value) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.TextProperty] = value;
        return obj;
    }

    public static T Text<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Presenters.TextPresenter
    {
        obj[Avalonia.Controls.Presenters.TextPresenter.TextProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Text(this Avalonia.Controls.Presenters.TextPresenter obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.Presenters.TextPresenter.TextProperty.Bind().WithMode(mode)];
    }
}
