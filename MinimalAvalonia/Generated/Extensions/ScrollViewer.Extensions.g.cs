// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ScrollViewerExtensions
{
    // CanHorizontallyScrollProperty

    public static Avalonia.Data.IBinding CanHorizontallyScroll(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.CanHorizontallyScrollProperty.Bind().WithMode(mode)];
    }

    // CanVerticallyScrollProperty

    public static Avalonia.Data.IBinding CanVerticallyScroll(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.CanVerticallyScrollProperty.Bind().WithMode(mode)];
    }

    // ExtentProperty

    public static T Extent<T>(this T obj, Avalonia.Size value) where T : Avalonia.Controls.ScrollViewer
    {
        obj[Avalonia.Controls.ScrollViewer.ExtentProperty] = value;
        return obj;
    }

    public static T Extent<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ScrollViewer
    {
        obj[Avalonia.Controls.ScrollViewer.ExtentProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Extent(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.ExtentProperty.Bind().WithMode(mode)];
    }

    // OffsetProperty

    public static T Offset<T>(this T obj, Avalonia.Vector value) where T : Avalonia.Controls.ScrollViewer
    {
        obj[Avalonia.Controls.ScrollViewer.OffsetProperty] = value;
        return obj;
    }

    public static T Offset<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ScrollViewer
    {
        obj[Avalonia.Controls.ScrollViewer.OffsetProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Offset(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.OffsetProperty.Bind().WithMode(mode)];
    }

    // ViewportProperty

    public static T Viewport<T>(this T obj, Avalonia.Size value) where T : Avalonia.Controls.ScrollViewer
    {
        obj[Avalonia.Controls.ScrollViewer.ViewportProperty] = value;
        return obj;
    }

    public static T Viewport<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ScrollViewer
    {
        obj[Avalonia.Controls.ScrollViewer.ViewportProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding Viewport(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.ViewportProperty.Bind().WithMode(mode)];
    }

    // LargeChangeProperty

    public static Avalonia.Data.IBinding LargeChange(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.LargeChangeProperty.Bind().WithMode(mode)];
    }

    // SmallChangeProperty

    public static Avalonia.Data.IBinding SmallChange(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.SmallChangeProperty.Bind().WithMode(mode)];
    }

    // HorizontalScrollBarMaximumProperty

    public static Avalonia.Data.IBinding HorizontalScrollBarMaximum(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarMaximumProperty.Bind().WithMode(mode)];
    }

    // HorizontalScrollBarValueProperty

    public static T HorizontalScrollBarValue<T>(this T obj, System.Double value) where T : Avalonia.Controls.ScrollViewer
    {
        obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarValueProperty] = value;
        return obj;
    }

    public static T HorizontalScrollBarValue<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ScrollViewer
    {
        obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarValueProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding HorizontalScrollBarValue(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarValueProperty.Bind().WithMode(mode)];
    }

    // HorizontalScrollBarViewportSizeProperty

    public static Avalonia.Data.IBinding HorizontalScrollBarViewportSize(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarViewportSizeProperty.Bind().WithMode(mode)];
    }

    // HorizontalScrollBarVisibilityProperty

    public static T HorizontalScrollBarVisibility<T>(this T obj, Avalonia.Controls.Primitives.ScrollBarVisibility value) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty] = value;
        return obj;
    }

    public static T HorizontalScrollBarVisibility<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding HorizontalScrollBarVisibility(this Avalonia.Controls.Control obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty.Bind().WithMode(mode)];
    }

    public static T HorizontalScrollBarVisibilityDisabled<T>(this T obj) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty] = Avalonia.Controls.Primitives.ScrollBarVisibility.Disabled;
        return obj;
    }

    public static T HorizontalScrollBarVisibilityAuto<T>(this T obj) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty] = Avalonia.Controls.Primitives.ScrollBarVisibility.Auto;
        return obj;
    }

    public static T HorizontalScrollBarVisibilityHidden<T>(this T obj) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty] = Avalonia.Controls.Primitives.ScrollBarVisibility.Hidden;
        return obj;
    }

    public static T HorizontalScrollBarVisibilityVisible<T>(this T obj) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty] = Avalonia.Controls.Primitives.ScrollBarVisibility.Visible;
        return obj;
    }

    // VerticalScrollBarMaximumProperty

    public static Avalonia.Data.IBinding VerticalScrollBarMaximum(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarMaximumProperty.Bind().WithMode(mode)];
    }

    // VerticalScrollBarValueProperty

    public static T VerticalScrollBarValue<T>(this T obj, System.Double value) where T : Avalonia.Controls.ScrollViewer
    {
        obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarValueProperty] = value;
        return obj;
    }

    public static T VerticalScrollBarValue<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.ScrollViewer
    {
        obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarValueProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding VerticalScrollBarValue(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarValueProperty.Bind().WithMode(mode)];
    }

    // VerticalScrollBarViewportSizeProperty

    public static Avalonia.Data.IBinding VerticalScrollBarViewportSize(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarViewportSizeProperty.Bind().WithMode(mode)];
    }

    // VerticalScrollBarVisibilityProperty

    public static T VerticalScrollBarVisibility<T>(this T obj, Avalonia.Controls.Primitives.ScrollBarVisibility value) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty] = value;
        return obj;
    }

    public static T VerticalScrollBarVisibility<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding VerticalScrollBarVisibility(this Avalonia.Controls.Control obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty.Bind().WithMode(mode)];
    }

    public static T VerticalScrollBarVisibilityDisabled<T>(this T obj) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty] = Avalonia.Controls.Primitives.ScrollBarVisibility.Disabled;
        return obj;
    }

    public static T VerticalScrollBarVisibilityAuto<T>(this T obj) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty] = Avalonia.Controls.Primitives.ScrollBarVisibility.Auto;
        return obj;
    }

    public static T VerticalScrollBarVisibilityHidden<T>(this T obj) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty] = Avalonia.Controls.Primitives.ScrollBarVisibility.Hidden;
        return obj;
    }

    public static T VerticalScrollBarVisibilityVisible<T>(this T obj) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty] = Avalonia.Controls.Primitives.ScrollBarVisibility.Visible;
        return obj;
    }

    // IsExpandedProperty

    public static Avalonia.Data.IBinding IsExpanded(this Avalonia.Controls.ScrollViewer obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.IsExpandedProperty.Bind().WithMode(mode)];
    }

    // AllowAutoHideProperty

    public static T AllowAutoHide<T>(this T obj, System.Boolean value) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.AllowAutoHideProperty] = value;
        return obj;
    }

    public static T AllowAutoHide<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.AllowAutoHideProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding AllowAutoHide(this Avalonia.Controls.Control obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.AllowAutoHideProperty.Bind().WithMode(mode)];
    }

    // IsScrollChainingEnabledProperty

    public static T IsScrollChainingEnabled<T>(this T obj, System.Boolean value) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.IsScrollChainingEnabledProperty] = value;
        return obj;
    }

    public static T IsScrollChainingEnabled<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.ScrollViewer.IsScrollChainingEnabledProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding IsScrollChainingEnabled(this Avalonia.Controls.Control obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.ScrollViewer.IsScrollChainingEnabledProperty.Bind().WithMode(mode)];
    }
}
