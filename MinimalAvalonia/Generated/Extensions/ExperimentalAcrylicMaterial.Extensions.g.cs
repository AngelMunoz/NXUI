// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ExperimentalAcrylicMaterialExtensions
{
    // TintColorProperty

    public static T TintColor<T>(this T obj, Avalonia.Media.Color value) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.TintColorProperty] = value;
        return obj;
    }

    public static T TintColor<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.TintColorProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding TintColor(this Avalonia.Media.ExperimentalAcrylicMaterial obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.ExperimentalAcrylicMaterial.TintColorProperty.Bind().WithMode(mode)];
    }

    // BackgroundSourceProperty

    public static T BackgroundSource<T>(this T obj, Avalonia.Media.AcrylicBackgroundSource value) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty] = value;
        return obj;
    }

    public static T BackgroundSource<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding BackgroundSource(this Avalonia.Media.ExperimentalAcrylicMaterial obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty.Bind().WithMode(mode)];
    }

    public static T BackgroundSourceNone<T>(this T obj) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty] = Avalonia.Media.AcrylicBackgroundSource.None;
        return obj;
    }

    public static T BackgroundSourceDigger<T>(this T obj) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty] = Avalonia.Media.AcrylicBackgroundSource.Digger;
        return obj;
    }

    // TintOpacityProperty

    public static T TintOpacity<T>(this T obj, System.Double value) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.TintOpacityProperty] = value;
        return obj;
    }

    public static T TintOpacity<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.TintOpacityProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding TintOpacity(this Avalonia.Media.ExperimentalAcrylicMaterial obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.ExperimentalAcrylicMaterial.TintOpacityProperty.Bind().WithMode(mode)];
    }

    // MaterialOpacityProperty

    public static T MaterialOpacity<T>(this T obj, System.Double value) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.MaterialOpacityProperty] = value;
        return obj;
    }

    public static T MaterialOpacity<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.MaterialOpacityProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding MaterialOpacity(this Avalonia.Media.ExperimentalAcrylicMaterial obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.ExperimentalAcrylicMaterial.MaterialOpacityProperty.Bind().WithMode(mode)];
    }

    // PlatformTransparencyCompensationLevelProperty

    public static T PlatformTransparencyCompensationLevel<T>(this T obj, System.Double value) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.PlatformTransparencyCompensationLevelProperty] = value;
        return obj;
    }

    public static T PlatformTransparencyCompensationLevel<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.PlatformTransparencyCompensationLevelProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding PlatformTransparencyCompensationLevel(this Avalonia.Media.ExperimentalAcrylicMaterial obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.ExperimentalAcrylicMaterial.PlatformTransparencyCompensationLevelProperty.Bind().WithMode(mode)];
    }

    // FallbackColorProperty

    public static T FallbackColor<T>(this T obj, Avalonia.Media.Color value) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.FallbackColorProperty] = value;
        return obj;
    }

    public static T FallbackColor<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.ExperimentalAcrylicMaterial
    {
        obj[Avalonia.Media.ExperimentalAcrylicMaterial.FallbackColorProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static Avalonia.Data.IBinding FallbackColor(this Avalonia.Media.ExperimentalAcrylicMaterial obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.ExperimentalAcrylicMaterial.FallbackColorProperty.Bind().WithMode(mode)];
    }
}
