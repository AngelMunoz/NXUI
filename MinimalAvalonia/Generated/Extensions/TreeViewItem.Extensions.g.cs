// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TreeViewItemExtensions
{
    // IsExpandedProperty

    public static T IsExpanded<T>(this T obj, System.Boolean value) where T : Avalonia.Controls.TreeViewItem
    {
        obj[Avalonia.Controls.TreeViewItem.IsExpandedProperty] = value;
        return obj;
    }

    public static T IsExpanded<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.TreeViewItem
    {
        obj[Avalonia.Controls.TreeViewItem.IsExpandedProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T IsExpanded<T>(this T obj, IObservable<System.Boolean> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.TreeViewItem
    {
        obj[Avalonia.Controls.TreeViewItem.IsExpandedProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindIsExpanded(this Avalonia.Controls.TreeViewItem obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.TreeViewItem.IsExpandedProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Boolean> ObserveIsExpanded(this Avalonia.Controls.TreeViewItem obj)
    {
        return obj.GetObservable(Avalonia.Controls.TreeViewItem.IsExpandedProperty);
    }

    public static T OnIsExpanded<T>(this T obj, Action<IObservable<System.Boolean>> handler) where T : Avalonia.Controls.TreeViewItem
    {
        var observable = obj.GetObservable(Avalonia.Controls.TreeViewItem.IsExpandedProperty);
        handler(observable);
        return obj;
    }

    // LevelProperty

    public static Avalonia.Data.IBinding BindLevel(this Avalonia.Controls.TreeViewItem obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.TreeViewItem.LevelProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Int32> ObserveLevel(this Avalonia.Controls.TreeViewItem obj)
    {
        return obj.GetObservable(Avalonia.Controls.TreeViewItem.LevelProperty);
    }

    public static Avalonia.Controls.TreeViewItem OnLevel(this Avalonia.Controls.TreeViewItem obj, Action<IObservable<System.Int32>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Controls.TreeViewItem.LevelProperty);
        handler(observable);
        return obj;
    }
}
