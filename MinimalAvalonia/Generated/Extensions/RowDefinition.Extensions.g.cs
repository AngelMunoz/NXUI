// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class RowDefinitionExtensions
{
    // MaxHeightProperty

    public static T MaxHeight<T>(this T obj, System.Double value) where T : Avalonia.Controls.RowDefinition
    {
        obj[Avalonia.Controls.RowDefinition.MaxHeightProperty] = value;
        return obj;
    }

    public static T MaxHeight<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.RowDefinition
    {
        obj[Avalonia.Controls.RowDefinition.MaxHeightProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T MaxHeight<T>(this T obj, IObservable<System.Double> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.RowDefinition
    {
        obj[Avalonia.Controls.RowDefinition.MaxHeightProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindMaxHeight(this Avalonia.Controls.RowDefinition obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RowDefinition.MaxHeightProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Double> ObserveMaxHeight(this Avalonia.Controls.RowDefinition obj)
    {
        return obj.GetObservable(Avalonia.Controls.RowDefinition.MaxHeightProperty);
    }

    public static T OnMaxHeight<T>(this T obj, Action<IObservable<System.Double>> handler) where T : Avalonia.Controls.RowDefinition
    {
        var observable = obj.GetObservable(Avalonia.Controls.RowDefinition.MaxHeightProperty);
        handler(observable);
        return obj;
    }

    // MinHeightProperty

    public static T MinHeight<T>(this T obj, System.Double value) where T : Avalonia.Controls.RowDefinition
    {
        obj[Avalonia.Controls.RowDefinition.MinHeightProperty] = value;
        return obj;
    }

    public static T MinHeight<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.RowDefinition
    {
        obj[Avalonia.Controls.RowDefinition.MinHeightProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T MinHeight<T>(this T obj, IObservable<System.Double> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.RowDefinition
    {
        obj[Avalonia.Controls.RowDefinition.MinHeightProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindMinHeight(this Avalonia.Controls.RowDefinition obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RowDefinition.MinHeightProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Double> ObserveMinHeight(this Avalonia.Controls.RowDefinition obj)
    {
        return obj.GetObservable(Avalonia.Controls.RowDefinition.MinHeightProperty);
    }

    public static T OnMinHeight<T>(this T obj, Action<IObservable<System.Double>> handler) where T : Avalonia.Controls.RowDefinition
    {
        var observable = obj.GetObservable(Avalonia.Controls.RowDefinition.MinHeightProperty);
        handler(observable);
        return obj;
    }

    // HeightProperty

    public static T Height<T>(this T obj, Avalonia.Controls.GridLength value) where T : Avalonia.Controls.RowDefinition
    {
        obj[Avalonia.Controls.RowDefinition.HeightProperty] = value;
        return obj;
    }

    public static T Height<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.RowDefinition
    {
        obj[Avalonia.Controls.RowDefinition.HeightProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T Height<T>(this T obj, IObservable<Avalonia.Controls.GridLength> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.RowDefinition
    {
        obj[Avalonia.Controls.RowDefinition.HeightProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindHeight(this Avalonia.Controls.RowDefinition obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.RowDefinition.HeightProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Controls.GridLength> ObserveHeight(this Avalonia.Controls.RowDefinition obj)
    {
        return obj.GetObservable(Avalonia.Controls.RowDefinition.HeightProperty);
    }

    public static T OnHeight<T>(this T obj, Action<IObservable<Avalonia.Controls.GridLength>> handler) where T : Avalonia.Controls.RowDefinition
    {
        var observable = obj.GetObservable(Avalonia.Controls.RowDefinition.HeightProperty);
        handler(observable);
        return obj;
    }
}
