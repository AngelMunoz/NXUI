// <auto-generated />
namespace NXUI.Extensions;

/// <summary>
/// The minimal avalonia <see cref="Avalonia.Controls.Primitives.PopupRoot"/> class property extension methods.
/// </summary>
public static partial class PopupRootExtensions
{
    // Avalonia.Controls.Primitives.PopupRoot.TransformProperty

    /// <summary>
    /// 
    /// </summary>
    /// <param name="obj"></param>
    /// <param name="value"></param>
    /// <returns></returns>
    public static Avalonia.Controls.Primitives.PopupRoot Transform(this Avalonia.Controls.Primitives.PopupRoot obj, Avalonia.Media.Transform value)
    {
        obj[Avalonia.Controls.Primitives.PopupRoot.TransformProperty] = value;
        return obj;
    }

    /// <summary>
    /// 
    /// </summary>
    /// <param name="obj"></param>
    /// <param name="binding"></param>
    /// <param name="mode"></param>
    /// <param name="priority"></param>
    /// <returns></returns>
    public static Avalonia.Controls.Primitives.PopupRoot Transform(
        this Avalonia.Controls.Primitives.PopupRoot obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Controls.Primitives.PopupRoot.TransformProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// 
    /// </summary>
    /// <param name="obj"></param>
    /// <param name="observable"></param>
    /// <param name="mode"></param>
    /// <param name="priority"></param>
    /// <returns></returns>
    public static Avalonia.Controls.Primitives.PopupRoot Transform(
        this Avalonia.Controls.Primitives.PopupRoot obj,
        IObservable<Avalonia.Media.Transform> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Controls.Primitives.PopupRoot.TransformProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// 
    /// </summary>
    /// <param name="obj"></param>
    /// <param name="mode"></param>
    /// <param name="priority"></param>
    /// <returns></returns>
    public static Avalonia.Data.IBinding BindTransform(
        this Avalonia.Controls.Primitives.PopupRoot obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Controls.Primitives.PopupRoot.TransformProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// 
    /// </summary>
    /// <param name="obj"></param>
    /// <returns></returns>
    public static IObservable<Avalonia.Media.Transform> ObserveTransform(this Avalonia.Controls.Primitives.PopupRoot obj)
    {
        return obj.GetObservable(Avalonia.Controls.Primitives.PopupRoot.TransformProperty);
    }

    /// <summary>
    /// 
    /// </summary>
    /// <param name="obj"></param>
    /// <param name="handler"></param>
    /// <returns></returns>
    public static Avalonia.Controls.Primitives.PopupRoot OnTransform(this Avalonia.Controls.Primitives.PopupRoot obj, Action<Avalonia.Controls.Primitives.PopupRoot, IObservable<Avalonia.Media.Transform>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Controls.Primitives.PopupRoot.TransformProperty);
        handler(obj, observable);
        return obj;
    }
}
