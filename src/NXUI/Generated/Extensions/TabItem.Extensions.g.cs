// <auto-generated />
namespace NXUI.Extensions;

/// <summary>
/// The avalonia <see cref="Avalonia.Controls.TabItem"/> class property extension methods.
/// </summary>
public static partial class TabItemExtensions
{
    // Avalonia.Controls.TabItem.TabStripPlacementProperty

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/> value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="value">The value.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T TabStripPlacement<T>(this T obj, Avalonia.Controls.Dock value) where T : Avalonia.Controls.TabItem
    {
        obj[Avalonia.Controls.TabItem.TabStripPlacementProperty] = value;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/> with binding source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="binding">The source binding.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T TabStripPlacement<T>(
        this T obj,
        Avalonia.Data.IBinding binding,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Controls.TabItem
    {
        var descriptor = Avalonia.Controls.TabItem.TabStripPlacementProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = binding;
        return obj;
    }

    /// <summary>
    /// Sets a binding to <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/> with observable source value.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="observable">The source observable.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T TabStripPlacement<T>(
        this T obj,
        IObservable<Avalonia.Controls.Dock> observable,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue) where T : Avalonia.Controls.TabItem
    {
        var descriptor = Avalonia.Controls.TabItem.TabStripPlacementProperty.Bind().WithMode(mode).WithPriority(priority);
        obj[descriptor] = observable.ToBinding();
        return obj;
    }

    /// <summary>
    /// Makes a <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/> binding.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="mode">The target binding mode.</param>
    /// <param name="priority">The target binding priority.</param>
    /// <returns>A <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/> binding.</returns>
    public static Avalonia.Data.IBinding BindTabStripPlacement(
        this Avalonia.Controls.TabItem obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Controls.TabItem.TabStripPlacementProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    /// <summary>
    /// Gets an observable for an <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <returns>
    /// An observable which fires immediately with the current value of the property on the
    /// object and subsequently each time the property value changes.
    /// </returns>
    public static IObservable<Avalonia.Controls.Dock> ObserveTabStripPlacement(this Avalonia.Controls.TabItem obj)
    {
        return obj.GetObservable(Avalonia.Controls.TabItem.TabStripPlacementProperty);
    }

    /// <summary>
    /// Sets a handler with an observable for an <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <param name="handler">The handler with target object and observable with the current value of the property.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T OnTabStripPlacement<T>(this T obj, Action<Avalonia.Controls.TabItem, IObservable<Avalonia.Controls.Dock>> handler) where T : Avalonia.Controls.TabItem
    {
        var observable = obj.GetObservable(Avalonia.Controls.TabItem.TabStripPlacementProperty);
        handler(obj, observable);
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/> property value to <see cref="Avalonia.Controls.Dock.Left"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T TabStripPlacementLeft<T>(this T obj) where T : Avalonia.Controls.TabItem
    {
        obj[Avalonia.Controls.TabItem.TabStripPlacementProperty] = Avalonia.Controls.Dock.Left;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/> property value to <see cref="Avalonia.Controls.Dock.Bottom"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T TabStripPlacementBottom<T>(this T obj) where T : Avalonia.Controls.TabItem
    {
        obj[Avalonia.Controls.TabItem.TabStripPlacementProperty] = Avalonia.Controls.Dock.Bottom;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/> property value to <see cref="Avalonia.Controls.Dock.Right"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T TabStripPlacementRight<T>(this T obj) where T : Avalonia.Controls.TabItem
    {
        obj[Avalonia.Controls.TabItem.TabStripPlacementProperty] = Avalonia.Controls.Dock.Right;
        return obj;
    }

    /// <summary>
    /// Sets a <see cref="Avalonia.Controls.TabItem.TabStripPlacementProperty"/> property value to <see cref="Avalonia.Controls.Dock.Top"/>.
    /// </summary>
    /// <param name="obj">The target object.</param>
    /// <typeparam name="T">The type of the target object.</typeparam>
    /// <returns>The target object reference.</returns>
    public static T TabStripPlacementTop<T>(this T obj) where T : Avalonia.Controls.TabItem
    {
        obj[Avalonia.Controls.TabItem.TabStripPlacementProperty] = Avalonia.Controls.Dock.Top;
        return obj;
    }

}
