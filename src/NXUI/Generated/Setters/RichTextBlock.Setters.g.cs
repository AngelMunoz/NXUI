// <auto-generated />
namespace NXUI.Extensions;

/// <summary>
/// The minimal avalonia <see cref="Avalonia.Controls.RichTextBlock"/> class style setters extension methods.
/// </summary>
public static partial class RichTextBlockSetters
{
    // Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="value">The property value.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockIsTextSelectionEnabled(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty, value));
        return style;
    }

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="binding">The property binding.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockIsTextSelectionEnabled(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty, binding));
        return style;
    }

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="observable">The property observable.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockIsTextSelectionEnabled(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty, observable.ToBinding()));
        return style;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="value">The property value.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockIsTextSelectionEnabled(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty, value));
        return keyFrame;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="binding">The property binding.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockIsTextSelectionEnabled(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty, binding));
        return keyFrame;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="observable">The property binding.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockIsTextSelectionEnabled(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.IsTextSelectionEnabledProperty, observable.ToBinding()));
        return keyFrame;
    }

    // Avalonia.Controls.RichTextBlock.SelectionStartProperty

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionStartProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="value">The property value.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockSelectionStart(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionStartProperty, value));
        return style;
    }

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionStartProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="binding">The property binding.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockSelectionStart(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionStartProperty, binding));
        return style;
    }

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionStartProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="observable">The property observable.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockSelectionStart(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionStartProperty, observable.ToBinding()));
        return style;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionStartProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="value">The property value.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockSelectionStart(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionStartProperty, value));
        return keyFrame;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionStartProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="binding">The property binding.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockSelectionStart(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionStartProperty, binding));
        return keyFrame;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionStartProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="observable">The property binding.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockSelectionStart(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionStartProperty, observable.ToBinding()));
        return keyFrame;
    }

    // Avalonia.Controls.RichTextBlock.SelectionEndProperty

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionEndProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="value">The property value.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockSelectionEnd(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionEndProperty, value));
        return style;
    }

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionEndProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="binding">The property binding.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockSelectionEnd(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionEndProperty, binding));
        return style;
    }

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionEndProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="observable">The property observable.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockSelectionEnd(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionEndProperty, observable.ToBinding()));
        return style;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionEndProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="value">The property value.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockSelectionEnd(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionEndProperty, value));
        return keyFrame;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionEndProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="binding">The property binding.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockSelectionEnd(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionEndProperty, binding));
        return keyFrame;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionEndProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="observable">The property binding.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockSelectionEnd(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionEndProperty, observable.ToBinding()));
        return keyFrame;
    }

    // Avalonia.Controls.RichTextBlock.SelectionBrushProperty

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionBrushProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="value">The property value.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockSelectionBrush(this Style style, Avalonia.Media.IBrush value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionBrushProperty, value));
        return style;
    }

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionBrushProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="binding">The property binding.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockSelectionBrush(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionBrushProperty, binding));
        return style;
    }

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionBrushProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="observable">The property observable.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockSelectionBrush(this Style style, IObservable<Avalonia.Media.IBrush> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionBrushProperty, observable.ToBinding()));
        return style;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionBrushProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="value">The property value.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockSelectionBrush(this KeyFrame keyFrame, Avalonia.Media.IBrush value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionBrushProperty, value));
        return keyFrame;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionBrushProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="binding">The property binding.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockSelectionBrush(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionBrushProperty, binding));
        return keyFrame;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.SelectionBrushProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="observable">The property binding.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockSelectionBrush(this KeyFrame keyFrame, IObservable<Avalonia.Media.IBrush> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.SelectionBrushProperty, observable.ToBinding()));
        return keyFrame;
    }

    // Avalonia.Controls.RichTextBlock.InlinesProperty

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.InlinesProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="value">The property value.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockInlines(this Style style, Avalonia.Controls.Documents.InlineCollection value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.InlinesProperty, value));
        return style;
    }

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.InlinesProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="binding">The property binding.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockInlines(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.InlinesProperty, binding));
        return style;
    }

    /// <summary>
    /// Adds a style setter for an <see cref="Avalonia.Controls.RichTextBlock.InlinesProperty"/>.
    /// </summary>
    /// <param name="style">The target style.</param>
    /// <param name="observable">The property observable.</param>
    /// <returns>The target style object reference.</returns>
    public static Style SetRichTextBlockInlines(this Style style, IObservable<Avalonia.Controls.Documents.InlineCollection> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.InlinesProperty, observable.ToBinding()));
        return style;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.InlinesProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="value">The property value.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockInlines(this KeyFrame keyFrame, Avalonia.Controls.Documents.InlineCollection value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.InlinesProperty, value));
        return keyFrame;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.InlinesProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="binding">The property binding.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockInlines(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.InlinesProperty, binding));
        return keyFrame;
    }

    /// <summary>
    /// Adds a keyframe setter for an <see cref="Avalonia.Controls.RichTextBlock.InlinesProperty"/>.
    /// </summary>
    /// <param name="keyFrame">The target keyframe.</param>
    /// <param name="observable">The property binding.</param>
    /// <returns>The target keyframe object reference.</returns>
    public static KeyFrame SetRichTextBlockInlines(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Documents.InlineCollection> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.RichTextBlock.InlinesProperty, observable.ToBinding()));
        return keyFrame;
    }

}
