// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TransitioningContentControlExtensions
{
    // PageTransitionProperty

    public static T PageTransition<T>(this T obj, Avalonia.Animation.IPageTransition value) where T : Avalonia.Controls.TransitioningContentControl
    {
        obj[Avalonia.Controls.TransitioningContentControl.PageTransitionProperty] = value;
        return obj;
    }

    public static T PageTransition<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.TransitioningContentControl
    {
        obj[Avalonia.Controls.TransitioningContentControl.PageTransitionProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T PageTransition<T>(this T obj, IObservable<Avalonia.Animation.IPageTransition> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.TransitioningContentControl
    {
        obj[Avalonia.Controls.TransitioningContentControl.PageTransitionProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindPageTransition(this Avalonia.Controls.TransitioningContentControl obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.TransitioningContentControl.PageTransitionProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Animation.IPageTransition> ObservePageTransition(this Avalonia.Controls.TransitioningContentControl obj)
    {
        return obj.GetObservable(Avalonia.Controls.TransitioningContentControl.PageTransitionProperty);
    }

    public static T OnPageTransition<T>(this T obj, Action<Avalonia.Controls.TransitioningContentControl, IObservable<Avalonia.Animation.IPageTransition>> handler) where T : Avalonia.Controls.TransitioningContentControl
    {
        var observable = obj.GetObservable(Avalonia.Controls.TransitioningContentControl.PageTransitionProperty);
        handler(obj, observable);
        return obj;
    }

    // CurrentContentProperty

    public static Avalonia.Data.IBinding BindCurrentContent(this Avalonia.Controls.TransitioningContentControl obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay)
    {
        return obj[Avalonia.Controls.TransitioningContentControl.CurrentContentProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.Object> ObserveCurrentContent(this Avalonia.Controls.TransitioningContentControl obj)
    {
        return obj.GetObservable(Avalonia.Controls.TransitioningContentControl.CurrentContentProperty);
    }

    public static Avalonia.Controls.TransitioningContentControl OnCurrentContent(this Avalonia.Controls.TransitioningContentControl obj, Action<Avalonia.Controls.TransitioningContentControl, IObservable<System.Object>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Controls.TransitioningContentControl.CurrentContentProperty);
        handler(obj, observable);
        return obj;
    }
}
