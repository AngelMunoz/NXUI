// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ImageDrawingExtensions
{
    // ImageSourceProperty

    public static T ImageSource<T>(this T obj, Avalonia.Media.IImage value) where T : Avalonia.Media.ImageDrawing
    {
        obj[Avalonia.Media.ImageDrawing.ImageSourceProperty] = value;
        return obj;
    }

    public static T ImageSource<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.ImageDrawing
    {
        obj[Avalonia.Media.ImageDrawing.ImageSourceProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T ImageSource<T>(this T obj, IObservable<Avalonia.Media.IImage> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.ImageDrawing
    {
        obj[Avalonia.Media.ImageDrawing.ImageSourceProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindImageSource(this Avalonia.Media.ImageDrawing obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.ImageDrawing.ImageSourceProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Media.IImage> ObserveImageSource(this Avalonia.Media.ImageDrawing obj)
    {
        return obj.GetObservable(Avalonia.Media.ImageDrawing.ImageSourceProperty);
    }

    public static T OnImageSource<T>(this T obj, Action<IObservable<Avalonia.Media.IImage>> handler) where T : Avalonia.Media.ImageDrawing
    {
        var observable = obj.GetObservable(Avalonia.Media.ImageDrawing.ImageSourceProperty);
        handler(observable);
        return obj;
    }

    // RectProperty

    public static T Rect<T>(this T obj, Avalonia.Rect value) where T : Avalonia.Media.ImageDrawing
    {
        obj[Avalonia.Media.ImageDrawing.RectProperty] = value;
        return obj;
    }

    public static T Rect<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.ImageDrawing
    {
        obj[Avalonia.Media.ImageDrawing.RectProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T Rect<T>(this T obj, IObservable<Avalonia.Rect> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.ImageDrawing
    {
        obj[Avalonia.Media.ImageDrawing.RectProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindRect(this Avalonia.Media.ImageDrawing obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.ImageDrawing.RectProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Rect> ObserveRect(this Avalonia.Media.ImageDrawing obj)
    {
        return obj.GetObservable(Avalonia.Media.ImageDrawing.RectProperty);
    }

    public static T OnRect<T>(this T obj, Action<IObservable<Avalonia.Rect>> handler) where T : Avalonia.Media.ImageDrawing
    {
        var observable = obj.GetObservable(Avalonia.Media.ImageDrawing.RectProperty);
        handler(observable);
        return obj;
    }
}
