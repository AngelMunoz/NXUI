// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class GeometryGroupExtensions
{
    // ChildrenProperty

    public static T Children<T>(this T obj, Avalonia.Media.GeometryCollection value) where T : Avalonia.Media.GeometryGroup
    {
        obj[Avalonia.Media.GeometryGroup.ChildrenProperty] = value;
        return obj;
    }

    public static T Children<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.GeometryGroup
    {
        obj[Avalonia.Media.GeometryGroup.ChildrenProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T Children<T>(this T obj, IObservable<Avalonia.Media.GeometryCollection> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.GeometryGroup
    {
        obj[Avalonia.Media.GeometryGroup.ChildrenProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindChildren(this Avalonia.Media.GeometryGroup obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.GeometryGroup.ChildrenProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Media.GeometryCollection> ObserveChildren(this Avalonia.Media.GeometryGroup obj)
    {
        return obj.GetObservable(Avalonia.Media.GeometryGroup.ChildrenProperty);
    }

    public static T OnChildren<T>(this T obj, Action<Avalonia.Media.GeometryGroup, IObservable<Avalonia.Media.GeometryCollection>> handler) where T : Avalonia.Media.GeometryGroup
    {
        var observable = obj.GetObservable(Avalonia.Media.GeometryGroup.ChildrenProperty);
        handler(obj, observable);
        return obj;
    }

    // FillRuleProperty

    public static T FillRule<T>(this T obj, Avalonia.Media.FillRule value) where T : Avalonia.Media.GeometryGroup
    {
        obj[Avalonia.Media.GeometryGroup.FillRuleProperty] = value;
        return obj;
    }

    public static T FillRule<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.GeometryGroup
    {
        obj[Avalonia.Media.GeometryGroup.FillRuleProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T FillRule<T>(this T obj, IObservable<Avalonia.Media.FillRule> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.GeometryGroup
    {
        obj[Avalonia.Media.GeometryGroup.FillRuleProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindFillRule(this Avalonia.Media.GeometryGroup obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.GeometryGroup.FillRuleProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Media.FillRule> ObserveFillRule(this Avalonia.Media.GeometryGroup obj)
    {
        return obj.GetObservable(Avalonia.Media.GeometryGroup.FillRuleProperty);
    }

    public static T OnFillRule<T>(this T obj, Action<Avalonia.Media.GeometryGroup, IObservable<Avalonia.Media.FillRule>> handler) where T : Avalonia.Media.GeometryGroup
    {
        var observable = obj.GetObservable(Avalonia.Media.GeometryGroup.FillRuleProperty);
        handler(obj, observable);
        return obj;
    }

    public static T FillRuleEvenOdd<T>(this T obj) where T : Avalonia.Media.GeometryGroup
    {
        obj[Avalonia.Media.GeometryGroup.FillRuleProperty] = Avalonia.Media.FillRule.EvenOdd;
        return obj;
    }

    public static T FillRuleNonZero<T>(this T obj) where T : Avalonia.Media.GeometryGroup
    {
        obj[Avalonia.Media.GeometryGroup.FillRuleProperty] = Avalonia.Media.FillRule.NonZero;
        return obj;
    }
}
