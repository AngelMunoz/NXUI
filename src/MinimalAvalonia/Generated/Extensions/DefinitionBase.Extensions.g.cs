// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class DefinitionBaseExtensions
{
    // SharedSizeGroupProperty

    public static T SharedSizeGroup<T>(this T obj, System.String value) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty] = value;
        return obj;
    }

    public static T SharedSizeGroup<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T SharedSizeGroup<T>(this T obj, IObservable<System.String> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Controls.Control
    {
        obj[Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindSharedSizeGroup(this Avalonia.Controls.Control obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty.Bind().WithMode(mode)];
    }

    public static IObservable<System.String> ObserveSharedSizeGroup(this Avalonia.Controls.Control obj)
    {
        return obj.GetObservable(Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty);
    }

    public static T OnSharedSizeGroup<T>(this T obj, Action<IObservable<System.String>> handler) where T : Avalonia.Controls.Control
    {
        var observable = obj.GetObservable(Avalonia.Controls.DefinitionBase.SharedSizeGroupProperty);
        handler(observable);
        return obj;
    }
}
