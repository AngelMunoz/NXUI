// <auto-generated />
namespace MinimalAvalonia.Extensions;

/// <summary>
/// The minimal avalonia <see cref="Avalonia.Controls.Documents.Span"/> class property extension methods.
/// </summary>
public static partial class SpanExtensions
{
    // Avalonia.Controls.Documents.Span.InlinesProperty

    public static Avalonia.Data.IBinding BindInlines(
        this Avalonia.Controls.Documents.Span obj,
        Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.OneWay,
        Avalonia.Data.BindingPriority priority = Avalonia.Data.BindingPriority.LocalValue)
    {
        var descriptor = Avalonia.Controls.Documents.Span.InlinesProperty.Bind().WithMode(mode).WithPriority(priority);
        return obj[descriptor];
    }

    public static IObservable<Avalonia.Controls.Documents.InlineCollection> ObserveInlines(this Avalonia.Controls.Documents.Span obj)
    {
        return obj.GetObservable(Avalonia.Controls.Documents.Span.InlinesProperty);
    }

    public static Avalonia.Controls.Documents.Span OnInlines(this Avalonia.Controls.Documents.Span obj, Action<Avalonia.Controls.Documents.Span, IObservable<Avalonia.Controls.Documents.InlineCollection>> handler)
    {
        var observable = obj.GetObservable(Avalonia.Controls.Documents.Span.InlinesProperty);
        handler(obj, observable);
        return obj;
    }
}
