// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class PathGeometryExtensions
{
    // FiguresProperty

    public static T Figures<T>(this T obj, Avalonia.Media.PathFigures value) where T : Avalonia.Media.PathGeometry
    {
        obj[Avalonia.Media.PathGeometry.FiguresProperty] = value;
        return obj;
    }

    public static T Figures<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.PathGeometry
    {
        obj[Avalonia.Media.PathGeometry.FiguresProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T Figures<T>(this T obj, IObservable<Avalonia.Media.PathFigures> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.PathGeometry
    {
        obj[Avalonia.Media.PathGeometry.FiguresProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindFigures(this Avalonia.Media.PathGeometry obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.PathGeometry.FiguresProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Media.PathFigures> ObserveFigures(this Avalonia.Media.PathGeometry obj)
    {
        return obj.GetObservable(Avalonia.Media.PathGeometry.FiguresProperty);
    }

    public static T OnFigures<T>(this T obj, Action<Avalonia.Media.PathGeometry, IObservable<Avalonia.Media.PathFigures>> handler) where T : Avalonia.Media.PathGeometry
    {
        var observable = obj.GetObservable(Avalonia.Media.PathGeometry.FiguresProperty);
        handler(obj, observable);
        return obj;
    }

    // FillRuleProperty

    public static T FillRule<T>(this T obj, Avalonia.Media.FillRule value) where T : Avalonia.Media.PathGeometry
    {
        obj[Avalonia.Media.PathGeometry.FillRuleProperty] = value;
        return obj;
    }

    public static T FillRule<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.PathGeometry
    {
        obj[Avalonia.Media.PathGeometry.FillRuleProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T FillRule<T>(this T obj, IObservable<Avalonia.Media.FillRule> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Media.PathGeometry
    {
        obj[Avalonia.Media.PathGeometry.FillRuleProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindFillRule(this Avalonia.Media.PathGeometry obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Media.PathGeometry.FillRuleProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Media.FillRule> ObserveFillRule(this Avalonia.Media.PathGeometry obj)
    {
        return obj.GetObservable(Avalonia.Media.PathGeometry.FillRuleProperty);
    }

    public static T OnFillRule<T>(this T obj, Action<Avalonia.Media.PathGeometry, IObservable<Avalonia.Media.FillRule>> handler) where T : Avalonia.Media.PathGeometry
    {
        var observable = obj.GetObservable(Avalonia.Media.PathGeometry.FillRuleProperty);
        handler(obj, observable);
        return obj;
    }

    public static T FillRuleEvenOdd<T>(this T obj) where T : Avalonia.Media.PathGeometry
    {
        obj[Avalonia.Media.PathGeometry.FillRuleProperty] = Avalonia.Media.FillRule.EvenOdd;
        return obj;
    }

    public static T FillRuleNonZero<T>(this T obj) where T : Avalonia.Media.PathGeometry
    {
        obj[Avalonia.Media.PathGeometry.FillRuleProperty] = Avalonia.Media.FillRule.NonZero;
        return obj;
    }
}
