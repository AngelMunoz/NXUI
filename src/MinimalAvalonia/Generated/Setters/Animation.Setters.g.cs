// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class AnimationSetters
{
    // DurationProperty

    public static Style SetAnimationDuration(this Style style, System.TimeSpan value)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.DurationProperty, value));
        return style;
    }

    public static Style SetAnimationDuration(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.DurationProperty, binding));
        return style;
    }

    public static Style SetAnimationDuration(this Style style, IObservable<System.TimeSpan> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.DurationProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetAnimationDuration(this KeyFrame keyFrame, System.TimeSpan value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.DurationProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetAnimationDuration(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.DurationProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetAnimationDuration(this KeyFrame keyFrame, IObservable<System.TimeSpan> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.DurationProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IterationCountProperty

    public static Style SetAnimationIterationCount(this Style style, Avalonia.Animation.IterationCount value)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.IterationCountProperty, value));
        return style;
    }

    public static Style SetAnimationIterationCount(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.IterationCountProperty, binding));
        return style;
    }

    public static Style SetAnimationIterationCount(this Style style, IObservable<Avalonia.Animation.IterationCount> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.IterationCountProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetAnimationIterationCount(this KeyFrame keyFrame, Avalonia.Animation.IterationCount value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.IterationCountProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetAnimationIterationCount(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.IterationCountProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetAnimationIterationCount(this KeyFrame keyFrame, IObservable<Avalonia.Animation.IterationCount> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.IterationCountProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PlaybackDirectionProperty

    public static Style SetAnimationPlaybackDirection(this Style style, Avalonia.Animation.PlaybackDirection value)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.PlaybackDirectionProperty, value));
        return style;
    }

    public static Style SetAnimationPlaybackDirection(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.PlaybackDirectionProperty, binding));
        return style;
    }

    public static Style SetAnimationPlaybackDirection(this Style style, IObservable<Avalonia.Animation.PlaybackDirection> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.PlaybackDirectionProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetAnimationPlaybackDirection(this KeyFrame keyFrame, Avalonia.Animation.PlaybackDirection value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.PlaybackDirectionProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetAnimationPlaybackDirection(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.PlaybackDirectionProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetAnimationPlaybackDirection(this KeyFrame keyFrame, IObservable<Avalonia.Animation.PlaybackDirection> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.PlaybackDirectionProperty, observable.ToBinding()));
        return keyFrame;
    }

    // FillModeProperty

    public static Style SetAnimationFillMode(this Style style, Avalonia.Animation.FillMode value)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.FillModeProperty, value));
        return style;
    }

    public static Style SetAnimationFillMode(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.FillModeProperty, binding));
        return style;
    }

    public static Style SetAnimationFillMode(this Style style, IObservable<Avalonia.Animation.FillMode> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.FillModeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetAnimationFillMode(this KeyFrame keyFrame, Avalonia.Animation.FillMode value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.FillModeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetAnimationFillMode(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.FillModeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetAnimationFillMode(this KeyFrame keyFrame, IObservable<Avalonia.Animation.FillMode> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.FillModeProperty, observable.ToBinding()));
        return keyFrame;
    }

    // EasingProperty

    public static Style SetAnimationEasing(this Style style, Avalonia.Animation.Easings.Easing value)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.EasingProperty, value));
        return style;
    }

    public static Style SetAnimationEasing(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.EasingProperty, binding));
        return style;
    }

    public static Style SetAnimationEasing(this Style style, IObservable<Avalonia.Animation.Easings.Easing> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.EasingProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetAnimationEasing(this KeyFrame keyFrame, Avalonia.Animation.Easings.Easing value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.EasingProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetAnimationEasing(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.EasingProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetAnimationEasing(this KeyFrame keyFrame, IObservable<Avalonia.Animation.Easings.Easing> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.EasingProperty, observable.ToBinding()));
        return keyFrame;
    }

    // DelayProperty

    public static Style SetAnimationDelay(this Style style, System.TimeSpan value)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayProperty, value));
        return style;
    }

    public static Style SetAnimationDelay(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayProperty, binding));
        return style;
    }

    public static Style SetAnimationDelay(this Style style, IObservable<System.TimeSpan> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetAnimationDelay(this KeyFrame keyFrame, System.TimeSpan value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetAnimationDelay(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetAnimationDelay(this KeyFrame keyFrame, IObservable<System.TimeSpan> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayProperty, observable.ToBinding()));
        return keyFrame;
    }

    // DelayBetweenIterationsProperty

    public static Style SetAnimationDelayBetweenIterations(this Style style, System.TimeSpan value)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayBetweenIterationsProperty, value));
        return style;
    }

    public static Style SetAnimationDelayBetweenIterations(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayBetweenIterationsProperty, binding));
        return style;
    }

    public static Style SetAnimationDelayBetweenIterations(this Style style, IObservable<System.TimeSpan> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayBetweenIterationsProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetAnimationDelayBetweenIterations(this KeyFrame keyFrame, System.TimeSpan value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayBetweenIterationsProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetAnimationDelayBetweenIterations(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayBetweenIterationsProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetAnimationDelayBetweenIterations(this KeyFrame keyFrame, IObservable<System.TimeSpan> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.DelayBetweenIterationsProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SpeedRatioProperty

    public static Style SetAnimationSpeedRatio(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.SpeedRatioProperty, value));
        return style;
    }

    public static Style SetAnimationSpeedRatio(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.SpeedRatioProperty, binding));
        return style;
    }

    public static Style SetAnimationSpeedRatio(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Animation.Animation.SpeedRatioProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetAnimationSpeedRatio(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.SpeedRatioProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetAnimationSpeedRatio(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.SpeedRatioProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetAnimationSpeedRatio(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Animation.Animation.SpeedRatioProperty, observable.ToBinding()));
        return keyFrame;
    }
}
