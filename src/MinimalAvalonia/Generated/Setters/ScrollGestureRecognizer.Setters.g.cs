// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ScrollGestureRecognizerSetters
{
    // CanHorizontallyScrollProperty

    public static Style SetScrollGestureRecognizerCanHorizontallyScroll(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanHorizontallyScrollProperty, value));
        return style;
    }

    public static Style SetScrollGestureRecognizerCanHorizontallyScroll(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanHorizontallyScrollProperty, binding));
        return style;
    }

    public static Style SetScrollGestureRecognizerCanHorizontallyScroll(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanHorizontallyScrollProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollGestureRecognizerCanHorizontallyScroll(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanHorizontallyScrollProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollGestureRecognizerCanHorizontallyScroll(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanHorizontallyScrollProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollGestureRecognizerCanHorizontallyScroll(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanHorizontallyScrollProperty, observable.ToBinding()));
        return keyFrame;
    }

    // CanVerticallyScrollProperty

    public static Style SetScrollGestureRecognizerCanVerticallyScroll(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanVerticallyScrollProperty, value));
        return style;
    }

    public static Style SetScrollGestureRecognizerCanVerticallyScroll(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanVerticallyScrollProperty, binding));
        return style;
    }

    public static Style SetScrollGestureRecognizerCanVerticallyScroll(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanVerticallyScrollProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollGestureRecognizerCanVerticallyScroll(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanVerticallyScrollProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollGestureRecognizerCanVerticallyScroll(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanVerticallyScrollProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollGestureRecognizerCanVerticallyScroll(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Input.GestureRecognizers.ScrollGestureRecognizer.CanVerticallyScrollProperty, observable.ToBinding()));
        return keyFrame;
    }
}
