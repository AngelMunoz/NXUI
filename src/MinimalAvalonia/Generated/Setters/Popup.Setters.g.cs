// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class PopupSetters
{
    // WindowManagerAddShadowHintProperty

    public static Style SetPopupWindowManagerAddShadowHint(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.WindowManagerAddShadowHintProperty, value));
        return style;
    }

    public static Style SetPopupWindowManagerAddShadowHint(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.WindowManagerAddShadowHintProperty, binding));
        return style;
    }

    public static Style SetPopupWindowManagerAddShadowHint(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.WindowManagerAddShadowHintProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupWindowManagerAddShadowHint(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.WindowManagerAddShadowHintProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupWindowManagerAddShadowHint(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.WindowManagerAddShadowHintProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupWindowManagerAddShadowHint(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.WindowManagerAddShadowHintProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ChildProperty

    public static Style SetPopupChild(this Style style, Avalonia.Controls.Control value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ChildProperty, value));
        return style;
    }

    public static Style SetPopupChild(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ChildProperty, binding));
        return style;
    }

    public static Style SetPopupChild(this Style style, IObservable<Avalonia.Controls.Control> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ChildProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupChild(this KeyFrame keyFrame, Avalonia.Controls.Control value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ChildProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupChild(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ChildProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupChild(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Control> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ChildProperty, observable.ToBinding()));
        return keyFrame;
    }

    // InheritsTransformProperty

    public static Style SetPopupInheritsTransform(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.InheritsTransformProperty, value));
        return style;
    }

    public static Style SetPopupInheritsTransform(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.InheritsTransformProperty, binding));
        return style;
    }

    public static Style SetPopupInheritsTransform(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.InheritsTransformProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupInheritsTransform(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.InheritsTransformProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupInheritsTransform(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.InheritsTransformProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupInheritsTransform(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.InheritsTransformProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsOpenProperty

    public static Style SetPopupIsOpen(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsOpenProperty, value));
        return style;
    }

    public static Style SetPopupIsOpen(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsOpenProperty, binding));
        return style;
    }

    public static Style SetPopupIsOpen(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsOpenProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupIsOpen(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsOpenProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupIsOpen(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsOpenProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupIsOpen(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsOpenProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PlacementAnchorProperty

    public static Style SetPopupPlacementAnchor(this Style style, Avalonia.Controls.Primitives.PopupPositioning.PopupAnchor value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementAnchorProperty, value));
        return style;
    }

    public static Style SetPopupPlacementAnchor(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementAnchorProperty, binding));
        return style;
    }

    public static Style SetPopupPlacementAnchor(this Style style, IObservable<Avalonia.Controls.Primitives.PopupPositioning.PopupAnchor> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementAnchorProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupPlacementAnchor(this KeyFrame keyFrame, Avalonia.Controls.Primitives.PopupPositioning.PopupAnchor value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementAnchorProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementAnchor(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementAnchorProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementAnchor(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Primitives.PopupPositioning.PopupAnchor> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementAnchorProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PlacementConstraintAdjustmentProperty

    public static Style SetPopupPlacementConstraintAdjustment(this Style style, Avalonia.Controls.Primitives.PopupPositioning.PopupPositionerConstraintAdjustment value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementConstraintAdjustmentProperty, value));
        return style;
    }

    public static Style SetPopupPlacementConstraintAdjustment(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementConstraintAdjustmentProperty, binding));
        return style;
    }

    public static Style SetPopupPlacementConstraintAdjustment(this Style style, IObservable<Avalonia.Controls.Primitives.PopupPositioning.PopupPositionerConstraintAdjustment> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementConstraintAdjustmentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupPlacementConstraintAdjustment(this KeyFrame keyFrame, Avalonia.Controls.Primitives.PopupPositioning.PopupPositionerConstraintAdjustment value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementConstraintAdjustmentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementConstraintAdjustment(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementConstraintAdjustmentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementConstraintAdjustment(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Primitives.PopupPositioning.PopupPositionerConstraintAdjustment> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementConstraintAdjustmentProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PlacementGravityProperty

    public static Style SetPopupPlacementGravity(this Style style, Avalonia.Controls.Primitives.PopupPositioning.PopupGravity value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementGravityProperty, value));
        return style;
    }

    public static Style SetPopupPlacementGravity(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementGravityProperty, binding));
        return style;
    }

    public static Style SetPopupPlacementGravity(this Style style, IObservable<Avalonia.Controls.Primitives.PopupPositioning.PopupGravity> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementGravityProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupPlacementGravity(this KeyFrame keyFrame, Avalonia.Controls.Primitives.PopupPositioning.PopupGravity value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementGravityProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementGravity(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementGravityProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementGravity(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Primitives.PopupPositioning.PopupGravity> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementGravityProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PlacementModeProperty

    public static Style SetPopupPlacementMode(this Style style, Avalonia.Controls.PlacementMode value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementModeProperty, value));
        return style;
    }

    public static Style SetPopupPlacementMode(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementModeProperty, binding));
        return style;
    }

    public static Style SetPopupPlacementMode(this Style style, IObservable<Avalonia.Controls.PlacementMode> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementModeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupPlacementMode(this KeyFrame keyFrame, Avalonia.Controls.PlacementMode value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementModeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementMode(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementModeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementMode(this KeyFrame keyFrame, IObservable<Avalonia.Controls.PlacementMode> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementModeProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PlacementRectProperty

    public static Style SetPopupPlacementRect(this Style style, System.Nullable<Avalonia.Rect> value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementRectProperty, value));
        return style;
    }

    public static Style SetPopupPlacementRect(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementRectProperty, binding));
        return style;
    }

    public static Style SetPopupPlacementRect(this Style style, IObservable<System.Nullable<Avalonia.Rect>> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementRectProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupPlacementRect(this KeyFrame keyFrame, System.Nullable<Avalonia.Rect> value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementRectProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementRect(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementRectProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementRect(this KeyFrame keyFrame, IObservable<System.Nullable<Avalonia.Rect>> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementRectProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PlacementTargetProperty

    public static Style SetPopupPlacementTarget(this Style style, Avalonia.Controls.Control value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementTargetProperty, value));
        return style;
    }

    public static Style SetPopupPlacementTarget(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementTargetProperty, binding));
        return style;
    }

    public static Style SetPopupPlacementTarget(this Style style, IObservable<Avalonia.Controls.Control> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementTargetProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupPlacementTarget(this KeyFrame keyFrame, Avalonia.Controls.Control value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementTargetProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementTarget(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementTargetProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupPlacementTarget(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Control> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.PlacementTargetProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ObeyScreenEdgesProperty

    public static Style SetPopupObeyScreenEdges(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ObeyScreenEdgesProperty, value));
        return style;
    }

    public static Style SetPopupObeyScreenEdges(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ObeyScreenEdgesProperty, binding));
        return style;
    }

    public static Style SetPopupObeyScreenEdges(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ObeyScreenEdgesProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupObeyScreenEdges(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ObeyScreenEdgesProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupObeyScreenEdges(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ObeyScreenEdgesProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupObeyScreenEdges(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.ObeyScreenEdgesProperty, observable.ToBinding()));
        return keyFrame;
    }

    // OverlayDismissEventPassThroughProperty

    public static Style SetPopupOverlayDismissEventPassThrough(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayDismissEventPassThroughProperty, value));
        return style;
    }

    public static Style SetPopupOverlayDismissEventPassThrough(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayDismissEventPassThroughProperty, binding));
        return style;
    }

    public static Style SetPopupOverlayDismissEventPassThrough(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayDismissEventPassThroughProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupOverlayDismissEventPassThrough(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayDismissEventPassThroughProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupOverlayDismissEventPassThrough(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayDismissEventPassThroughProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupOverlayDismissEventPassThrough(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayDismissEventPassThroughProperty, observable.ToBinding()));
        return keyFrame;
    }

    // OverlayInputPassThroughElementProperty

    public static Style SetPopupOverlayInputPassThroughElement(this Style style, Avalonia.Input.IInputElement value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayInputPassThroughElementProperty, value));
        return style;
    }

    public static Style SetPopupOverlayInputPassThroughElement(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayInputPassThroughElementProperty, binding));
        return style;
    }

    public static Style SetPopupOverlayInputPassThroughElement(this Style style, IObservable<Avalonia.Input.IInputElement> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayInputPassThroughElementProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupOverlayInputPassThroughElement(this KeyFrame keyFrame, Avalonia.Input.IInputElement value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayInputPassThroughElementProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupOverlayInputPassThroughElement(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayInputPassThroughElementProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupOverlayInputPassThroughElement(this KeyFrame keyFrame, IObservable<Avalonia.Input.IInputElement> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.OverlayInputPassThroughElementProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HorizontalOffsetProperty

    public static Style SetPopupHorizontalOffset(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.HorizontalOffsetProperty, value));
        return style;
    }

    public static Style SetPopupHorizontalOffset(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.HorizontalOffsetProperty, binding));
        return style;
    }

    public static Style SetPopupHorizontalOffset(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.HorizontalOffsetProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupHorizontalOffset(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.HorizontalOffsetProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupHorizontalOffset(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.HorizontalOffsetProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupHorizontalOffset(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.HorizontalOffsetProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsLightDismissEnabledProperty

    public static Style SetPopupIsLightDismissEnabled(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsLightDismissEnabledProperty, value));
        return style;
    }

    public static Style SetPopupIsLightDismissEnabled(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsLightDismissEnabledProperty, binding));
        return style;
    }

    public static Style SetPopupIsLightDismissEnabled(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsLightDismissEnabledProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupIsLightDismissEnabled(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsLightDismissEnabledProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupIsLightDismissEnabled(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsLightDismissEnabledProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupIsLightDismissEnabled(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.IsLightDismissEnabledProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VerticalOffsetProperty

    public static Style SetPopupVerticalOffset(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.VerticalOffsetProperty, value));
        return style;
    }

    public static Style SetPopupVerticalOffset(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.VerticalOffsetProperty, binding));
        return style;
    }

    public static Style SetPopupVerticalOffset(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.VerticalOffsetProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupVerticalOffset(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.VerticalOffsetProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupVerticalOffset(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.VerticalOffsetProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupVerticalOffset(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.VerticalOffsetProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TopmostProperty

    public static Style SetPopupTopmost(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.TopmostProperty, value));
        return style;
    }

    public static Style SetPopupTopmost(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.TopmostProperty, binding));
        return style;
    }

    public static Style SetPopupTopmost(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.TopmostProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPopupTopmost(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.TopmostProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPopupTopmost(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.TopmostProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPopupTopmost(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.Popup.TopmostProperty, observable.ToBinding()));
        return keyFrame;
    }
}
