// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class PenSetters
{
    // BrushProperty

    public static Style SetPenBrush(this Style style, Avalonia.Media.IBrush value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.BrushProperty, value));
        return style;
    }

    public static Style SetPenBrush(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.BrushProperty, binding));
        return style;
    }

    public static Style SetPenBrush(this Style style, IObservable<Avalonia.Media.IBrush> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.BrushProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPenBrush(this KeyFrame keyFrame, Avalonia.Media.IBrush value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.BrushProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPenBrush(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.BrushProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPenBrush(this KeyFrame keyFrame, IObservable<Avalonia.Media.IBrush> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.BrushProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ThicknessProperty

    public static Style SetPenThickness(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.ThicknessProperty, value));
        return style;
    }

    public static Style SetPenThickness(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.ThicknessProperty, binding));
        return style;
    }

    public static Style SetPenThickness(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.ThicknessProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPenThickness(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.ThicknessProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPenThickness(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.ThicknessProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPenThickness(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.ThicknessProperty, observable.ToBinding()));
        return keyFrame;
    }

    // DashStyleProperty

    public static Style SetPenDashStyle(this Style style, Avalonia.Media.IDashStyle value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.DashStyleProperty, value));
        return style;
    }

    public static Style SetPenDashStyle(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.DashStyleProperty, binding));
        return style;
    }

    public static Style SetPenDashStyle(this Style style, IObservable<Avalonia.Media.IDashStyle> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.DashStyleProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPenDashStyle(this KeyFrame keyFrame, Avalonia.Media.IDashStyle value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.DashStyleProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPenDashStyle(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.DashStyleProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPenDashStyle(this KeyFrame keyFrame, IObservable<Avalonia.Media.IDashStyle> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.DashStyleProperty, observable.ToBinding()));
        return keyFrame;
    }

    // LineCapProperty

    public static Style SetPenLineCap(this Style style, Avalonia.Media.PenLineCap value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.LineCapProperty, value));
        return style;
    }

    public static Style SetPenLineCap(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.LineCapProperty, binding));
        return style;
    }

    public static Style SetPenLineCap(this Style style, IObservable<Avalonia.Media.PenLineCap> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.LineCapProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPenLineCap(this KeyFrame keyFrame, Avalonia.Media.PenLineCap value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.LineCapProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPenLineCap(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.LineCapProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPenLineCap(this KeyFrame keyFrame, IObservable<Avalonia.Media.PenLineCap> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.LineCapProperty, observable.ToBinding()));
        return keyFrame;
    }

    // LineJoinProperty

    public static Style SetPenLineJoin(this Style style, Avalonia.Media.PenLineJoin value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.LineJoinProperty, value));
        return style;
    }

    public static Style SetPenLineJoin(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.LineJoinProperty, binding));
        return style;
    }

    public static Style SetPenLineJoin(this Style style, IObservable<Avalonia.Media.PenLineJoin> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.LineJoinProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPenLineJoin(this KeyFrame keyFrame, Avalonia.Media.PenLineJoin value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.LineJoinProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPenLineJoin(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.LineJoinProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPenLineJoin(this KeyFrame keyFrame, IObservable<Avalonia.Media.PenLineJoin> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.LineJoinProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MiterLimitProperty

    public static Style SetPenMiterLimit(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.MiterLimitProperty, value));
        return style;
    }

    public static Style SetPenMiterLimit(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.MiterLimitProperty, binding));
        return style;
    }

    public static Style SetPenMiterLimit(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Pen.MiterLimitProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetPenMiterLimit(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.MiterLimitProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetPenMiterLimit(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.MiterLimitProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetPenMiterLimit(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Pen.MiterLimitProperty, observable.ToBinding()));
        return keyFrame;
    }
}
