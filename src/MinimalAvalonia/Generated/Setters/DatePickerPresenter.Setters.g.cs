// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class DatePickerPresenterSetters
{
    // DateProperty

    public static Style SetDatePickerPresenterDate(this Style style, System.DateTimeOffset value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DateProperty, value));
        return style;
    }

    public static Style SetDatePickerPresenterDate(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DateProperty, binding));
        return style;
    }

    public static Style SetDatePickerPresenterDate(this Style style, IObservable<System.DateTimeOffset> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DateProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerPresenterDate(this KeyFrame keyFrame, System.DateTimeOffset value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DateProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterDate(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DateProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterDate(this KeyFrame keyFrame, IObservable<System.DateTimeOffset> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DateProperty, observable.ToBinding()));
        return keyFrame;
    }

    // DayFormatProperty

    public static Style SetDatePickerPresenterDayFormat(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayFormatProperty, value));
        return style;
    }

    public static Style SetDatePickerPresenterDayFormat(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayFormatProperty, binding));
        return style;
    }

    public static Style SetDatePickerPresenterDayFormat(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayFormatProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerPresenterDayFormat(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayFormatProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterDayFormat(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayFormatProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterDayFormat(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayFormatProperty, observable.ToBinding()));
        return keyFrame;
    }

    // DayVisibleProperty

    public static Style SetDatePickerPresenterDayVisible(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayVisibleProperty, value));
        return style;
    }

    public static Style SetDatePickerPresenterDayVisible(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayVisibleProperty, binding));
        return style;
    }

    public static Style SetDatePickerPresenterDayVisible(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayVisibleProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerPresenterDayVisible(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayVisibleProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterDayVisible(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayVisibleProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterDayVisible(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.DayVisibleProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MaxYearProperty

    public static Style SetDatePickerPresenterMaxYear(this Style style, System.DateTimeOffset value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MaxYearProperty, value));
        return style;
    }

    public static Style SetDatePickerPresenterMaxYear(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MaxYearProperty, binding));
        return style;
    }

    public static Style SetDatePickerPresenterMaxYear(this Style style, IObservable<System.DateTimeOffset> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MaxYearProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerPresenterMaxYear(this KeyFrame keyFrame, System.DateTimeOffset value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MaxYearProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterMaxYear(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MaxYearProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterMaxYear(this KeyFrame keyFrame, IObservable<System.DateTimeOffset> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MaxYearProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MinYearProperty

    public static Style SetDatePickerPresenterMinYear(this Style style, System.DateTimeOffset value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MinYearProperty, value));
        return style;
    }

    public static Style SetDatePickerPresenterMinYear(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MinYearProperty, binding));
        return style;
    }

    public static Style SetDatePickerPresenterMinYear(this Style style, IObservable<System.DateTimeOffset> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MinYearProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerPresenterMinYear(this KeyFrame keyFrame, System.DateTimeOffset value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MinYearProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterMinYear(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MinYearProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterMinYear(this KeyFrame keyFrame, IObservable<System.DateTimeOffset> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MinYearProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MonthFormatProperty

    public static Style SetDatePickerPresenterMonthFormat(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthFormatProperty, value));
        return style;
    }

    public static Style SetDatePickerPresenterMonthFormat(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthFormatProperty, binding));
        return style;
    }

    public static Style SetDatePickerPresenterMonthFormat(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthFormatProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerPresenterMonthFormat(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthFormatProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterMonthFormat(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthFormatProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterMonthFormat(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthFormatProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MonthVisibleProperty

    public static Style SetDatePickerPresenterMonthVisible(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthVisibleProperty, value));
        return style;
    }

    public static Style SetDatePickerPresenterMonthVisible(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthVisibleProperty, binding));
        return style;
    }

    public static Style SetDatePickerPresenterMonthVisible(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthVisibleProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerPresenterMonthVisible(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthVisibleProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterMonthVisible(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthVisibleProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterMonthVisible(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.MonthVisibleProperty, observable.ToBinding()));
        return keyFrame;
    }

    // YearFormatProperty

    public static Style SetDatePickerPresenterYearFormat(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearFormatProperty, value));
        return style;
    }

    public static Style SetDatePickerPresenterYearFormat(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearFormatProperty, binding));
        return style;
    }

    public static Style SetDatePickerPresenterYearFormat(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearFormatProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerPresenterYearFormat(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearFormatProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterYearFormat(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearFormatProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterYearFormat(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearFormatProperty, observable.ToBinding()));
        return keyFrame;
    }

    // YearVisibleProperty

    public static Style SetDatePickerPresenterYearVisible(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearVisibleProperty, value));
        return style;
    }

    public static Style SetDatePickerPresenterYearVisible(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearVisibleProperty, binding));
        return style;
    }

    public static Style SetDatePickerPresenterYearVisible(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearVisibleProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerPresenterYearVisible(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearVisibleProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterYearVisible(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearVisibleProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerPresenterYearVisible(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePickerPresenter.YearVisibleProperty, observable.ToBinding()));
        return keyFrame;
    }
}
