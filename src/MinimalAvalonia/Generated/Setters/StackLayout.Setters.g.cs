// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class StackLayoutSetters
{
    // DisableVirtualizationProperty

    public static Style SetStackLayoutDisableVirtualization(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.StackLayout.DisableVirtualizationProperty, value));
        return style;
    }

    public static Style SetStackLayoutDisableVirtualization(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.StackLayout.DisableVirtualizationProperty, binding));
        return style;
    }

    public static Style SetStackLayoutDisableVirtualization(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.StackLayout.DisableVirtualizationProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetStackLayoutDisableVirtualization(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.StackLayout.DisableVirtualizationProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetStackLayoutDisableVirtualization(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.StackLayout.DisableVirtualizationProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetStackLayoutDisableVirtualization(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.StackLayout.DisableVirtualizationProperty, observable.ToBinding()));
        return keyFrame;
    }

    // OrientationProperty

    public static Style SetStackLayoutOrientation(this Style style, Avalonia.Layout.Orientation value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.StackLayout.OrientationProperty, value));
        return style;
    }

    public static Style SetStackLayoutOrientation(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.StackLayout.OrientationProperty, binding));
        return style;
    }

    public static Style SetStackLayoutOrientation(this Style style, IObservable<Avalonia.Layout.Orientation> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.StackLayout.OrientationProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetStackLayoutOrientation(this KeyFrame keyFrame, Avalonia.Layout.Orientation value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.StackLayout.OrientationProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetStackLayoutOrientation(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.StackLayout.OrientationProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetStackLayoutOrientation(this KeyFrame keyFrame, IObservable<Avalonia.Layout.Orientation> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.StackLayout.OrientationProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SpacingProperty

    public static Style SetStackLayoutSpacing(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.StackLayout.SpacingProperty, value));
        return style;
    }

    public static Style SetStackLayoutSpacing(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.StackLayout.SpacingProperty, binding));
        return style;
    }

    public static Style SetStackLayoutSpacing(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.StackLayout.SpacingProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetStackLayoutSpacing(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.StackLayout.SpacingProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetStackLayoutSpacing(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.StackLayout.SpacingProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetStackLayoutSpacing(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.StackLayout.SpacingProperty, observable.ToBinding()));
        return keyFrame;
    }
}
