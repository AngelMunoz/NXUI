// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ControlSetters
{
    // FocusAdornerProperty

    public static Style SetControlFocusAdorner(this Style style, Avalonia.Controls.ITemplate<Avalonia.Controls.IControl> value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.FocusAdornerProperty, value));
        return style;
    }

    public static Style SetControlFocusAdorner(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.FocusAdornerProperty, binding));
        return style;
    }

    public static Style SetControlFocusAdorner(this Style style, IObservable<Avalonia.Controls.ITemplate<Avalonia.Controls.IControl>> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.FocusAdornerProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetControlFocusAdorner(this KeyFrame keyFrame, Avalonia.Controls.ITemplate<Avalonia.Controls.IControl> value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.FocusAdornerProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetControlFocusAdorner(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.FocusAdornerProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetControlFocusAdorner(this KeyFrame keyFrame, IObservable<Avalonia.Controls.ITemplate<Avalonia.Controls.IControl>> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.FocusAdornerProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TagProperty

    public static Style SetControlTag(this Style style, System.Object value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.TagProperty, value));
        return style;
    }

    public static Style SetControlTag(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.TagProperty, binding));
        return style;
    }

    public static Style SetControlTag(this Style style, IObservable<System.Object> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.TagProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetControlTag(this KeyFrame keyFrame, System.Object value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.TagProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetControlTag(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.TagProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetControlTag(this KeyFrame keyFrame, IObservable<System.Object> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.TagProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ContextMenuProperty

    public static Style SetControlContextMenu(this Style style, Avalonia.Controls.ContextMenu value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.ContextMenuProperty, value));
        return style;
    }

    public static Style SetControlContextMenu(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.ContextMenuProperty, binding));
        return style;
    }

    public static Style SetControlContextMenu(this Style style, IObservable<Avalonia.Controls.ContextMenu> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.ContextMenuProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetControlContextMenu(this KeyFrame keyFrame, Avalonia.Controls.ContextMenu value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.ContextMenuProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetControlContextMenu(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.ContextMenuProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetControlContextMenu(this KeyFrame keyFrame, IObservable<Avalonia.Controls.ContextMenu> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.ContextMenuProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ContextFlyoutProperty

    public static Style SetControlContextFlyout(this Style style, Avalonia.Controls.Primitives.FlyoutBase value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.ContextFlyoutProperty, value));
        return style;
    }

    public static Style SetControlContextFlyout(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.ContextFlyoutProperty, binding));
        return style;
    }

    public static Style SetControlContextFlyout(this Style style, IObservable<Avalonia.Controls.Primitives.FlyoutBase> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.ContextFlyoutProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetControlContextFlyout(this KeyFrame keyFrame, Avalonia.Controls.Primitives.FlyoutBase value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.ContextFlyoutProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetControlContextFlyout(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.ContextFlyoutProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetControlContextFlyout(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Primitives.FlyoutBase> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.ContextFlyoutProperty, observable.ToBinding()));
        return keyFrame;
    }

    // FlowDirectionProperty

    public static Style SetControlFlowDirection(this Style style, Avalonia.Media.FlowDirection value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.FlowDirectionProperty, value));
        return style;
    }

    public static Style SetControlFlowDirection(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.FlowDirectionProperty, binding));
        return style;
    }

    public static Style SetControlFlowDirection(this Style style, IObservable<Avalonia.Media.FlowDirection> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Control.FlowDirectionProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetControlFlowDirection(this KeyFrame keyFrame, Avalonia.Media.FlowDirection value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.FlowDirectionProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetControlFlowDirection(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.FlowDirectionProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetControlFlowDirection(this KeyFrame keyFrame, IObservable<Avalonia.Media.FlowDirection> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Control.FlowDirectionProperty, observable.ToBinding()));
        return keyFrame;
    }

}
