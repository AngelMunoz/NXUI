// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TextBoxSetters
{
    // AcceptsReturnProperty

    public static Style SetTextBoxAcceptsReturn(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsReturnProperty, value));
        return style;
    }

    public static Style SetTextBoxAcceptsReturn(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsReturnProperty, binding));
        return style;
    }

    public static Style SetTextBoxAcceptsReturn(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsReturnProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxAcceptsReturn(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsReturnProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxAcceptsReturn(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsReturnProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxAcceptsReturn(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsReturnProperty, observable.ToBinding()));
        return keyFrame;
    }

    // AcceptsTabProperty

    public static Style SetTextBoxAcceptsTab(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsTabProperty, value));
        return style;
    }

    public static Style SetTextBoxAcceptsTab(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsTabProperty, binding));
        return style;
    }

    public static Style SetTextBoxAcceptsTab(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsTabProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxAcceptsTab(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsTabProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxAcceptsTab(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsTabProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxAcceptsTab(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.AcceptsTabProperty, observable.ToBinding()));
        return keyFrame;
    }

    // CaretIndexProperty

    public static Style SetTextBoxCaretIndex(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretIndexProperty, value));
        return style;
    }

    public static Style SetTextBoxCaretIndex(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretIndexProperty, binding));
        return style;
    }

    public static Style SetTextBoxCaretIndex(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretIndexProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxCaretIndex(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretIndexProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxCaretIndex(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretIndexProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxCaretIndex(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretIndexProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsReadOnlyProperty

    public static Style SetTextBoxIsReadOnly(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsReadOnlyProperty, value));
        return style;
    }

    public static Style SetTextBoxIsReadOnly(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsReadOnlyProperty, binding));
        return style;
    }

    public static Style SetTextBoxIsReadOnly(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsReadOnlyProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxIsReadOnly(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsReadOnlyProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxIsReadOnly(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsReadOnlyProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxIsReadOnly(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsReadOnlyProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PasswordCharProperty

    public static Style SetTextBoxPasswordChar(this Style style, System.Char value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.PasswordCharProperty, value));
        return style;
    }

    public static Style SetTextBoxPasswordChar(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.PasswordCharProperty, binding));
        return style;
    }

    public static Style SetTextBoxPasswordChar(this Style style, IObservable<System.Char> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.PasswordCharProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxPasswordChar(this KeyFrame keyFrame, System.Char value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.PasswordCharProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxPasswordChar(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.PasswordCharProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxPasswordChar(this KeyFrame keyFrame, IObservable<System.Char> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.PasswordCharProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SelectionBrushProperty

    public static Style SetTextBoxSelectionBrush(this Style style, Avalonia.Media.IBrush value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionBrushProperty, value));
        return style;
    }

    public static Style SetTextBoxSelectionBrush(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionBrushProperty, binding));
        return style;
    }

    public static Style SetTextBoxSelectionBrush(this Style style, IObservable<Avalonia.Media.IBrush> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionBrushProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxSelectionBrush(this KeyFrame keyFrame, Avalonia.Media.IBrush value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionBrushProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxSelectionBrush(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionBrushProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxSelectionBrush(this KeyFrame keyFrame, IObservable<Avalonia.Media.IBrush> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionBrushProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SelectionForegroundBrushProperty

    public static Style SetTextBoxSelectionForegroundBrush(this Style style, Avalonia.Media.IBrush value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionForegroundBrushProperty, value));
        return style;
    }

    public static Style SetTextBoxSelectionForegroundBrush(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionForegroundBrushProperty, binding));
        return style;
    }

    public static Style SetTextBoxSelectionForegroundBrush(this Style style, IObservable<Avalonia.Media.IBrush> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionForegroundBrushProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxSelectionForegroundBrush(this KeyFrame keyFrame, Avalonia.Media.IBrush value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionForegroundBrushProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxSelectionForegroundBrush(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionForegroundBrushProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxSelectionForegroundBrush(this KeyFrame keyFrame, IObservable<Avalonia.Media.IBrush> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionForegroundBrushProperty, observable.ToBinding()));
        return keyFrame;
    }

    // CaretBrushProperty

    public static Style SetTextBoxCaretBrush(this Style style, Avalonia.Media.IBrush value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretBrushProperty, value));
        return style;
    }

    public static Style SetTextBoxCaretBrush(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretBrushProperty, binding));
        return style;
    }

    public static Style SetTextBoxCaretBrush(this Style style, IObservable<Avalonia.Media.IBrush> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretBrushProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxCaretBrush(this KeyFrame keyFrame, Avalonia.Media.IBrush value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretBrushProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxCaretBrush(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretBrushProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxCaretBrush(this KeyFrame keyFrame, IObservable<Avalonia.Media.IBrush> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CaretBrushProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SelectionStartProperty

    public static Style SetTextBoxSelectionStart(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionStartProperty, value));
        return style;
    }

    public static Style SetTextBoxSelectionStart(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionStartProperty, binding));
        return style;
    }

    public static Style SetTextBoxSelectionStart(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionStartProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxSelectionStart(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionStartProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxSelectionStart(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionStartProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxSelectionStart(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionStartProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SelectionEndProperty

    public static Style SetTextBoxSelectionEnd(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionEndProperty, value));
        return style;
    }

    public static Style SetTextBoxSelectionEnd(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionEndProperty, binding));
        return style;
    }

    public static Style SetTextBoxSelectionEnd(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionEndProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxSelectionEnd(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionEndProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxSelectionEnd(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionEndProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxSelectionEnd(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.SelectionEndProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MaxLengthProperty

    public static Style SetTextBoxMaxLength(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLengthProperty, value));
        return style;
    }

    public static Style SetTextBoxMaxLength(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLengthProperty, binding));
        return style;
    }

    public static Style SetTextBoxMaxLength(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLengthProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxMaxLength(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLengthProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxMaxLength(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLengthProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxMaxLength(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLengthProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MaxLinesProperty

    public static Style SetTextBoxMaxLines(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLinesProperty, value));
        return style;
    }

    public static Style SetTextBoxMaxLines(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLinesProperty, binding));
        return style;
    }

    public static Style SetTextBoxMaxLines(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLinesProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxMaxLines(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLinesProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxMaxLines(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLinesProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxMaxLines(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.MaxLinesProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TextProperty

    public static Style SetTextBoxText(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.TextProperty, value));
        return style;
    }

    public static Style SetTextBoxText(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.TextProperty, binding));
        return style;
    }

    public static Style SetTextBoxText(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.TextProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxText(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.TextProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxText(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.TextProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxText(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.TextProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HorizontalContentAlignmentProperty

    public static Style SetTextBoxHorizontalContentAlignment(this Style style, Avalonia.Layout.HorizontalAlignment value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.HorizontalContentAlignmentProperty, value));
        return style;
    }

    public static Style SetTextBoxHorizontalContentAlignment(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.HorizontalContentAlignmentProperty, binding));
        return style;
    }

    public static Style SetTextBoxHorizontalContentAlignment(this Style style, IObservable<Avalonia.Layout.HorizontalAlignment> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.HorizontalContentAlignmentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxHorizontalContentAlignment(this KeyFrame keyFrame, Avalonia.Layout.HorizontalAlignment value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.HorizontalContentAlignmentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxHorizontalContentAlignment(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.HorizontalContentAlignmentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxHorizontalContentAlignment(this KeyFrame keyFrame, IObservable<Avalonia.Layout.HorizontalAlignment> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.HorizontalContentAlignmentProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VerticalContentAlignmentProperty

    public static Style SetTextBoxVerticalContentAlignment(this Style style, Avalonia.Layout.VerticalAlignment value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.VerticalContentAlignmentProperty, value));
        return style;
    }

    public static Style SetTextBoxVerticalContentAlignment(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.VerticalContentAlignmentProperty, binding));
        return style;
    }

    public static Style SetTextBoxVerticalContentAlignment(this Style style, IObservable<Avalonia.Layout.VerticalAlignment> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.VerticalContentAlignmentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxVerticalContentAlignment(this KeyFrame keyFrame, Avalonia.Layout.VerticalAlignment value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.VerticalContentAlignmentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxVerticalContentAlignment(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.VerticalContentAlignmentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxVerticalContentAlignment(this KeyFrame keyFrame, IObservable<Avalonia.Layout.VerticalAlignment> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.VerticalContentAlignmentProperty, observable.ToBinding()));
        return keyFrame;
    }

    // WatermarkProperty

    public static Style SetTextBoxWatermark(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.WatermarkProperty, value));
        return style;
    }

    public static Style SetTextBoxWatermark(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.WatermarkProperty, binding));
        return style;
    }

    public static Style SetTextBoxWatermark(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.WatermarkProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxWatermark(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.WatermarkProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxWatermark(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.WatermarkProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxWatermark(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.WatermarkProperty, observable.ToBinding()));
        return keyFrame;
    }

    // UseFloatingWatermarkProperty

    public static Style SetTextBoxUseFloatingWatermark(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.UseFloatingWatermarkProperty, value));
        return style;
    }

    public static Style SetTextBoxUseFloatingWatermark(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.UseFloatingWatermarkProperty, binding));
        return style;
    }

    public static Style SetTextBoxUseFloatingWatermark(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.UseFloatingWatermarkProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxUseFloatingWatermark(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.UseFloatingWatermarkProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxUseFloatingWatermark(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.UseFloatingWatermarkProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxUseFloatingWatermark(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.UseFloatingWatermarkProperty, observable.ToBinding()));
        return keyFrame;
    }

    // NewLineProperty

    public static Style SetTextBoxNewLine(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.NewLineProperty, value));
        return style;
    }

    public static Style SetTextBoxNewLine(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.NewLineProperty, binding));
        return style;
    }

    public static Style SetTextBoxNewLine(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.NewLineProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxNewLine(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.NewLineProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxNewLine(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.NewLineProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxNewLine(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.NewLineProperty, observable.ToBinding()));
        return keyFrame;
    }

    // InnerLeftContentProperty

    public static Style SetTextBoxInnerLeftContent(this Style style, System.Object value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerLeftContentProperty, value));
        return style;
    }

    public static Style SetTextBoxInnerLeftContent(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerLeftContentProperty, binding));
        return style;
    }

    public static Style SetTextBoxInnerLeftContent(this Style style, IObservable<System.Object> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerLeftContentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxInnerLeftContent(this KeyFrame keyFrame, System.Object value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerLeftContentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxInnerLeftContent(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerLeftContentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxInnerLeftContent(this KeyFrame keyFrame, IObservable<System.Object> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerLeftContentProperty, observable.ToBinding()));
        return keyFrame;
    }

    // InnerRightContentProperty

    public static Style SetTextBoxInnerRightContent(this Style style, System.Object value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerRightContentProperty, value));
        return style;
    }

    public static Style SetTextBoxInnerRightContent(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerRightContentProperty, binding));
        return style;
    }

    public static Style SetTextBoxInnerRightContent(this Style style, IObservable<System.Object> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerRightContentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxInnerRightContent(this KeyFrame keyFrame, System.Object value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerRightContentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxInnerRightContent(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerRightContentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxInnerRightContent(this KeyFrame keyFrame, IObservable<System.Object> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.InnerRightContentProperty, observable.ToBinding()));
        return keyFrame;
    }

    // RevealPasswordProperty

    public static Style SetTextBoxRevealPassword(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.RevealPasswordProperty, value));
        return style;
    }

    public static Style SetTextBoxRevealPassword(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.RevealPasswordProperty, binding));
        return style;
    }

    public static Style SetTextBoxRevealPassword(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.RevealPasswordProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxRevealPassword(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.RevealPasswordProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxRevealPassword(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.RevealPasswordProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxRevealPassword(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.RevealPasswordProperty, observable.ToBinding()));
        return keyFrame;
    }

    // CanCutProperty

    public static Style SetTextBoxCanCut(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCutProperty, value));
        return style;
    }

    public static Style SetTextBoxCanCut(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCutProperty, binding));
        return style;
    }

    public static Style SetTextBoxCanCut(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCutProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxCanCut(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCutProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxCanCut(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCutProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxCanCut(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCutProperty, observable.ToBinding()));
        return keyFrame;
    }

    // CanCopyProperty

    public static Style SetTextBoxCanCopy(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCopyProperty, value));
        return style;
    }

    public static Style SetTextBoxCanCopy(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCopyProperty, binding));
        return style;
    }

    public static Style SetTextBoxCanCopy(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCopyProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxCanCopy(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCopyProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxCanCopy(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCopyProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxCanCopy(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanCopyProperty, observable.ToBinding()));
        return keyFrame;
    }

    // CanPasteProperty

    public static Style SetTextBoxCanPaste(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanPasteProperty, value));
        return style;
    }

    public static Style SetTextBoxCanPaste(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanPasteProperty, binding));
        return style;
    }

    public static Style SetTextBoxCanPaste(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanPasteProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxCanPaste(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanPasteProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxCanPaste(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanPasteProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxCanPaste(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.CanPasteProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsUndoEnabledProperty

    public static Style SetTextBoxIsUndoEnabled(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsUndoEnabledProperty, value));
        return style;
    }

    public static Style SetTextBoxIsUndoEnabled(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsUndoEnabledProperty, binding));
        return style;
    }

    public static Style SetTextBoxIsUndoEnabled(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsUndoEnabledProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxIsUndoEnabled(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsUndoEnabledProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxIsUndoEnabled(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsUndoEnabledProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxIsUndoEnabled(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.IsUndoEnabledProperty, observable.ToBinding()));
        return keyFrame;
    }

    // UndoLimitProperty

    public static Style SetTextBoxUndoLimit(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.UndoLimitProperty, value));
        return style;
    }

    public static Style SetTextBoxUndoLimit(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.UndoLimitProperty, binding));
        return style;
    }

    public static Style SetTextBoxUndoLimit(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TextBox.UndoLimitProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTextBoxUndoLimit(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.UndoLimitProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxUndoLimit(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.UndoLimitProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTextBoxUndoLimit(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TextBox.UndoLimitProperty, observable.ToBinding()));
        return keyFrame;
    }

}
