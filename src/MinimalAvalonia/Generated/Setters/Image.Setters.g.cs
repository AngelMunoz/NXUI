// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ImageSetters
{
    // SourceProperty

    public static Style SetImageSource(this Style style, Avalonia.Media.IImage value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Image.SourceProperty, value));
        return style;
    }

    public static Style SetImageSource(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Image.SourceProperty, binding));
        return style;
    }

    public static Style SetImageSource(this Style style, IObservable<Avalonia.Media.IImage> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Image.SourceProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetImageSource(this KeyFrame keyFrame, Avalonia.Media.IImage value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Image.SourceProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetImageSource(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Image.SourceProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetImageSource(this KeyFrame keyFrame, IObservable<Avalonia.Media.IImage> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Image.SourceProperty, observable.ToBinding()));
        return keyFrame;
    }

    // StretchProperty

    public static Style SetImageStretch(this Style style, Avalonia.Media.Stretch value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Image.StretchProperty, value));
        return style;
    }

    public static Style SetImageStretch(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Image.StretchProperty, binding));
        return style;
    }

    public static Style SetImageStretch(this Style style, IObservable<Avalonia.Media.Stretch> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Image.StretchProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetImageStretch(this KeyFrame keyFrame, Avalonia.Media.Stretch value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Image.StretchProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetImageStretch(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Image.StretchProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetImageStretch(this KeyFrame keyFrame, IObservable<Avalonia.Media.Stretch> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Image.StretchProperty, observable.ToBinding()));
        return keyFrame;
    }

    // StretchDirectionProperty

    public static Style SetImageStretchDirection(this Style style, Avalonia.Media.StretchDirection value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Image.StretchDirectionProperty, value));
        return style;
    }

    public static Style SetImageStretchDirection(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Image.StretchDirectionProperty, binding));
        return style;
    }

    public static Style SetImageStretchDirection(this Style style, IObservable<Avalonia.Media.StretchDirection> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Image.StretchDirectionProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetImageStretchDirection(this KeyFrame keyFrame, Avalonia.Media.StretchDirection value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Image.StretchDirectionProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetImageStretchDirection(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Image.StretchDirectionProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetImageStretchDirection(this KeyFrame keyFrame, IObservable<Avalonia.Media.StretchDirection> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Image.StretchDirectionProperty, observable.ToBinding()));
        return keyFrame;
    }
}
