// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class LayoutableSetters
{
    // DesiredSizeProperty

    public static Style SetLayoutableDesiredSize(this Style style, Avalonia.Size value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.DesiredSizeProperty, value));
        return style;
    }

    public static Style SetLayoutableDesiredSize(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.DesiredSizeProperty, binding));
        return style;
    }

    public static Style SetLayoutableDesiredSize(this Style style, IObservable<Avalonia.Size> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.DesiredSizeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableDesiredSize(this KeyFrame keyFrame, Avalonia.Size value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.DesiredSizeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableDesiredSize(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.DesiredSizeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableDesiredSize(this KeyFrame keyFrame, IObservable<Avalonia.Size> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.DesiredSizeProperty, observable.ToBinding()));
        return keyFrame;
    }

    // WidthProperty

    public static Style SetLayoutableWidth(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.WidthProperty, value));
        return style;
    }

    public static Style SetLayoutableWidth(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.WidthProperty, binding));
        return style;
    }

    public static Style SetLayoutableWidth(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.WidthProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableWidth(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.WidthProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableWidth(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.WidthProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableWidth(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.WidthProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HeightProperty

    public static Style SetLayoutableHeight(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HeightProperty, value));
        return style;
    }

    public static Style SetLayoutableHeight(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HeightProperty, binding));
        return style;
    }

    public static Style SetLayoutableHeight(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HeightProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableHeight(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HeightProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableHeight(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HeightProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableHeight(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HeightProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MinWidthProperty

    public static Style SetLayoutableMinWidth(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinWidthProperty, value));
        return style;
    }

    public static Style SetLayoutableMinWidth(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinWidthProperty, binding));
        return style;
    }

    public static Style SetLayoutableMinWidth(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinWidthProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableMinWidth(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinWidthProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableMinWidth(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinWidthProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableMinWidth(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinWidthProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MaxWidthProperty

    public static Style SetLayoutableMaxWidth(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxWidthProperty, value));
        return style;
    }

    public static Style SetLayoutableMaxWidth(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxWidthProperty, binding));
        return style;
    }

    public static Style SetLayoutableMaxWidth(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxWidthProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableMaxWidth(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxWidthProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableMaxWidth(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxWidthProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableMaxWidth(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxWidthProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MinHeightProperty

    public static Style SetLayoutableMinHeight(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinHeightProperty, value));
        return style;
    }

    public static Style SetLayoutableMinHeight(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinHeightProperty, binding));
        return style;
    }

    public static Style SetLayoutableMinHeight(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinHeightProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableMinHeight(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinHeightProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableMinHeight(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinHeightProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableMinHeight(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MinHeightProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MaxHeightProperty

    public static Style SetLayoutableMaxHeight(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxHeightProperty, value));
        return style;
    }

    public static Style SetLayoutableMaxHeight(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxHeightProperty, binding));
        return style;
    }

    public static Style SetLayoutableMaxHeight(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxHeightProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableMaxHeight(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxHeightProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableMaxHeight(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxHeightProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableMaxHeight(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MaxHeightProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MarginProperty

    public static Style SetLayoutableMargin(this Style style, Avalonia.Thickness value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MarginProperty, value));
        return style;
    }

    public static Style SetLayoutableMargin(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MarginProperty, binding));
        return style;
    }

    public static Style SetLayoutableMargin(this Style style, IObservable<Avalonia.Thickness> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MarginProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableMargin(this KeyFrame keyFrame, Avalonia.Thickness value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MarginProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableMargin(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MarginProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableMargin(this KeyFrame keyFrame, IObservable<Avalonia.Thickness> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.MarginProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HorizontalAlignmentProperty

    public static Style SetLayoutableHorizontalAlignment(this Style style, Avalonia.Layout.HorizontalAlignment value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HorizontalAlignmentProperty, value));
        return style;
    }

    public static Style SetLayoutableHorizontalAlignment(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HorizontalAlignmentProperty, binding));
        return style;
    }

    public static Style SetLayoutableHorizontalAlignment(this Style style, IObservable<Avalonia.Layout.HorizontalAlignment> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HorizontalAlignmentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableHorizontalAlignment(this KeyFrame keyFrame, Avalonia.Layout.HorizontalAlignment value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HorizontalAlignmentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableHorizontalAlignment(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HorizontalAlignmentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableHorizontalAlignment(this KeyFrame keyFrame, IObservable<Avalonia.Layout.HorizontalAlignment> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.HorizontalAlignmentProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VerticalAlignmentProperty

    public static Style SetLayoutableVerticalAlignment(this Style style, Avalonia.Layout.VerticalAlignment value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.VerticalAlignmentProperty, value));
        return style;
    }

    public static Style SetLayoutableVerticalAlignment(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.VerticalAlignmentProperty, binding));
        return style;
    }

    public static Style SetLayoutableVerticalAlignment(this Style style, IObservable<Avalonia.Layout.VerticalAlignment> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.VerticalAlignmentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableVerticalAlignment(this KeyFrame keyFrame, Avalonia.Layout.VerticalAlignment value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.VerticalAlignmentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableVerticalAlignment(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.VerticalAlignmentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableVerticalAlignment(this KeyFrame keyFrame, IObservable<Avalonia.Layout.VerticalAlignment> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.VerticalAlignmentProperty, observable.ToBinding()));
        return keyFrame;
    }

    // UseLayoutRoundingProperty

    public static Style SetLayoutableUseLayoutRounding(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.UseLayoutRoundingProperty, value));
        return style;
    }

    public static Style SetLayoutableUseLayoutRounding(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.UseLayoutRoundingProperty, binding));
        return style;
    }

    public static Style SetLayoutableUseLayoutRounding(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Layout.Layoutable.UseLayoutRoundingProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetLayoutableUseLayoutRounding(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.UseLayoutRoundingProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableUseLayoutRounding(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.UseLayoutRoundingProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetLayoutableUseLayoutRounding(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Layout.Layoutable.UseLayoutRoundingProperty, observable.ToBinding()));
        return keyFrame;
    }
}
