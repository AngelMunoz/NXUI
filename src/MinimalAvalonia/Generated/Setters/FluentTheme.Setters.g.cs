// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class FluentThemeSetters
{
    // ModeProperty

    public static Style SetFluentThemeMode(this Style style, Avalonia.Themes.Fluent.FluentThemeMode value)
    {
        style.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.ModeProperty, value));
        return style;
    }

    public static Style SetFluentThemeMode(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.ModeProperty, binding));
        return style;
    }

    public static Style SetFluentThemeMode(this Style style, IObservable<Avalonia.Themes.Fluent.FluentThemeMode> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.ModeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetFluentThemeMode(this KeyFrame keyFrame, Avalonia.Themes.Fluent.FluentThemeMode value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.ModeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetFluentThemeMode(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.ModeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetFluentThemeMode(this KeyFrame keyFrame, IObservable<Avalonia.Themes.Fluent.FluentThemeMode> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.ModeProperty, observable.ToBinding()));
        return keyFrame;
    }

    // DensityStyleProperty

    public static Style SetFluentThemeDensityStyle(this Style style, Avalonia.Themes.Fluent.DensityStyle value)
    {
        style.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty, value));
        return style;
    }

    public static Style SetFluentThemeDensityStyle(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty, binding));
        return style;
    }

    public static Style SetFluentThemeDensityStyle(this Style style, IObservable<Avalonia.Themes.Fluent.DensityStyle> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetFluentThemeDensityStyle(this KeyFrame keyFrame, Avalonia.Themes.Fluent.DensityStyle value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetFluentThemeDensityStyle(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetFluentThemeDensityStyle(this KeyFrame keyFrame, IObservable<Avalonia.Themes.Fluent.DensityStyle> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Themes.Fluent.FluentTheme.DensityStyleProperty, observable.ToBinding()));
        return keyFrame;
    }
}
