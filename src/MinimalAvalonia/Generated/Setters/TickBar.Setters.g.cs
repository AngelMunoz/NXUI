// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TickBarSetters
{
    // FillProperty

    public static Style SetTickBarFill(this Style style, Avalonia.Media.IBrush value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.FillProperty, value));
        return style;
    }

    public static Style SetTickBarFill(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.FillProperty, binding));
        return style;
    }

    public static Style SetTickBarFill(this Style style, IObservable<Avalonia.Media.IBrush> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.FillProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTickBarFill(this KeyFrame keyFrame, Avalonia.Media.IBrush value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.FillProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTickBarFill(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.FillProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTickBarFill(this KeyFrame keyFrame, IObservable<Avalonia.Media.IBrush> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.FillProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MinimumProperty

    public static Style SetTickBarMinimum(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.MinimumProperty, value));
        return style;
    }

    public static Style SetTickBarMinimum(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.MinimumProperty, binding));
        return style;
    }

    public static Style SetTickBarMinimum(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.MinimumProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTickBarMinimum(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.MinimumProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTickBarMinimum(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.MinimumProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTickBarMinimum(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.MinimumProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MaximumProperty

    public static Style SetTickBarMaximum(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.MaximumProperty, value));
        return style;
    }

    public static Style SetTickBarMaximum(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.MaximumProperty, binding));
        return style;
    }

    public static Style SetTickBarMaximum(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.MaximumProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTickBarMaximum(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.MaximumProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTickBarMaximum(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.MaximumProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTickBarMaximum(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.MaximumProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TickFrequencyProperty

    public static Style SetTickBarTickFrequency(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.TickFrequencyProperty, value));
        return style;
    }

    public static Style SetTickBarTickFrequency(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.TickFrequencyProperty, binding));
        return style;
    }

    public static Style SetTickBarTickFrequency(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.TickFrequencyProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTickBarTickFrequency(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.TickFrequencyProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTickBarTickFrequency(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.TickFrequencyProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTickBarTickFrequency(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.TickFrequencyProperty, observable.ToBinding()));
        return keyFrame;
    }

    // OrientationProperty

    public static Style SetTickBarOrientation(this Style style, Avalonia.Layout.Orientation value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.OrientationProperty, value));
        return style;
    }

    public static Style SetTickBarOrientation(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.OrientationProperty, binding));
        return style;
    }

    public static Style SetTickBarOrientation(this Style style, IObservable<Avalonia.Layout.Orientation> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.OrientationProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTickBarOrientation(this KeyFrame keyFrame, Avalonia.Layout.Orientation value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.OrientationProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTickBarOrientation(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.OrientationProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTickBarOrientation(this KeyFrame keyFrame, IObservable<Avalonia.Layout.Orientation> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.OrientationProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TicksProperty

    public static Style SetTickBarTicks(this Style style, Avalonia.Collections.AvaloniaList<System.Double> value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.TicksProperty, value));
        return style;
    }

    public static Style SetTickBarTicks(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.TicksProperty, binding));
        return style;
    }

    public static Style SetTickBarTicks(this Style style, IObservable<Avalonia.Collections.AvaloniaList<System.Double>> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.TicksProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTickBarTicks(this KeyFrame keyFrame, Avalonia.Collections.AvaloniaList<System.Double> value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.TicksProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTickBarTicks(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.TicksProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTickBarTicks(this KeyFrame keyFrame, IObservable<Avalonia.Collections.AvaloniaList<System.Double>> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.TicksProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsDirectionReversedProperty

    public static Style SetTickBarIsDirectionReversed(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.IsDirectionReversedProperty, value));
        return style;
    }

    public static Style SetTickBarIsDirectionReversed(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.IsDirectionReversedProperty, binding));
        return style;
    }

    public static Style SetTickBarIsDirectionReversed(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.IsDirectionReversedProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTickBarIsDirectionReversed(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.IsDirectionReversedProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTickBarIsDirectionReversed(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.IsDirectionReversedProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTickBarIsDirectionReversed(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.IsDirectionReversedProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PlacementProperty

    public static Style SetTickBarPlacement(this Style style, Avalonia.Controls.TickBarPlacement value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.PlacementProperty, value));
        return style;
    }

    public static Style SetTickBarPlacement(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.PlacementProperty, binding));
        return style;
    }

    public static Style SetTickBarPlacement(this Style style, IObservable<Avalonia.Controls.TickBarPlacement> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.PlacementProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTickBarPlacement(this KeyFrame keyFrame, Avalonia.Controls.TickBarPlacement value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.PlacementProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTickBarPlacement(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.PlacementProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTickBarPlacement(this KeyFrame keyFrame, IObservable<Avalonia.Controls.TickBarPlacement> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.PlacementProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ReservedSpaceProperty

    public static Style SetTickBarReservedSpace(this Style style, Avalonia.Rect value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.ReservedSpaceProperty, value));
        return style;
    }

    public static Style SetTickBarReservedSpace(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.ReservedSpaceProperty, binding));
        return style;
    }

    public static Style SetTickBarReservedSpace(this Style style, IObservable<Avalonia.Rect> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TickBar.ReservedSpaceProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTickBarReservedSpace(this KeyFrame keyFrame, Avalonia.Rect value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.ReservedSpaceProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTickBarReservedSpace(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.ReservedSpaceProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTickBarReservedSpace(this KeyFrame keyFrame, IObservable<Avalonia.Rect> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TickBar.ReservedSpaceProperty, observable.ToBinding()));
        return keyFrame;
    }
}
