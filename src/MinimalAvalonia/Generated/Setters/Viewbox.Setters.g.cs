// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ViewboxSetters
{
    // StretchProperty

    public static Style SetViewboxStretch(this Style style, Avalonia.Media.Stretch value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchProperty, value));
        return style;
    }

    public static Style SetViewboxStretch(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchProperty, binding));
        return style;
    }

    public static Style SetViewboxStretch(this Style style, IObservable<Avalonia.Media.Stretch> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetViewboxStretch(this KeyFrame keyFrame, Avalonia.Media.Stretch value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetViewboxStretch(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetViewboxStretch(this KeyFrame keyFrame, IObservable<Avalonia.Media.Stretch> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchProperty, observable.ToBinding()));
        return keyFrame;
    }

    // StretchDirectionProperty

    public static Style SetViewboxStretchDirection(this Style style, Avalonia.Media.StretchDirection value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchDirectionProperty, value));
        return style;
    }

    public static Style SetViewboxStretchDirection(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchDirectionProperty, binding));
        return style;
    }

    public static Style SetViewboxStretchDirection(this Style style, IObservable<Avalonia.Media.StretchDirection> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchDirectionProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetViewboxStretchDirection(this KeyFrame keyFrame, Avalonia.Media.StretchDirection value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchDirectionProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetViewboxStretchDirection(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchDirectionProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetViewboxStretchDirection(this KeyFrame keyFrame, IObservable<Avalonia.Media.StretchDirection> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Viewbox.StretchDirectionProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ChildProperty

    public static Style SetViewboxChild(this Style style, Avalonia.Controls.IControl value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Viewbox.ChildProperty, value));
        return style;
    }

    public static Style SetViewboxChild(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Viewbox.ChildProperty, binding));
        return style;
    }

    public static Style SetViewboxChild(this Style style, IObservable<Avalonia.Controls.IControl> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Viewbox.ChildProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetViewboxChild(this KeyFrame keyFrame, Avalonia.Controls.IControl value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Viewbox.ChildProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetViewboxChild(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Viewbox.ChildProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetViewboxChild(this KeyFrame keyFrame, IObservable<Avalonia.Controls.IControl> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Viewbox.ChildProperty, observable.ToBinding()));
        return keyFrame;
    }
}
