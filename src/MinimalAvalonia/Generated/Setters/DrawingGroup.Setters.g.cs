// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class DrawingGroupSetters
{
    // OpacityProperty

    public static Style SetDrawingGroupOpacity(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityProperty, value));
        return style;
    }

    public static Style SetDrawingGroupOpacity(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityProperty, binding));
        return style;
    }

    public static Style SetDrawingGroupOpacity(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDrawingGroupOpacity(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDrawingGroupOpacity(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDrawingGroupOpacity(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TransformProperty

    public static Style SetDrawingGroupTransform(this Style style, Avalonia.Media.Transform value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.TransformProperty, value));
        return style;
    }

    public static Style SetDrawingGroupTransform(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.TransformProperty, binding));
        return style;
    }

    public static Style SetDrawingGroupTransform(this Style style, IObservable<Avalonia.Media.Transform> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.TransformProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDrawingGroupTransform(this KeyFrame keyFrame, Avalonia.Media.Transform value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.TransformProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDrawingGroupTransform(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.TransformProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDrawingGroupTransform(this KeyFrame keyFrame, IObservable<Avalonia.Media.Transform> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.TransformProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ClipGeometryProperty

    public static Style SetDrawingGroupClipGeometry(this Style style, Avalonia.Media.Geometry value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.ClipGeometryProperty, value));
        return style;
    }

    public static Style SetDrawingGroupClipGeometry(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.ClipGeometryProperty, binding));
        return style;
    }

    public static Style SetDrawingGroupClipGeometry(this Style style, IObservable<Avalonia.Media.Geometry> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.ClipGeometryProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDrawingGroupClipGeometry(this KeyFrame keyFrame, Avalonia.Media.Geometry value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.ClipGeometryProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDrawingGroupClipGeometry(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.ClipGeometryProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDrawingGroupClipGeometry(this KeyFrame keyFrame, IObservable<Avalonia.Media.Geometry> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.ClipGeometryProperty, observable.ToBinding()));
        return keyFrame;
    }

    // OpacityMaskProperty

    public static Style SetDrawingGroupOpacityMask(this Style style, Avalonia.Media.IBrush value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityMaskProperty, value));
        return style;
    }

    public static Style SetDrawingGroupOpacityMask(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityMaskProperty, binding));
        return style;
    }

    public static Style SetDrawingGroupOpacityMask(this Style style, IObservable<Avalonia.Media.IBrush> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityMaskProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDrawingGroupOpacityMask(this KeyFrame keyFrame, Avalonia.Media.IBrush value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityMaskProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDrawingGroupOpacityMask(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityMaskProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDrawingGroupOpacityMask(this KeyFrame keyFrame, IObservable<Avalonia.Media.IBrush> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.DrawingGroup.OpacityMaskProperty, observable.ToBinding()));
        return keyFrame;
    }
}
