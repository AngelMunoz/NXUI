// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class CarouselPresenterSetters
{
    // IsVirtualizedProperty

    public static Style SetCarouselPresenterIsVirtualized(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.IsVirtualizedProperty, value));
        return style;
    }

    public static Style SetCarouselPresenterIsVirtualized(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.IsVirtualizedProperty, binding));
        return style;
    }

    public static Style SetCarouselPresenterIsVirtualized(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.IsVirtualizedProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCarouselPresenterIsVirtualized(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.IsVirtualizedProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCarouselPresenterIsVirtualized(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.IsVirtualizedProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCarouselPresenterIsVirtualized(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.IsVirtualizedProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SelectedIndexProperty

    public static Style SetCarouselPresenterSelectedIndex(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.SelectedIndexProperty, value));
        return style;
    }

    public static Style SetCarouselPresenterSelectedIndex(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.SelectedIndexProperty, binding));
        return style;
    }

    public static Style SetCarouselPresenterSelectedIndex(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.SelectedIndexProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCarouselPresenterSelectedIndex(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.SelectedIndexProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCarouselPresenterSelectedIndex(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.SelectedIndexProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCarouselPresenterSelectedIndex(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.SelectedIndexProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PageTransitionProperty

    public static Style SetCarouselPresenterPageTransition(this Style style, Avalonia.Animation.IPageTransition value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.PageTransitionProperty, value));
        return style;
    }

    public static Style SetCarouselPresenterPageTransition(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.PageTransitionProperty, binding));
        return style;
    }

    public static Style SetCarouselPresenterPageTransition(this Style style, IObservable<Avalonia.Animation.IPageTransition> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.PageTransitionProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCarouselPresenterPageTransition(this KeyFrame keyFrame, Avalonia.Animation.IPageTransition value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.PageTransitionProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCarouselPresenterPageTransition(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.PageTransitionProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCarouselPresenterPageTransition(this KeyFrame keyFrame, IObservable<Avalonia.Animation.IPageTransition> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Presenters.CarouselPresenter.PageTransitionProperty, observable.ToBinding()));
        return keyFrame;
    }
}
