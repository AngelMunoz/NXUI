// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ScrollBarSetters
{
    // ViewportSizeProperty

    public static Style SetScrollBarViewportSize(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ViewportSizeProperty, value));
        return style;
    }

    public static Style SetScrollBarViewportSize(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ViewportSizeProperty, binding));
        return style;
    }

    public static Style SetScrollBarViewportSize(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ViewportSizeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollBarViewportSize(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ViewportSizeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarViewportSize(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ViewportSizeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarViewportSize(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ViewportSizeProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VisibilityProperty

    public static Style SetScrollBarVisibility(this Style style, Avalonia.Controls.Primitives.ScrollBarVisibility value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.VisibilityProperty, value));
        return style;
    }

    public static Style SetScrollBarVisibility(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.VisibilityProperty, binding));
        return style;
    }

    public static Style SetScrollBarVisibility(this Style style, IObservable<Avalonia.Controls.Primitives.ScrollBarVisibility> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.VisibilityProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollBarVisibility(this KeyFrame keyFrame, Avalonia.Controls.Primitives.ScrollBarVisibility value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.VisibilityProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarVisibility(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.VisibilityProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarVisibility(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Primitives.ScrollBarVisibility> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.VisibilityProperty, observable.ToBinding()));
        return keyFrame;
    }

    // OrientationProperty

    public static Style SetScrollBarOrientation(this Style style, Avalonia.Layout.Orientation value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.OrientationProperty, value));
        return style;
    }

    public static Style SetScrollBarOrientation(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.OrientationProperty, binding));
        return style;
    }

    public static Style SetScrollBarOrientation(this Style style, IObservable<Avalonia.Layout.Orientation> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.OrientationProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollBarOrientation(this KeyFrame keyFrame, Avalonia.Layout.Orientation value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.OrientationProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarOrientation(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.OrientationProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarOrientation(this KeyFrame keyFrame, IObservable<Avalonia.Layout.Orientation> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.OrientationProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsExpandedProperty

    public static Style SetScrollBarIsExpanded(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.IsExpandedProperty, value));
        return style;
    }

    public static Style SetScrollBarIsExpanded(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.IsExpandedProperty, binding));
        return style;
    }

    public static Style SetScrollBarIsExpanded(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.IsExpandedProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollBarIsExpanded(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.IsExpandedProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarIsExpanded(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.IsExpandedProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarIsExpanded(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.IsExpandedProperty, observable.ToBinding()));
        return keyFrame;
    }

    // AllowAutoHideProperty

    public static Style SetScrollBarAllowAutoHide(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.AllowAutoHideProperty, value));
        return style;
    }

    public static Style SetScrollBarAllowAutoHide(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.AllowAutoHideProperty, binding));
        return style;
    }

    public static Style SetScrollBarAllowAutoHide(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.AllowAutoHideProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollBarAllowAutoHide(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.AllowAutoHideProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarAllowAutoHide(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.AllowAutoHideProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarAllowAutoHide(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.AllowAutoHideProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HideDelayProperty

    public static Style SetScrollBarHideDelay(this Style style, System.TimeSpan value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.HideDelayProperty, value));
        return style;
    }

    public static Style SetScrollBarHideDelay(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.HideDelayProperty, binding));
        return style;
    }

    public static Style SetScrollBarHideDelay(this Style style, IObservable<System.TimeSpan> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.HideDelayProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollBarHideDelay(this KeyFrame keyFrame, System.TimeSpan value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.HideDelayProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarHideDelay(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.HideDelayProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarHideDelay(this KeyFrame keyFrame, IObservable<System.TimeSpan> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.HideDelayProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ShowDelayProperty

    public static Style SetScrollBarShowDelay(this Style style, System.TimeSpan value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ShowDelayProperty, value));
        return style;
    }

    public static Style SetScrollBarShowDelay(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ShowDelayProperty, binding));
        return style;
    }

    public static Style SetScrollBarShowDelay(this Style style, IObservable<System.TimeSpan> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ShowDelayProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollBarShowDelay(this KeyFrame keyFrame, System.TimeSpan value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ShowDelayProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarShowDelay(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ShowDelayProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollBarShowDelay(this KeyFrame keyFrame, IObservable<System.TimeSpan> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Primitives.ScrollBar.ShowDelayProperty, observable.ToBinding()));
        return keyFrame;
    }
}
