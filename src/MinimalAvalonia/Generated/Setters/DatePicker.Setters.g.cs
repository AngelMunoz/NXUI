// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class DatePickerSetters
{
    // DayFormatProperty

    public static Style SetDatePickerDayFormat(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayFormatProperty, value));
        return style;
    }

    public static Style SetDatePickerDayFormat(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayFormatProperty, binding));
        return style;
    }

    public static Style SetDatePickerDayFormat(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayFormatProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerDayFormat(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayFormatProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerDayFormat(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayFormatProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerDayFormat(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayFormatProperty, observable.ToBinding()));
        return keyFrame;
    }

    // DayVisibleProperty

    public static Style SetDatePickerDayVisible(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayVisibleProperty, value));
        return style;
    }

    public static Style SetDatePickerDayVisible(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayVisibleProperty, binding));
        return style;
    }

    public static Style SetDatePickerDayVisible(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayVisibleProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerDayVisible(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayVisibleProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerDayVisible(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayVisibleProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerDayVisible(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.DayVisibleProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HeaderProperty

    public static Style SetDatePickerHeader(this Style style, System.Object value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderProperty, value));
        return style;
    }

    public static Style SetDatePickerHeader(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderProperty, binding));
        return style;
    }

    public static Style SetDatePickerHeader(this Style style, IObservable<System.Object> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerHeader(this KeyFrame keyFrame, System.Object value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerHeader(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerHeader(this KeyFrame keyFrame, IObservable<System.Object> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HeaderTemplateProperty

    public static Style SetDatePickerHeaderTemplate(this Style style, Avalonia.Controls.Templates.IDataTemplate value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderTemplateProperty, value));
        return style;
    }

    public static Style SetDatePickerHeaderTemplate(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderTemplateProperty, binding));
        return style;
    }

    public static Style SetDatePickerHeaderTemplate(this Style style, IObservable<Avalonia.Controls.Templates.IDataTemplate> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderTemplateProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerHeaderTemplate(this KeyFrame keyFrame, Avalonia.Controls.Templates.IDataTemplate value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderTemplateProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerHeaderTemplate(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderTemplateProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerHeaderTemplate(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Templates.IDataTemplate> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.HeaderTemplateProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MaxYearProperty

    public static Style SetDatePickerMaxYear(this Style style, System.DateTimeOffset value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MaxYearProperty, value));
        return style;
    }

    public static Style SetDatePickerMaxYear(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MaxYearProperty, binding));
        return style;
    }

    public static Style SetDatePickerMaxYear(this Style style, IObservable<System.DateTimeOffset> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MaxYearProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerMaxYear(this KeyFrame keyFrame, System.DateTimeOffset value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MaxYearProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerMaxYear(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MaxYearProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerMaxYear(this KeyFrame keyFrame, IObservable<System.DateTimeOffset> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MaxYearProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MinYearProperty

    public static Style SetDatePickerMinYear(this Style style, System.DateTimeOffset value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MinYearProperty, value));
        return style;
    }

    public static Style SetDatePickerMinYear(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MinYearProperty, binding));
        return style;
    }

    public static Style SetDatePickerMinYear(this Style style, IObservable<System.DateTimeOffset> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MinYearProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerMinYear(this KeyFrame keyFrame, System.DateTimeOffset value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MinYearProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerMinYear(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MinYearProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerMinYear(this KeyFrame keyFrame, IObservable<System.DateTimeOffset> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MinYearProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MonthFormatProperty

    public static Style SetDatePickerMonthFormat(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthFormatProperty, value));
        return style;
    }

    public static Style SetDatePickerMonthFormat(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthFormatProperty, binding));
        return style;
    }

    public static Style SetDatePickerMonthFormat(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthFormatProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerMonthFormat(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthFormatProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerMonthFormat(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthFormatProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerMonthFormat(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthFormatProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MonthVisibleProperty

    public static Style SetDatePickerMonthVisible(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthVisibleProperty, value));
        return style;
    }

    public static Style SetDatePickerMonthVisible(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthVisibleProperty, binding));
        return style;
    }

    public static Style SetDatePickerMonthVisible(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthVisibleProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerMonthVisible(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthVisibleProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerMonthVisible(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthVisibleProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerMonthVisible(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.MonthVisibleProperty, observable.ToBinding()));
        return keyFrame;
    }

    // YearFormatProperty

    public static Style SetDatePickerYearFormat(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearFormatProperty, value));
        return style;
    }

    public static Style SetDatePickerYearFormat(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearFormatProperty, binding));
        return style;
    }

    public static Style SetDatePickerYearFormat(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearFormatProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerYearFormat(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearFormatProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerYearFormat(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearFormatProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerYearFormat(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearFormatProperty, observable.ToBinding()));
        return keyFrame;
    }

    // YearVisibleProperty

    public static Style SetDatePickerYearVisible(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearVisibleProperty, value));
        return style;
    }

    public static Style SetDatePickerYearVisible(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearVisibleProperty, binding));
        return style;
    }

    public static Style SetDatePickerYearVisible(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearVisibleProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerYearVisible(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearVisibleProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerYearVisible(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearVisibleProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerYearVisible(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.YearVisibleProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SelectedDateProperty

    public static Style SetDatePickerSelectedDate(this Style style, System.Nullable<System.DateTimeOffset> value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.SelectedDateProperty, value));
        return style;
    }

    public static Style SetDatePickerSelectedDate(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.SelectedDateProperty, binding));
        return style;
    }

    public static Style SetDatePickerSelectedDate(this Style style, IObservable<System.Nullable<System.DateTimeOffset>> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.DatePicker.SelectedDateProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetDatePickerSelectedDate(this KeyFrame keyFrame, System.Nullable<System.DateTimeOffset> value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.SelectedDateProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerSelectedDate(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.SelectedDateProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetDatePickerSelectedDate(this KeyFrame keyFrame, IObservable<System.Nullable<System.DateTimeOffset>> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.DatePicker.SelectedDateProperty, observable.ToBinding()));
        return keyFrame;
    }
}
