// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class WrapPanelSetters
{
    // OrientationProperty

    public static Style SetWrapPanelOrientation(this Style style, Avalonia.Layout.Orientation value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.OrientationProperty, value));
        return style;
    }

    public static Style SetWrapPanelOrientation(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.OrientationProperty, binding));
        return style;
    }

    public static Style SetWrapPanelOrientation(this Style style, IObservable<Avalonia.Layout.Orientation> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.OrientationProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetWrapPanelOrientation(this KeyFrame keyFrame, Avalonia.Layout.Orientation value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.OrientationProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetWrapPanelOrientation(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.OrientationProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetWrapPanelOrientation(this KeyFrame keyFrame, IObservable<Avalonia.Layout.Orientation> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.OrientationProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ItemWidthProperty

    public static Style SetWrapPanelItemWidth(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemWidthProperty, value));
        return style;
    }

    public static Style SetWrapPanelItemWidth(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemWidthProperty, binding));
        return style;
    }

    public static Style SetWrapPanelItemWidth(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemWidthProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetWrapPanelItemWidth(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemWidthProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetWrapPanelItemWidth(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemWidthProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetWrapPanelItemWidth(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemWidthProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ItemHeightProperty

    public static Style SetWrapPanelItemHeight(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemHeightProperty, value));
        return style;
    }

    public static Style SetWrapPanelItemHeight(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemHeightProperty, binding));
        return style;
    }

    public static Style SetWrapPanelItemHeight(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemHeightProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetWrapPanelItemHeight(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemHeightProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetWrapPanelItemHeight(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemHeightProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetWrapPanelItemHeight(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.WrapPanel.ItemHeightProperty, observable.ToBinding()));
        return keyFrame;
    }
}
