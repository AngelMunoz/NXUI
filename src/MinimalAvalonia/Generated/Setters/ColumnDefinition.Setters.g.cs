// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ColumnDefinitionSetters
{
    // MaxWidthProperty

    public static Style SetColumnDefinitionMaxWidth(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MaxWidthProperty, value));
        return style;
    }

    public static Style SetColumnDefinitionMaxWidth(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MaxWidthProperty, binding));
        return style;
    }

    public static Style SetColumnDefinitionMaxWidth(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MaxWidthProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetColumnDefinitionMaxWidth(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MaxWidthProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetColumnDefinitionMaxWidth(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MaxWidthProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetColumnDefinitionMaxWidth(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MaxWidthProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MinWidthProperty

    public static Style SetColumnDefinitionMinWidth(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MinWidthProperty, value));
        return style;
    }

    public static Style SetColumnDefinitionMinWidth(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MinWidthProperty, binding));
        return style;
    }

    public static Style SetColumnDefinitionMinWidth(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MinWidthProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetColumnDefinitionMinWidth(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MinWidthProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetColumnDefinitionMinWidth(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MinWidthProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetColumnDefinitionMinWidth(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.MinWidthProperty, observable.ToBinding()));
        return keyFrame;
    }

    // WidthProperty

    public static Style SetColumnDefinitionWidth(this Style style, Avalonia.Controls.GridLength value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.WidthProperty, value));
        return style;
    }

    public static Style SetColumnDefinitionWidth(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.WidthProperty, binding));
        return style;
    }

    public static Style SetColumnDefinitionWidth(this Style style, IObservable<Avalonia.Controls.GridLength> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.WidthProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetColumnDefinitionWidth(this KeyFrame keyFrame, Avalonia.Controls.GridLength value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.WidthProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetColumnDefinitionWidth(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.WidthProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetColumnDefinitionWidth(this KeyFrame keyFrame, IObservable<Avalonia.Controls.GridLength> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ColumnDefinition.WidthProperty, observable.ToBinding()));
        return keyFrame;
    }
}
