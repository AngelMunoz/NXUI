// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class CarouselSetters
{
    // IsVirtualizedProperty

    public static Style SetCarouselIsVirtualized(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Carousel.IsVirtualizedProperty, value));
        return style;
    }

    public static Style SetCarouselIsVirtualized(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Carousel.IsVirtualizedProperty, binding));
        return style;
    }

    public static Style SetCarouselIsVirtualized(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Carousel.IsVirtualizedProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCarouselIsVirtualized(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Carousel.IsVirtualizedProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCarouselIsVirtualized(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Carousel.IsVirtualizedProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCarouselIsVirtualized(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Carousel.IsVirtualizedProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PageTransitionProperty

    public static Style SetCarouselPageTransition(this Style style, Avalonia.Animation.IPageTransition value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Carousel.PageTransitionProperty, value));
        return style;
    }

    public static Style SetCarouselPageTransition(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Carousel.PageTransitionProperty, binding));
        return style;
    }

    public static Style SetCarouselPageTransition(this Style style, IObservable<Avalonia.Animation.IPageTransition> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Carousel.PageTransitionProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCarouselPageTransition(this KeyFrame keyFrame, Avalonia.Animation.IPageTransition value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Carousel.PageTransitionProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCarouselPageTransition(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Carousel.PageTransitionProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCarouselPageTransition(this KeyFrame keyFrame, IObservable<Avalonia.Animation.IPageTransition> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Carousel.PageTransitionProperty, observable.ToBinding()));
        return keyFrame;
    }
}
