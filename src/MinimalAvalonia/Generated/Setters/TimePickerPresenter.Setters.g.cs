// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TimePickerPresenterSetters
{
    // MinuteIncrementProperty

    public static Style SetTimePickerPresenterMinuteIncrement(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.MinuteIncrementProperty, value));
        return style;
    }

    public static Style SetTimePickerPresenterMinuteIncrement(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.MinuteIncrementProperty, binding));
        return style;
    }

    public static Style SetTimePickerPresenterMinuteIncrement(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.MinuteIncrementProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTimePickerPresenterMinuteIncrement(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.MinuteIncrementProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTimePickerPresenterMinuteIncrement(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.MinuteIncrementProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTimePickerPresenterMinuteIncrement(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.MinuteIncrementProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ClockIdentifierProperty

    public static Style SetTimePickerPresenterClockIdentifier(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.ClockIdentifierProperty, value));
        return style;
    }

    public static Style SetTimePickerPresenterClockIdentifier(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.ClockIdentifierProperty, binding));
        return style;
    }

    public static Style SetTimePickerPresenterClockIdentifier(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.ClockIdentifierProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTimePickerPresenterClockIdentifier(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.ClockIdentifierProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTimePickerPresenterClockIdentifier(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.ClockIdentifierProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTimePickerPresenterClockIdentifier(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.ClockIdentifierProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TimeProperty

    public static Style SetTimePickerPresenterTime(this Style style, System.TimeSpan value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.TimeProperty, value));
        return style;
    }

    public static Style SetTimePickerPresenterTime(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.TimeProperty, binding));
        return style;
    }

    public static Style SetTimePickerPresenterTime(this Style style, IObservable<System.TimeSpan> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.TimeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTimePickerPresenterTime(this KeyFrame keyFrame, System.TimeSpan value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.TimeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTimePickerPresenterTime(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.TimeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTimePickerPresenterTime(this KeyFrame keyFrame, IObservable<System.TimeSpan> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TimePickerPresenter.TimeProperty, observable.ToBinding()));
        return keyFrame;
    }
}
