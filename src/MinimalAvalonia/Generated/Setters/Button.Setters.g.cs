// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ButtonSetters
{
    // ClickModeProperty

    public static Style SetButtonClickMode(this Style style, Avalonia.Controls.ClickMode value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.ClickModeProperty, value));
        return style;
    }

    public static Style SetButtonClickMode(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.ClickModeProperty, binding));
        return style;
    }

    public static Style SetButtonClickMode(this Style style, IObservable<Avalonia.Controls.ClickMode> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.ClickModeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetButtonClickMode(this KeyFrame keyFrame, Avalonia.Controls.ClickMode value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.ClickModeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetButtonClickMode(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.ClickModeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetButtonClickMode(this KeyFrame keyFrame, IObservable<Avalonia.Controls.ClickMode> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.ClickModeProperty, observable.ToBinding()));
        return keyFrame;
    }

    // CommandProperty

    public static Style SetButtonCommand(this Style style, System.Windows.Input.ICommand value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.CommandProperty, value));
        return style;
    }

    public static Style SetButtonCommand(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.CommandProperty, binding));
        return style;
    }

    public static Style SetButtonCommand(this Style style, IObservable<System.Windows.Input.ICommand> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.CommandProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetButtonCommand(this KeyFrame keyFrame, System.Windows.Input.ICommand value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.CommandProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetButtonCommand(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.CommandProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetButtonCommand(this KeyFrame keyFrame, IObservable<System.Windows.Input.ICommand> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.CommandProperty, observable.ToBinding()));
        return keyFrame;
    }

    // CommandParameterProperty

    public static Style SetButtonCommandParameter(this Style style, System.Object value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.CommandParameterProperty, value));
        return style;
    }

    public static Style SetButtonCommandParameter(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.CommandParameterProperty, binding));
        return style;
    }

    public static Style SetButtonCommandParameter(this Style style, IObservable<System.Object> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.CommandParameterProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetButtonCommandParameter(this KeyFrame keyFrame, System.Object value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.CommandParameterProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetButtonCommandParameter(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.CommandParameterProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetButtonCommandParameter(this KeyFrame keyFrame, IObservable<System.Object> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.CommandParameterProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsDefaultProperty

    public static Style SetButtonIsDefault(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.IsDefaultProperty, value));
        return style;
    }

    public static Style SetButtonIsDefault(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.IsDefaultProperty, binding));
        return style;
    }

    public static Style SetButtonIsDefault(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.IsDefaultProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetButtonIsDefault(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.IsDefaultProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetButtonIsDefault(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.IsDefaultProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetButtonIsDefault(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.IsDefaultProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsCancelProperty

    public static Style SetButtonIsCancel(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.IsCancelProperty, value));
        return style;
    }

    public static Style SetButtonIsCancel(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.IsCancelProperty, binding));
        return style;
    }

    public static Style SetButtonIsCancel(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.IsCancelProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetButtonIsCancel(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.IsCancelProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetButtonIsCancel(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.IsCancelProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetButtonIsCancel(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.IsCancelProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsPressedProperty

    public static Style SetButtonIsPressed(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.IsPressedProperty, value));
        return style;
    }

    public static Style SetButtonIsPressed(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.IsPressedProperty, binding));
        return style;
    }

    public static Style SetButtonIsPressed(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.IsPressedProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetButtonIsPressed(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.IsPressedProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetButtonIsPressed(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.IsPressedProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetButtonIsPressed(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.IsPressedProperty, observable.ToBinding()));
        return keyFrame;
    }

    // FlyoutProperty

    public static Style SetButtonFlyout(this Style style, Avalonia.Controls.Primitives.FlyoutBase value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.FlyoutProperty, value));
        return style;
    }

    public static Style SetButtonFlyout(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.FlyoutProperty, binding));
        return style;
    }

    public static Style SetButtonFlyout(this Style style, IObservable<Avalonia.Controls.Primitives.FlyoutBase> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Button.FlyoutProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetButtonFlyout(this KeyFrame keyFrame, Avalonia.Controls.Primitives.FlyoutBase value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.FlyoutProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetButtonFlyout(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.FlyoutProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetButtonFlyout(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Primitives.FlyoutBase> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Button.FlyoutProperty, observable.ToBinding()));
        return keyFrame;
    }

}
