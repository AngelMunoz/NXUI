// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class NumericUpDownSetters
{
    // AllowSpinProperty

    public static Style SetNumericUpDownAllowSpin(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.AllowSpinProperty, value));
        return style;
    }

    public static Style SetNumericUpDownAllowSpin(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.AllowSpinProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownAllowSpin(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.AllowSpinProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownAllowSpin(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.AllowSpinProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownAllowSpin(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.AllowSpinProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownAllowSpin(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.AllowSpinProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ButtonSpinnerLocationProperty

    public static Style SetNumericUpDownButtonSpinnerLocation(this Style style, Avalonia.Controls.Location value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ButtonSpinnerLocationProperty, value));
        return style;
    }

    public static Style SetNumericUpDownButtonSpinnerLocation(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ButtonSpinnerLocationProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownButtonSpinnerLocation(this Style style, IObservable<Avalonia.Controls.Location> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ButtonSpinnerLocationProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownButtonSpinnerLocation(this KeyFrame keyFrame, Avalonia.Controls.Location value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ButtonSpinnerLocationProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownButtonSpinnerLocation(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ButtonSpinnerLocationProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownButtonSpinnerLocation(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Location> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ButtonSpinnerLocationProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ShowButtonSpinnerProperty

    public static Style SetNumericUpDownShowButtonSpinner(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ShowButtonSpinnerProperty, value));
        return style;
    }

    public static Style SetNumericUpDownShowButtonSpinner(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ShowButtonSpinnerProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownShowButtonSpinner(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ShowButtonSpinnerProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownShowButtonSpinner(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ShowButtonSpinnerProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownShowButtonSpinner(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ShowButtonSpinnerProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownShowButtonSpinner(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ShowButtonSpinnerProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ClipValueToMinMaxProperty

    public static Style SetNumericUpDownClipValueToMinMax(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ClipValueToMinMaxProperty, value));
        return style;
    }

    public static Style SetNumericUpDownClipValueToMinMax(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ClipValueToMinMaxProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownClipValueToMinMax(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ClipValueToMinMaxProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownClipValueToMinMax(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ClipValueToMinMaxProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownClipValueToMinMax(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ClipValueToMinMaxProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownClipValueToMinMax(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ClipValueToMinMaxProperty, observable.ToBinding()));
        return keyFrame;
    }

    // NumberFormatProperty

    public static Style SetNumericUpDownNumberFormat(this Style style, System.Globalization.NumberFormatInfo value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.NumberFormatProperty, value));
        return style;
    }

    public static Style SetNumericUpDownNumberFormat(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.NumberFormatProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownNumberFormat(this Style style, IObservable<System.Globalization.NumberFormatInfo> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.NumberFormatProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownNumberFormat(this KeyFrame keyFrame, System.Globalization.NumberFormatInfo value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.NumberFormatProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownNumberFormat(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.NumberFormatProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownNumberFormat(this KeyFrame keyFrame, IObservable<System.Globalization.NumberFormatInfo> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.NumberFormatProperty, observable.ToBinding()));
        return keyFrame;
    }

    // FormatStringProperty

    public static Style SetNumericUpDownFormatString(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.FormatStringProperty, value));
        return style;
    }

    public static Style SetNumericUpDownFormatString(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.FormatStringProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownFormatString(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.FormatStringProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownFormatString(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.FormatStringProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownFormatString(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.FormatStringProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownFormatString(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.FormatStringProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IncrementProperty

    public static Style SetNumericUpDownIncrement(this Style style, System.Decimal value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IncrementProperty, value));
        return style;
    }

    public static Style SetNumericUpDownIncrement(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IncrementProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownIncrement(this Style style, IObservable<System.Decimal> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IncrementProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownIncrement(this KeyFrame keyFrame, System.Decimal value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IncrementProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownIncrement(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IncrementProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownIncrement(this KeyFrame keyFrame, IObservable<System.Decimal> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IncrementProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsReadOnlyProperty

    public static Style SetNumericUpDownIsReadOnly(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IsReadOnlyProperty, value));
        return style;
    }

    public static Style SetNumericUpDownIsReadOnly(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IsReadOnlyProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownIsReadOnly(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IsReadOnlyProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownIsReadOnly(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IsReadOnlyProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownIsReadOnly(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IsReadOnlyProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownIsReadOnly(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.IsReadOnlyProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MaximumProperty

    public static Style SetNumericUpDownMaximum(this Style style, System.Decimal value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MaximumProperty, value));
        return style;
    }

    public static Style SetNumericUpDownMaximum(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MaximumProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownMaximum(this Style style, IObservable<System.Decimal> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MaximumProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownMaximum(this KeyFrame keyFrame, System.Decimal value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MaximumProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownMaximum(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MaximumProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownMaximum(this KeyFrame keyFrame, IObservable<System.Decimal> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MaximumProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MinimumProperty

    public static Style SetNumericUpDownMinimum(this Style style, System.Decimal value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MinimumProperty, value));
        return style;
    }

    public static Style SetNumericUpDownMinimum(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MinimumProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownMinimum(this Style style, IObservable<System.Decimal> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MinimumProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownMinimum(this KeyFrame keyFrame, System.Decimal value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MinimumProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownMinimum(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MinimumProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownMinimum(this KeyFrame keyFrame, IObservable<System.Decimal> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.MinimumProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ParsingNumberStyleProperty

    public static Style SetNumericUpDownParsingNumberStyle(this Style style, System.Globalization.NumberStyles value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ParsingNumberStyleProperty, value));
        return style;
    }

    public static Style SetNumericUpDownParsingNumberStyle(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ParsingNumberStyleProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownParsingNumberStyle(this Style style, IObservable<System.Globalization.NumberStyles> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ParsingNumberStyleProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownParsingNumberStyle(this KeyFrame keyFrame, System.Globalization.NumberStyles value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ParsingNumberStyleProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownParsingNumberStyle(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ParsingNumberStyleProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownParsingNumberStyle(this KeyFrame keyFrame, IObservable<System.Globalization.NumberStyles> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ParsingNumberStyleProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TextProperty

    public static Style SetNumericUpDownText(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.TextProperty, value));
        return style;
    }

    public static Style SetNumericUpDownText(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.TextProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownText(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.TextProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownText(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.TextProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownText(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.TextProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownText(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.TextProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ValueProperty

    public static Style SetNumericUpDownValue(this Style style, System.Decimal value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ValueProperty, value));
        return style;
    }

    public static Style SetNumericUpDownValue(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ValueProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownValue(this Style style, IObservable<System.Decimal> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ValueProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownValue(this KeyFrame keyFrame, System.Decimal value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ValueProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownValue(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ValueProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownValue(this KeyFrame keyFrame, IObservable<System.Decimal> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.ValueProperty, observable.ToBinding()));
        return keyFrame;
    }

    // WatermarkProperty

    public static Style SetNumericUpDownWatermark(this Style style, System.String value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.WatermarkProperty, value));
        return style;
    }

    public static Style SetNumericUpDownWatermark(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.WatermarkProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownWatermark(this Style style, IObservable<System.String> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.WatermarkProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownWatermark(this KeyFrame keyFrame, System.String value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.WatermarkProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownWatermark(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.WatermarkProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownWatermark(this KeyFrame keyFrame, IObservable<System.String> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.WatermarkProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HorizontalContentAlignmentProperty

    public static Style SetNumericUpDownHorizontalContentAlignment(this Style style, Avalonia.Layout.HorizontalAlignment value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.HorizontalContentAlignmentProperty, value));
        return style;
    }

    public static Style SetNumericUpDownHorizontalContentAlignment(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.HorizontalContentAlignmentProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownHorizontalContentAlignment(this Style style, IObservable<Avalonia.Layout.HorizontalAlignment> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.HorizontalContentAlignmentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownHorizontalContentAlignment(this KeyFrame keyFrame, Avalonia.Layout.HorizontalAlignment value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.HorizontalContentAlignmentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownHorizontalContentAlignment(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.HorizontalContentAlignmentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownHorizontalContentAlignment(this KeyFrame keyFrame, IObservable<Avalonia.Layout.HorizontalAlignment> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.HorizontalContentAlignmentProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VerticalContentAlignmentProperty

    public static Style SetNumericUpDownVerticalContentAlignment(this Style style, Avalonia.Layout.VerticalAlignment value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.VerticalContentAlignmentProperty, value));
        return style;
    }

    public static Style SetNumericUpDownVerticalContentAlignment(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.VerticalContentAlignmentProperty, binding));
        return style;
    }

    public static Style SetNumericUpDownVerticalContentAlignment(this Style style, IObservable<Avalonia.Layout.VerticalAlignment> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.VerticalContentAlignmentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetNumericUpDownVerticalContentAlignment(this KeyFrame keyFrame, Avalonia.Layout.VerticalAlignment value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.VerticalContentAlignmentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownVerticalContentAlignment(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.VerticalContentAlignmentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetNumericUpDownVerticalContentAlignment(this KeyFrame keyFrame, IObservable<Avalonia.Layout.VerticalAlignment> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.NumericUpDown.VerticalContentAlignmentProperty, observable.ToBinding()));
        return keyFrame;
    }

}
