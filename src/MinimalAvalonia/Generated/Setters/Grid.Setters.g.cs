// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class GridSetters
{
    // ShowGridLinesProperty

    public static Style SetGridShowGridLines(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.ShowGridLinesProperty, value));
        return style;
    }

    public static Style SetGridShowGridLines(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.ShowGridLinesProperty, binding));
        return style;
    }

    public static Style SetGridShowGridLines(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.ShowGridLinesProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetGridShowGridLines(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.ShowGridLinesProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetGridShowGridLines(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.ShowGridLinesProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetGridShowGridLines(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.ShowGridLinesProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ColumnProperty

    public static Style SetGridColumn(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnProperty, value));
        return style;
    }

    public static Style SetGridColumn(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnProperty, binding));
        return style;
    }

    public static Style SetGridColumn(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetGridColumn(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetGridColumn(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetGridColumn(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnProperty, observable.ToBinding()));
        return keyFrame;
    }

    // RowProperty

    public static Style SetGridRow(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.RowProperty, value));
        return style;
    }

    public static Style SetGridRow(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.RowProperty, binding));
        return style;
    }

    public static Style SetGridRow(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.RowProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetGridRow(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.RowProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetGridRow(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.RowProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetGridRow(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.RowProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ColumnSpanProperty

    public static Style SetGridColumnSpan(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnSpanProperty, value));
        return style;
    }

    public static Style SetGridColumnSpan(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnSpanProperty, binding));
        return style;
    }

    public static Style SetGridColumnSpan(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnSpanProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetGridColumnSpan(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnSpanProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetGridColumnSpan(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnSpanProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetGridColumnSpan(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.ColumnSpanProperty, observable.ToBinding()));
        return keyFrame;
    }

    // RowSpanProperty

    public static Style SetGridRowSpan(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.RowSpanProperty, value));
        return style;
    }

    public static Style SetGridRowSpan(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.RowSpanProperty, binding));
        return style;
    }

    public static Style SetGridRowSpan(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.RowSpanProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetGridRowSpan(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.RowSpanProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetGridRowSpan(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.RowSpanProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetGridRowSpan(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.RowSpanProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsSharedSizeScopeProperty

    public static Style SetGridIsSharedSizeScope(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.IsSharedSizeScopeProperty, value));
        return style;
    }

    public static Style SetGridIsSharedSizeScope(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.IsSharedSizeScopeProperty, binding));
        return style;
    }

    public static Style SetGridIsSharedSizeScope(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Grid.IsSharedSizeScopeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetGridIsSharedSizeScope(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.IsSharedSizeScopeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetGridIsSharedSizeScope(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.IsSharedSizeScopeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetGridIsSharedSizeScope(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Grid.IsSharedSizeScopeProperty, observable.ToBinding()));
        return keyFrame;
    }
}
