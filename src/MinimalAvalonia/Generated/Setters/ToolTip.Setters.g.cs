// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ToolTipSetters
{
    // TipProperty

    public static Style SetToolTipTip(this Style style, System.Object value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.TipProperty, value));
        return style;
    }

    public static Style SetToolTipTip(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.TipProperty, binding));
        return style;
    }

    public static Style SetToolTipTip(this Style style, IObservable<System.Object> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.TipProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetToolTipTip(this KeyFrame keyFrame, System.Object value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.TipProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetToolTipTip(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.TipProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetToolTipTip(this KeyFrame keyFrame, IObservable<System.Object> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.TipProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsOpenProperty

    public static Style SetToolTipIsOpen(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.IsOpenProperty, value));
        return style;
    }

    public static Style SetToolTipIsOpen(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.IsOpenProperty, binding));
        return style;
    }

    public static Style SetToolTipIsOpen(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.IsOpenProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetToolTipIsOpen(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.IsOpenProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetToolTipIsOpen(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.IsOpenProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetToolTipIsOpen(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.IsOpenProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PlacementProperty

    public static Style SetToolTipPlacement(this Style style, Avalonia.Controls.PlacementMode value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.PlacementProperty, value));
        return style;
    }

    public static Style SetToolTipPlacement(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.PlacementProperty, binding));
        return style;
    }

    public static Style SetToolTipPlacement(this Style style, IObservable<Avalonia.Controls.PlacementMode> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.PlacementProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetToolTipPlacement(this KeyFrame keyFrame, Avalonia.Controls.PlacementMode value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.PlacementProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetToolTipPlacement(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.PlacementProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetToolTipPlacement(this KeyFrame keyFrame, IObservable<Avalonia.Controls.PlacementMode> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.PlacementProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HorizontalOffsetProperty

    public static Style SetToolTipHorizontalOffset(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.HorizontalOffsetProperty, value));
        return style;
    }

    public static Style SetToolTipHorizontalOffset(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.HorizontalOffsetProperty, binding));
        return style;
    }

    public static Style SetToolTipHorizontalOffset(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.HorizontalOffsetProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetToolTipHorizontalOffset(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.HorizontalOffsetProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetToolTipHorizontalOffset(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.HorizontalOffsetProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetToolTipHorizontalOffset(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.HorizontalOffsetProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VerticalOffsetProperty

    public static Style SetToolTipVerticalOffset(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.VerticalOffsetProperty, value));
        return style;
    }

    public static Style SetToolTipVerticalOffset(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.VerticalOffsetProperty, binding));
        return style;
    }

    public static Style SetToolTipVerticalOffset(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.VerticalOffsetProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetToolTipVerticalOffset(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.VerticalOffsetProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetToolTipVerticalOffset(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.VerticalOffsetProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetToolTipVerticalOffset(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.VerticalOffsetProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ShowDelayProperty

    public static Style SetToolTipShowDelay(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.ShowDelayProperty, value));
        return style;
    }

    public static Style SetToolTipShowDelay(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.ShowDelayProperty, binding));
        return style;
    }

    public static Style SetToolTipShowDelay(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ToolTip.ShowDelayProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetToolTipShowDelay(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.ShowDelayProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetToolTipShowDelay(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.ShowDelayProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetToolTipShowDelay(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ToolTip.ShowDelayProperty, observable.ToBinding()));
        return keyFrame;
    }
}
