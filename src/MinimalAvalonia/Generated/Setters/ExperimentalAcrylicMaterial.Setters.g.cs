// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ExperimentalAcrylicMaterialSetters
{
    // TintColorProperty

    public static Style SetExperimentalAcrylicMaterialTintColor(this Style style, Avalonia.Media.Color value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintColorProperty, value));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialTintColor(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintColorProperty, binding));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialTintColor(this Style style, IObservable<Avalonia.Media.Color> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintColorProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialTintColor(this KeyFrame keyFrame, Avalonia.Media.Color value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintColorProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialTintColor(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintColorProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialTintColor(this KeyFrame keyFrame, IObservable<Avalonia.Media.Color> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintColorProperty, observable.ToBinding()));
        return keyFrame;
    }

    // BackgroundSourceProperty

    public static Style SetExperimentalAcrylicMaterialBackgroundSource(this Style style, Avalonia.Media.AcrylicBackgroundSource value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty, value));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialBackgroundSource(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty, binding));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialBackgroundSource(this Style style, IObservable<Avalonia.Media.AcrylicBackgroundSource> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialBackgroundSource(this KeyFrame keyFrame, Avalonia.Media.AcrylicBackgroundSource value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialBackgroundSource(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialBackgroundSource(this KeyFrame keyFrame, IObservable<Avalonia.Media.AcrylicBackgroundSource> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.BackgroundSourceProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TintOpacityProperty

    public static Style SetExperimentalAcrylicMaterialTintOpacity(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintOpacityProperty, value));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialTintOpacity(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintOpacityProperty, binding));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialTintOpacity(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintOpacityProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialTintOpacity(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintOpacityProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialTintOpacity(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintOpacityProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialTintOpacity(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.TintOpacityProperty, observable.ToBinding()));
        return keyFrame;
    }

    // MaterialOpacityProperty

    public static Style SetExperimentalAcrylicMaterialMaterialOpacity(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.MaterialOpacityProperty, value));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialMaterialOpacity(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.MaterialOpacityProperty, binding));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialMaterialOpacity(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.MaterialOpacityProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialMaterialOpacity(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.MaterialOpacityProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialMaterialOpacity(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.MaterialOpacityProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialMaterialOpacity(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.MaterialOpacityProperty, observable.ToBinding()));
        return keyFrame;
    }

    // PlatformTransparencyCompensationLevelProperty

    public static Style SetExperimentalAcrylicMaterialPlatformTransparencyCompensationLevel(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.PlatformTransparencyCompensationLevelProperty, value));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialPlatformTransparencyCompensationLevel(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.PlatformTransparencyCompensationLevelProperty, binding));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialPlatformTransparencyCompensationLevel(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.PlatformTransparencyCompensationLevelProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialPlatformTransparencyCompensationLevel(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.PlatformTransparencyCompensationLevelProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialPlatformTransparencyCompensationLevel(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.PlatformTransparencyCompensationLevelProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialPlatformTransparencyCompensationLevel(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.PlatformTransparencyCompensationLevelProperty, observable.ToBinding()));
        return keyFrame;
    }

    // FallbackColorProperty

    public static Style SetExperimentalAcrylicMaterialFallbackColor(this Style style, Avalonia.Media.Color value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.FallbackColorProperty, value));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialFallbackColor(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.FallbackColorProperty, binding));
        return style;
    }

    public static Style SetExperimentalAcrylicMaterialFallbackColor(this Style style, IObservable<Avalonia.Media.Color> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.FallbackColorProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialFallbackColor(this KeyFrame keyFrame, Avalonia.Media.Color value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.FallbackColorProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialFallbackColor(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.FallbackColorProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetExperimentalAcrylicMaterialFallbackColor(this KeyFrame keyFrame, IObservable<Avalonia.Media.Color> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.ExperimentalAcrylicMaterial.FallbackColorProperty, observable.ToBinding()));
        return keyFrame;
    }
}
