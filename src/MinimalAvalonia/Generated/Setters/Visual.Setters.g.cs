// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class VisualSetters
{
    // BoundsProperty

    public static Style SetVisualBounds(this Style style, Avalonia.Rect value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.BoundsProperty, value));
        return style;
    }

    public static Style SetVisualBounds(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.BoundsProperty, binding));
        return style;
    }

    public static Style SetVisualBounds(this Style style, IObservable<Avalonia.Rect> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.BoundsProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualBounds(this KeyFrame keyFrame, Avalonia.Rect value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.BoundsProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualBounds(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.BoundsProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualBounds(this KeyFrame keyFrame, IObservable<Avalonia.Rect> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.BoundsProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TransformedBoundsProperty

    public static Style SetVisualTransformedBounds(this Style style, System.Nullable<Avalonia.VisualTree.TransformedBounds> value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.TransformedBoundsProperty, value));
        return style;
    }

    public static Style SetVisualTransformedBounds(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.TransformedBoundsProperty, binding));
        return style;
    }

    public static Style SetVisualTransformedBounds(this Style style, IObservable<System.Nullable<Avalonia.VisualTree.TransformedBounds>> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.TransformedBoundsProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualTransformedBounds(this KeyFrame keyFrame, System.Nullable<Avalonia.VisualTree.TransformedBounds> value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.TransformedBoundsProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualTransformedBounds(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.TransformedBoundsProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualTransformedBounds(this KeyFrame keyFrame, IObservable<System.Nullable<Avalonia.VisualTree.TransformedBounds>> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.TransformedBoundsProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ClipToBoundsProperty

    public static Style SetVisualClipToBounds(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.ClipToBoundsProperty, value));
        return style;
    }

    public static Style SetVisualClipToBounds(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.ClipToBoundsProperty, binding));
        return style;
    }

    public static Style SetVisualClipToBounds(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.ClipToBoundsProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualClipToBounds(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.ClipToBoundsProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualClipToBounds(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.ClipToBoundsProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualClipToBounds(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.ClipToBoundsProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ClipProperty

    public static Style SetVisualClip(this Style style, Avalonia.Media.Geometry value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.ClipProperty, value));
        return style;
    }

    public static Style SetVisualClip(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.ClipProperty, binding));
        return style;
    }

    public static Style SetVisualClip(this Style style, IObservable<Avalonia.Media.Geometry> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.ClipProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualClip(this KeyFrame keyFrame, Avalonia.Media.Geometry value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.ClipProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualClip(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.ClipProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualClip(this KeyFrame keyFrame, IObservable<Avalonia.Media.Geometry> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.ClipProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsVisibleProperty

    public static Style SetVisualIsVisible(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.IsVisibleProperty, value));
        return style;
    }

    public static Style SetVisualIsVisible(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.IsVisibleProperty, binding));
        return style;
    }

    public static Style SetVisualIsVisible(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.IsVisibleProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualIsVisible(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.IsVisibleProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualIsVisible(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.IsVisibleProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualIsVisible(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.IsVisibleProperty, observable.ToBinding()));
        return keyFrame;
    }

    // OpacityProperty

    public static Style SetVisualOpacity(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.OpacityProperty, value));
        return style;
    }

    public static Style SetVisualOpacity(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.OpacityProperty, binding));
        return style;
    }

    public static Style SetVisualOpacity(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.OpacityProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualOpacity(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.OpacityProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualOpacity(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.OpacityProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualOpacity(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.OpacityProperty, observable.ToBinding()));
        return keyFrame;
    }

    // OpacityMaskProperty

    public static Style SetVisualOpacityMask(this Style style, Avalonia.Media.IBrush value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.OpacityMaskProperty, value));
        return style;
    }

    public static Style SetVisualOpacityMask(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.OpacityMaskProperty, binding));
        return style;
    }

    public static Style SetVisualOpacityMask(this Style style, IObservable<Avalonia.Media.IBrush> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.OpacityMaskProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualOpacityMask(this KeyFrame keyFrame, Avalonia.Media.IBrush value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.OpacityMaskProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualOpacityMask(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.OpacityMaskProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualOpacityMask(this KeyFrame keyFrame, IObservable<Avalonia.Media.IBrush> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.OpacityMaskProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HasMirrorTransformProperty

    public static Style SetVisualHasMirrorTransform(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.HasMirrorTransformProperty, value));
        return style;
    }

    public static Style SetVisualHasMirrorTransform(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.HasMirrorTransformProperty, binding));
        return style;
    }

    public static Style SetVisualHasMirrorTransform(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.HasMirrorTransformProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualHasMirrorTransform(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.HasMirrorTransformProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualHasMirrorTransform(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.HasMirrorTransformProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualHasMirrorTransform(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.HasMirrorTransformProperty, observable.ToBinding()));
        return keyFrame;
    }

    // RenderTransformProperty

    public static Style SetVisualRenderTransform(this Style style, Avalonia.Media.ITransform value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.RenderTransformProperty, value));
        return style;
    }

    public static Style SetVisualRenderTransform(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.RenderTransformProperty, binding));
        return style;
    }

    public static Style SetVisualRenderTransform(this Style style, IObservable<Avalonia.Media.ITransform> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.RenderTransformProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualRenderTransform(this KeyFrame keyFrame, Avalonia.Media.ITransform value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.RenderTransformProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualRenderTransform(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.RenderTransformProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualRenderTransform(this KeyFrame keyFrame, IObservable<Avalonia.Media.ITransform> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.RenderTransformProperty, observable.ToBinding()));
        return keyFrame;
    }

    // RenderTransformOriginProperty

    public static Style SetVisualRenderTransformOrigin(this Style style, Avalonia.RelativePoint value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.RenderTransformOriginProperty, value));
        return style;
    }

    public static Style SetVisualRenderTransformOrigin(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.RenderTransformOriginProperty, binding));
        return style;
    }

    public static Style SetVisualRenderTransformOrigin(this Style style, IObservable<Avalonia.RelativePoint> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.RenderTransformOriginProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualRenderTransformOrigin(this KeyFrame keyFrame, Avalonia.RelativePoint value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.RenderTransformOriginProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualRenderTransformOrigin(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.RenderTransformOriginProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualRenderTransformOrigin(this KeyFrame keyFrame, IObservable<Avalonia.RelativePoint> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.RenderTransformOriginProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VisualParentProperty

    public static Style SetVisualVisualParent(this Style style, Avalonia.VisualTree.IVisual value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.VisualParentProperty, value));
        return style;
    }

    public static Style SetVisualVisualParent(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.VisualParentProperty, binding));
        return style;
    }

    public static Style SetVisualVisualParent(this Style style, IObservable<Avalonia.VisualTree.IVisual> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.VisualParentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualVisualParent(this KeyFrame keyFrame, Avalonia.VisualTree.IVisual value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.VisualParentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualVisualParent(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.VisualParentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualVisualParent(this KeyFrame keyFrame, IObservable<Avalonia.VisualTree.IVisual> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.VisualParentProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ZIndexProperty

    public static Style SetVisualZIndex(this Style style, System.Int32 value)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.ZIndexProperty, value));
        return style;
    }

    public static Style SetVisualZIndex(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.ZIndexProperty, binding));
        return style;
    }

    public static Style SetVisualZIndex(this Style style, IObservable<System.Int32> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Visual.ZIndexProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetVisualZIndex(this KeyFrame keyFrame, System.Int32 value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.ZIndexProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetVisualZIndex(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.ZIndexProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetVisualZIndex(this KeyFrame keyFrame, IObservable<System.Int32> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Visual.ZIndexProperty, observable.ToBinding()));
        return keyFrame;
    }
}
