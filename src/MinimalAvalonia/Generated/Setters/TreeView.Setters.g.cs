// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class TreeViewSetters
{
    // AutoScrollToSelectedItemProperty

    public static Style SetTreeViewAutoScrollToSelectedItem(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.AutoScrollToSelectedItemProperty, value));
        return style;
    }

    public static Style SetTreeViewAutoScrollToSelectedItem(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.AutoScrollToSelectedItemProperty, binding));
        return style;
    }

    public static Style SetTreeViewAutoScrollToSelectedItem(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.AutoScrollToSelectedItemProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTreeViewAutoScrollToSelectedItem(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.AutoScrollToSelectedItemProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTreeViewAutoScrollToSelectedItem(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.AutoScrollToSelectedItemProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTreeViewAutoScrollToSelectedItem(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.AutoScrollToSelectedItemProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SelectedItemProperty

    public static Style SetTreeViewSelectedItem(this Style style, System.Object value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemProperty, value));
        return style;
    }

    public static Style SetTreeViewSelectedItem(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemProperty, binding));
        return style;
    }

    public static Style SetTreeViewSelectedItem(this Style style, IObservable<System.Object> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTreeViewSelectedItem(this KeyFrame keyFrame, System.Object value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTreeViewSelectedItem(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTreeViewSelectedItem(this KeyFrame keyFrame, IObservable<System.Object> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SelectedItemsProperty

    public static Style SetTreeViewSelectedItems(this Style style, System.Collections.IList value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemsProperty, value));
        return style;
    }

    public static Style SetTreeViewSelectedItems(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemsProperty, binding));
        return style;
    }

    public static Style SetTreeViewSelectedItems(this Style style, IObservable<System.Collections.IList> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemsProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTreeViewSelectedItems(this KeyFrame keyFrame, System.Collections.IList value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemsProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTreeViewSelectedItems(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemsProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTreeViewSelectedItems(this KeyFrame keyFrame, IObservable<System.Collections.IList> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectedItemsProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SelectionModeProperty

    public static Style SetTreeViewSelectionMode(this Style style, Avalonia.Controls.SelectionMode value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectionModeProperty, value));
        return style;
    }

    public static Style SetTreeViewSelectionMode(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectionModeProperty, binding));
        return style;
    }

    public static Style SetTreeViewSelectionMode(this Style style, IObservable<Avalonia.Controls.SelectionMode> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectionModeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetTreeViewSelectionMode(this KeyFrame keyFrame, Avalonia.Controls.SelectionMode value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectionModeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetTreeViewSelectionMode(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectionModeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetTreeViewSelectionMode(this KeyFrame keyFrame, IObservable<Avalonia.Controls.SelectionMode> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.TreeView.SelectionModeProperty, observable.ToBinding()));
        return keyFrame;
    }
}
