// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class ScrollViewerSetters
{
    // CanHorizontallyScrollProperty

    public static Style SetScrollViewerCanHorizontallyScroll(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanHorizontallyScrollProperty, value));
        return style;
    }

    public static Style SetScrollViewerCanHorizontallyScroll(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanHorizontallyScrollProperty, binding));
        return style;
    }

    public static Style SetScrollViewerCanHorizontallyScroll(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanHorizontallyScrollProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerCanHorizontallyScroll(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanHorizontallyScrollProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerCanHorizontallyScroll(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanHorizontallyScrollProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerCanHorizontallyScroll(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanHorizontallyScrollProperty, observable.ToBinding()));
        return keyFrame;
    }

    // CanVerticallyScrollProperty

    public static Style SetScrollViewerCanVerticallyScroll(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanVerticallyScrollProperty, value));
        return style;
    }

    public static Style SetScrollViewerCanVerticallyScroll(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanVerticallyScrollProperty, binding));
        return style;
    }

    public static Style SetScrollViewerCanVerticallyScroll(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanVerticallyScrollProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerCanVerticallyScroll(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanVerticallyScrollProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerCanVerticallyScroll(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanVerticallyScrollProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerCanVerticallyScroll(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.CanVerticallyScrollProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ExtentProperty

    public static Style SetScrollViewerExtent(this Style style, Avalonia.Size value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ExtentProperty, value));
        return style;
    }

    public static Style SetScrollViewerExtent(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ExtentProperty, binding));
        return style;
    }

    public static Style SetScrollViewerExtent(this Style style, IObservable<Avalonia.Size> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ExtentProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerExtent(this KeyFrame keyFrame, Avalonia.Size value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ExtentProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerExtent(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ExtentProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerExtent(this KeyFrame keyFrame, IObservable<Avalonia.Size> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ExtentProperty, observable.ToBinding()));
        return keyFrame;
    }

    // OffsetProperty

    public static Style SetScrollViewerOffset(this Style style, Avalonia.Vector value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.OffsetProperty, value));
        return style;
    }

    public static Style SetScrollViewerOffset(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.OffsetProperty, binding));
        return style;
    }

    public static Style SetScrollViewerOffset(this Style style, IObservable<Avalonia.Vector> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.OffsetProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerOffset(this KeyFrame keyFrame, Avalonia.Vector value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.OffsetProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerOffset(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.OffsetProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerOffset(this KeyFrame keyFrame, IObservable<Avalonia.Vector> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.OffsetProperty, observable.ToBinding()));
        return keyFrame;
    }

    // ViewportProperty

    public static Style SetScrollViewerViewport(this Style style, Avalonia.Size value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ViewportProperty, value));
        return style;
    }

    public static Style SetScrollViewerViewport(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ViewportProperty, binding));
        return style;
    }

    public static Style SetScrollViewerViewport(this Style style, IObservable<Avalonia.Size> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ViewportProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerViewport(this KeyFrame keyFrame, Avalonia.Size value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ViewportProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerViewport(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ViewportProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerViewport(this KeyFrame keyFrame, IObservable<Avalonia.Size> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.ViewportProperty, observable.ToBinding()));
        return keyFrame;
    }

    // LargeChangeProperty

    public static Style SetScrollViewerLargeChange(this Style style, Avalonia.Size value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.LargeChangeProperty, value));
        return style;
    }

    public static Style SetScrollViewerLargeChange(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.LargeChangeProperty, binding));
        return style;
    }

    public static Style SetScrollViewerLargeChange(this Style style, IObservable<Avalonia.Size> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.LargeChangeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerLargeChange(this KeyFrame keyFrame, Avalonia.Size value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.LargeChangeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerLargeChange(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.LargeChangeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerLargeChange(this KeyFrame keyFrame, IObservable<Avalonia.Size> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.LargeChangeProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SmallChangeProperty

    public static Style SetScrollViewerSmallChange(this Style style, Avalonia.Size value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.SmallChangeProperty, value));
        return style;
    }

    public static Style SetScrollViewerSmallChange(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.SmallChangeProperty, binding));
        return style;
    }

    public static Style SetScrollViewerSmallChange(this Style style, IObservable<Avalonia.Size> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.SmallChangeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerSmallChange(this KeyFrame keyFrame, Avalonia.Size value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.SmallChangeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerSmallChange(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.SmallChangeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerSmallChange(this KeyFrame keyFrame, IObservable<Avalonia.Size> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.SmallChangeProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HorizontalScrollBarMaximumProperty

    public static Style SetScrollViewerHorizontalScrollBarMaximum(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarMaximumProperty, value));
        return style;
    }

    public static Style SetScrollViewerHorizontalScrollBarMaximum(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarMaximumProperty, binding));
        return style;
    }

    public static Style SetScrollViewerHorizontalScrollBarMaximum(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarMaximumProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarMaximum(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarMaximumProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarMaximum(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarMaximumProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarMaximum(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarMaximumProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HorizontalScrollBarValueProperty

    public static Style SetScrollViewerHorizontalScrollBarValue(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarValueProperty, value));
        return style;
    }

    public static Style SetScrollViewerHorizontalScrollBarValue(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarValueProperty, binding));
        return style;
    }

    public static Style SetScrollViewerHorizontalScrollBarValue(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarValueProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarValue(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarValueProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarValue(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarValueProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarValue(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarValueProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HorizontalScrollBarViewportSizeProperty

    public static Style SetScrollViewerHorizontalScrollBarViewportSize(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarViewportSizeProperty, value));
        return style;
    }

    public static Style SetScrollViewerHorizontalScrollBarViewportSize(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarViewportSizeProperty, binding));
        return style;
    }

    public static Style SetScrollViewerHorizontalScrollBarViewportSize(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarViewportSizeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarViewportSize(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarViewportSizeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarViewportSize(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarViewportSizeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarViewportSize(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarViewportSizeProperty, observable.ToBinding()));
        return keyFrame;
    }

    // HorizontalScrollBarVisibilityProperty

    public static Style SetScrollViewerHorizontalScrollBarVisibility(this Style style, Avalonia.Controls.Primitives.ScrollBarVisibility value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty, value));
        return style;
    }

    public static Style SetScrollViewerHorizontalScrollBarVisibility(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty, binding));
        return style;
    }

    public static Style SetScrollViewerHorizontalScrollBarVisibility(this Style style, IObservable<Avalonia.Controls.Primitives.ScrollBarVisibility> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarVisibility(this KeyFrame keyFrame, Avalonia.Controls.Primitives.ScrollBarVisibility value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarVisibility(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerHorizontalScrollBarVisibility(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Primitives.ScrollBarVisibility> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VerticalScrollBarMaximumProperty

    public static Style SetScrollViewerVerticalScrollBarMaximum(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarMaximumProperty, value));
        return style;
    }

    public static Style SetScrollViewerVerticalScrollBarMaximum(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarMaximumProperty, binding));
        return style;
    }

    public static Style SetScrollViewerVerticalScrollBarMaximum(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarMaximumProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarMaximum(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarMaximumProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarMaximum(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarMaximumProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarMaximum(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarMaximumProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VerticalScrollBarValueProperty

    public static Style SetScrollViewerVerticalScrollBarValue(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarValueProperty, value));
        return style;
    }

    public static Style SetScrollViewerVerticalScrollBarValue(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarValueProperty, binding));
        return style;
    }

    public static Style SetScrollViewerVerticalScrollBarValue(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarValueProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarValue(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarValueProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarValue(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarValueProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarValue(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarValueProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VerticalScrollBarViewportSizeProperty

    public static Style SetScrollViewerVerticalScrollBarViewportSize(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarViewportSizeProperty, value));
        return style;
    }

    public static Style SetScrollViewerVerticalScrollBarViewportSize(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarViewportSizeProperty, binding));
        return style;
    }

    public static Style SetScrollViewerVerticalScrollBarViewportSize(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarViewportSizeProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarViewportSize(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarViewportSizeProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarViewportSize(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarViewportSizeProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarViewportSize(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarViewportSizeProperty, observable.ToBinding()));
        return keyFrame;
    }

    // VerticalScrollBarVisibilityProperty

    public static Style SetScrollViewerVerticalScrollBarVisibility(this Style style, Avalonia.Controls.Primitives.ScrollBarVisibility value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty, value));
        return style;
    }

    public static Style SetScrollViewerVerticalScrollBarVisibility(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty, binding));
        return style;
    }

    public static Style SetScrollViewerVerticalScrollBarVisibility(this Style style, IObservable<Avalonia.Controls.Primitives.ScrollBarVisibility> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarVisibility(this KeyFrame keyFrame, Avalonia.Controls.Primitives.ScrollBarVisibility value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarVisibility(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerVerticalScrollBarVisibility(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Primitives.ScrollBarVisibility> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsExpandedProperty

    public static Style SetScrollViewerIsExpanded(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsExpandedProperty, value));
        return style;
    }

    public static Style SetScrollViewerIsExpanded(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsExpandedProperty, binding));
        return style;
    }

    public static Style SetScrollViewerIsExpanded(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsExpandedProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerIsExpanded(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsExpandedProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerIsExpanded(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsExpandedProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerIsExpanded(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsExpandedProperty, observable.ToBinding()));
        return keyFrame;
    }

    // AllowAutoHideProperty

    public static Style SetScrollViewerAllowAutoHide(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.AllowAutoHideProperty, value));
        return style;
    }

    public static Style SetScrollViewerAllowAutoHide(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.AllowAutoHideProperty, binding));
        return style;
    }

    public static Style SetScrollViewerAllowAutoHide(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.AllowAutoHideProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerAllowAutoHide(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.AllowAutoHideProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerAllowAutoHide(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.AllowAutoHideProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerAllowAutoHide(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.AllowAutoHideProperty, observable.ToBinding()));
        return keyFrame;
    }

    // IsScrollChainingEnabledProperty

    public static Style SetScrollViewerIsScrollChainingEnabled(this Style style, System.Boolean value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsScrollChainingEnabledProperty, value));
        return style;
    }

    public static Style SetScrollViewerIsScrollChainingEnabled(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsScrollChainingEnabledProperty, binding));
        return style;
    }

    public static Style SetScrollViewerIsScrollChainingEnabled(this Style style, IObservable<System.Boolean> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsScrollChainingEnabledProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetScrollViewerIsScrollChainingEnabled(this KeyFrame keyFrame, System.Boolean value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsScrollChainingEnabledProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerIsScrollChainingEnabled(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsScrollChainingEnabledProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetScrollViewerIsScrollChainingEnabled(this KeyFrame keyFrame, IObservable<System.Boolean> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.ScrollViewer.IsScrollChainingEnabledProperty, observable.ToBinding()));
        return keyFrame;
    }

}
