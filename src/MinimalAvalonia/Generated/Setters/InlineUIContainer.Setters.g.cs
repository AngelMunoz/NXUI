// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class InlineUIContainerSetters
{
    // ChildProperty

    public static Style SetInlineUIContainerChild(this Style style, Avalonia.Controls.IControl value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Documents.InlineUIContainer.ChildProperty, value));
        return style;
    }

    public static Style SetInlineUIContainerChild(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Documents.InlineUIContainer.ChildProperty, binding));
        return style;
    }

    public static Style SetInlineUIContainerChild(this Style style, IObservable<Avalonia.Controls.IControl> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Documents.InlineUIContainer.ChildProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetInlineUIContainerChild(this KeyFrame keyFrame, Avalonia.Controls.IControl value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Documents.InlineUIContainer.ChildProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetInlineUIContainerChild(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Documents.InlineUIContainer.ChildProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetInlineUIContainerChild(this KeyFrame keyFrame, IObservable<Avalonia.Controls.IControl> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Documents.InlineUIContainer.ChildProperty, observable.ToBinding()));
        return keyFrame;
    }
}
