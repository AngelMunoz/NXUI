// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class CanvasSetters
{
    // LeftProperty

    public static Style SetCanvasLeft(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.LeftProperty, value));
        return style;
    }

    public static Style SetCanvasLeft(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.LeftProperty, binding));
        return style;
    }

    public static Style SetCanvasLeft(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.LeftProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCanvasLeft(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.LeftProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCanvasLeft(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.LeftProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCanvasLeft(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.LeftProperty, observable.ToBinding()));
        return keyFrame;
    }

    // TopProperty

    public static Style SetCanvasTop(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.TopProperty, value));
        return style;
    }

    public static Style SetCanvasTop(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.TopProperty, binding));
        return style;
    }

    public static Style SetCanvasTop(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.TopProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCanvasTop(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.TopProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCanvasTop(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.TopProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCanvasTop(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.TopProperty, observable.ToBinding()));
        return keyFrame;
    }

    // RightProperty

    public static Style SetCanvasRight(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.RightProperty, value));
        return style;
    }

    public static Style SetCanvasRight(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.RightProperty, binding));
        return style;
    }

    public static Style SetCanvasRight(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.RightProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCanvasRight(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.RightProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCanvasRight(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.RightProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCanvasRight(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.RightProperty, observable.ToBinding()));
        return keyFrame;
    }

    // BottomProperty

    public static Style SetCanvasBottom(this Style style, System.Double value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.BottomProperty, value));
        return style;
    }

    public static Style SetCanvasBottom(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.BottomProperty, binding));
        return style;
    }

    public static Style SetCanvasBottom(this Style style, IObservable<System.Double> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.Canvas.BottomProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCanvasBottom(this KeyFrame keyFrame, System.Double value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.BottomProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCanvasBottom(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.BottomProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCanvasBottom(this KeyFrame keyFrame, IObservable<System.Double> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.Canvas.BottomProperty, observable.ToBinding()));
        return keyFrame;
    }
}
