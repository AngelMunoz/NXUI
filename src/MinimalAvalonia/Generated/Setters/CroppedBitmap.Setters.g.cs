// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class CroppedBitmapSetters
{
    // SourceProperty

    public static Style SetCroppedBitmapSource(this Style style, Avalonia.Media.IImage value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceProperty, value));
        return style;
    }

    public static Style SetCroppedBitmapSource(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceProperty, binding));
        return style;
    }

    public static Style SetCroppedBitmapSource(this Style style, IObservable<Avalonia.Media.IImage> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCroppedBitmapSource(this KeyFrame keyFrame, Avalonia.Media.IImage value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCroppedBitmapSource(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCroppedBitmapSource(this KeyFrame keyFrame, IObservable<Avalonia.Media.IImage> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceProperty, observable.ToBinding()));
        return keyFrame;
    }

    // SourceRectProperty

    public static Style SetCroppedBitmapSourceRect(this Style style, Avalonia.PixelRect value)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceRectProperty, value));
        return style;
    }

    public static Style SetCroppedBitmapSourceRect(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceRectProperty, binding));
        return style;
    }

    public static Style SetCroppedBitmapSourceRect(this Style style, IObservable<Avalonia.PixelRect> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceRectProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetCroppedBitmapSourceRect(this KeyFrame keyFrame, Avalonia.PixelRect value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceRectProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetCroppedBitmapSourceRect(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceRectProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetCroppedBitmapSourceRect(this KeyFrame keyFrame, IObservable<Avalonia.PixelRect> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Media.Imaging.CroppedBitmap.SourceRectProperty, observable.ToBinding()));
        return keyFrame;
    }
}
