// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class SplitButtonSetters
{
    // CommandProperty

    public static Style SetSplitButtonCommand(this Style style, System.Windows.Input.ICommand value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandProperty, value));
        return style;
    }

    public static Style SetSplitButtonCommand(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandProperty, binding));
        return style;
    }

    public static Style SetSplitButtonCommand(this Style style, IObservable<System.Windows.Input.ICommand> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetSplitButtonCommand(this KeyFrame keyFrame, System.Windows.Input.ICommand value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetSplitButtonCommand(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetSplitButtonCommand(this KeyFrame keyFrame, IObservable<System.Windows.Input.ICommand> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandProperty, observable.ToBinding()));
        return keyFrame;
    }

    // CommandParameterProperty

    public static Style SetSplitButtonCommandParameter(this Style style, System.Object value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandParameterProperty, value));
        return style;
    }

    public static Style SetSplitButtonCommandParameter(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandParameterProperty, binding));
        return style;
    }

    public static Style SetSplitButtonCommandParameter(this Style style, IObservable<System.Object> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandParameterProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetSplitButtonCommandParameter(this KeyFrame keyFrame, System.Object value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandParameterProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetSplitButtonCommandParameter(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandParameterProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetSplitButtonCommandParameter(this KeyFrame keyFrame, IObservable<System.Object> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.SplitButton.CommandParameterProperty, observable.ToBinding()));
        return keyFrame;
    }

    // FlyoutProperty

    public static Style SetSplitButtonFlyout(this Style style, Avalonia.Controls.Primitives.FlyoutBase value)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.SplitButton.FlyoutProperty, value));
        return style;
    }

    public static Style SetSplitButtonFlyout(this Style style, Avalonia.Data.IBinding binding)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.SplitButton.FlyoutProperty, binding));
        return style;
    }

    public static Style SetSplitButtonFlyout(this Style style, IObservable<Avalonia.Controls.Primitives.FlyoutBase> observable)
    {
        style.Setters.Add(new Setter(Avalonia.Controls.SplitButton.FlyoutProperty, observable.ToBinding()));
        return style;
    }

    public static KeyFrame SetSplitButtonFlyout(this KeyFrame keyFrame, Avalonia.Controls.Primitives.FlyoutBase value)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.SplitButton.FlyoutProperty, value));
        return keyFrame;
    }

    public static KeyFrame SetSplitButtonFlyout(this KeyFrame keyFrame, Avalonia.Data.IBinding binding)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.SplitButton.FlyoutProperty, binding));
        return keyFrame;
    }

    public static KeyFrame SetSplitButtonFlyout(this KeyFrame keyFrame, IObservable<Avalonia.Controls.Primitives.FlyoutBase> observable)
    {
        keyFrame.Setters.Add(new Setter(Avalonia.Controls.SplitButton.FlyoutProperty, observable.ToBinding()));
        return keyFrame;
    }

}
